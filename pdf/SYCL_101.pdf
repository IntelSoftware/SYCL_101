%PDF-1.4
%“Œ‹ž ReportLab Generated PDF document http://www.reportlab.com
1 0 obj
<<
/F1 2 0 R /F2 3 0 R /F3 202 0 R /F4 328 0 R /F5 329 0 R /F6 347 0 R
>>
endobj
2 0 obj
<<
/BaseFont /Helvetica /Encoding /WinAnsiEncoding /Name /F1 /Subtype /Type1 /Type /Font
>>
endobj
3 0 obj
<<
/BaseFont /Helvetica-Bold /Encoding /WinAnsiEncoding /Name /F2 /Subtype /Type1 /Type /Font
>>
endobj
4 0 obj
<<
/Contents 544 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
5 0 obj
<<
/Contents 545 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
6 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 323 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 40.01575 755.8394 79.22625 766.0394 ] /Subtype /Link /Type /Annot
>>
endobj
7 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 323 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 550.5338 756.4769 555.2598 766.6769 ] /Subtype /Link /Type /Annot
>>
endobj
8 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 323 0 R /XYZ 40.01575 417.0394 0 ] /Rect [ 60.01575 739.6394 164.8972 749.8394 ] /Subtype /Link /Type /Annot
>>
endobj
9 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 323 0 R /XYZ 40.01575 417.0394 0 ] /Rect [ 550.5338 740.2769 555.2598 750.4769 ] /Subtype /Link /Type /Annot
>>
endobj
10 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 323 0 R /XYZ 40.01575 381.8394 0 ] /Rect [ 80.01575 723.4394 306.7787 733.6394 ] /Subtype /Link /Type /Annot
>>
endobj
11 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 323 0 R /XYZ 40.01575 381.8394 0 ] /Rect [ 550.5338 724.0769 555.2598 734.2769 ] /Subtype /Link /Type /Annot
>>
endobj
12 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 323 0 R /XYZ 40.01575 349.0394 0 ] /Rect [ 100.0157 707.2394 192.1387 717.4394 ] /Subtype /Link /Type /Annot
>>
endobj
13 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 323 0 R /XYZ 40.01575 349.0394 0 ] /Rect [ 550.5338 707.8769 555.2598 718.0769 ] /Subtype /Link /Type /Annot
>>
endobj
14 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 323 0 R /XYZ 40.01575 198.6394 0 ] /Rect [ 100.0157 691.6769 194.9777 701.8769 ] /Subtype /Link /Type /Annot
>>
endobj
15 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 323 0 R /XYZ 40.01575 198.6394 0 ] /Rect [ 550.5338 691.6769 555.2598 701.8769 ] /Subtype /Link /Type /Annot
>>
endobj
16 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 323 0 R /XYZ 40.01575 102.2394 0 ] /Rect [ 100.0157 674.8394 316.8677 685.0394 ] /Subtype /Link /Type /Annot
>>
endobj
17 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 323 0 R /XYZ 40.01575 102.2394 0 ] /Rect [ 550.5338 675.4769 555.2598 685.6769 ] /Subtype /Link /Type /Annot
>>
endobj
18 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 324 0 R /XYZ 40.01575 687.0394 0 ] /Rect [ 100.0157 658.6394 384.8847 668.8394 ] /Subtype /Link /Type /Annot
>>
endobj
19 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 324 0 R /XYZ 40.01575 687.0394 0 ] /Rect [ 550.5338 659.2769 555.2598 669.4769 ] /Subtype /Link /Type /Annot
>>
endobj
20 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 324 0 R /XYZ 40.01575 536.6394 0 ] /Rect [ 100.0157 642.4394 232.2927 652.6394 ] /Subtype /Link /Type /Annot
>>
endobj
21 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 324 0 R /XYZ 40.01575 536.6394 0 ] /Rect [ 550.5338 643.0769 555.2598 653.2769 ] /Subtype /Link /Type /Annot
>>
endobj
22 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 324 0 R /XYZ 40.01575 368.2394 0 ] /Rect [ 100.0157 626.2394 136.3787 636.4394 ] /Subtype /Link /Type /Annot
>>
endobj
23 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 324 0 R /XYZ 40.01575 368.2394 0 ] /Rect [ 550.5338 626.8769 555.2598 637.0769 ] /Subtype /Link /Type /Annot
>>
endobj
24 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 324 0 R /XYZ 40.01575 205.8394 0 ] /Rect [ 80.01575 610.0394 136.2347 620.2394 ] /Subtype /Link /Type /Annot
>>
endobj
25 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 324 0 R /XYZ 40.01575 205.8394 0 ] /Rect [ 550.5338 610.6769 555.2598 620.8769 ] /Subtype /Link /Type /Annot
>>
endobj
26 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 324 0 R /XYZ 40.01575 143.0394 0 ] /Rect [ 100.0157 593.8394 164.7347 604.0394 ] /Subtype /Link /Type /Annot
>>
endobj
27 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 324 0 R /XYZ 40.01575 143.0394 0 ] /Rect [ 550.5338 594.4769 555.2598 604.6769 ] /Subtype /Link /Type /Annot
>>
endobj
28 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 325 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 100.0157 577.6394 209.5977 587.8394 ] /Subtype /Link /Type /Annot
>>
endobj
29 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 325 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 550.5338 578.2769 555.2598 588.4769 ] /Subtype /Link /Type /Annot
>>
endobj
30 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 325 0 R /XYZ 40.01575 690.6394 0 ] /Rect [ 100.0157 561.4394 158.1302 571.6394 ] /Subtype /Link /Type /Annot
>>
endobj
31 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 325 0 R /XYZ 40.01575 690.6394 0 ] /Rect [ 550.5338 562.0769 555.2598 572.2769 ] /Subtype /Link /Type /Annot
>>
endobj
32 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 325 0 R /XYZ 40.01575 582.2394 0 ] /Rect [ 100.0157 545.2394 215.2842 555.4394 ] /Subtype /Link /Type /Annot
>>
endobj
33 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 325 0 R /XYZ 40.01575 582.2394 0 ] /Rect [ 550.5338 545.8769 555.2598 556.0769 ] /Subtype /Link /Type /Annot
>>
endobj
34 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 325 0 R /XYZ 40.01575 485.8394 0 ] /Rect [ 100.0157 529.0394 235.1317 539.2394 ] /Subtype /Link /Type /Annot
>>
endobj
35 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 325 0 R /XYZ 40.01575 485.8394 0 ] /Rect [ 550.5338 529.6769 555.2598 539.8769 ] /Subtype /Link /Type /Annot
>>
endobj
36 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 325 0 R /XYZ 40.01575 401.4394 0 ] /Rect [ 100.0157 513.4769 136.3787 523.6769 ] /Subtype /Link /Type /Annot
>>
endobj
37 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 325 0 R /XYZ 40.01575 401.4394 0 ] /Rect [ 550.5338 513.4769 555.2598 523.6769 ] /Subtype /Link /Type /Annot
>>
endobj
38 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 325 0 R /XYZ 40.01575 317.0394 0 ] /Rect [ 60.01575 496.6394 116.2262 506.8394 ] /Subtype /Link /Type /Annot
>>
endobj
39 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 325 0 R /XYZ 40.01575 317.0394 0 ] /Rect [ 550.5338 497.2769 555.2598 507.4769 ] /Subtype /Link /Type /Annot
>>
endobj
40 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 325 0 R /XYZ 40.01575 281.8394 0 ] /Rect [ 80.01575 480.4394 137.6457 490.6394 ] /Subtype /Link /Type /Annot
>>
endobj
41 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 325 0 R /XYZ 40.01575 281.8394 0 ] /Rect [ 550.5338 481.0769 555.2598 491.2769 ] /Subtype /Link /Type /Annot
>>
endobj
42 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 325 0 R /XYZ 40.01575 249.0394 0 ] /Rect [ 100.0157 464.2394 135.4437 474.4394 ] /Subtype /Link /Type /Annot
>>
endobj
43 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 325 0 R /XYZ 40.01575 249.0394 0 ] /Rect [ 550.5338 464.8769 555.2598 475.0769 ] /Subtype /Link /Type /Annot
>>
endobj
44 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 325 0 R /XYZ 40.01575 128.6394 0 ] /Rect [ 100.0157 448.0394 158.1217 458.2394 ] /Subtype /Link /Type /Annot
>>
endobj
45 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 325 0 R /XYZ 40.01575 128.6394 0 ] /Rect [ 550.5338 448.6769 555.2598 458.8769 ] /Subtype /Link /Type /Annot
>>
endobj
46 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 326 0 R /XYZ 40.01575 537.0394 0 ] /Rect [ 100.0157 431.8394 152.4522 442.0394 ] /Subtype /Link /Type /Annot
>>
endobj
47 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 326 0 R /XYZ 40.01575 537.0394 0 ] /Rect [ 550.5338 432.4769 555.2598 442.6769 ] /Subtype /Link /Type /Annot
>>
endobj
48 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 326 0 R /XYZ 40.01575 170.6394 0 ] /Rect [ 100.0157 415.6394 162.3717 425.8394 ] /Subtype /Link /Type /Annot
>>
endobj
49 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 326 0 R /XYZ 40.01575 170.6394 0 ] /Rect [ 550.5338 416.2769 555.2598 426.4769 ] /Subtype /Link /Type /Annot
>>
endobj
50 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 330 0 R /XYZ 40.01575 651.0394 0 ] /Rect [ 80.01575 399.4394 195.2842 409.6394 ] /Subtype /Link /Type /Annot
>>
endobj
51 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 330 0 R /XYZ 40.01575 651.0394 0 ] /Rect [ 550.5338 400.0769 555.2598 410.2769 ] /Subtype /Link /Type /Annot
>>
endobj
52 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 330 0 R /XYZ 40.01575 588.2394 0 ] /Rect [ 100.0157 383.2394 169.4692 393.4394 ] /Subtype /Link /Type /Annot
>>
endobj
53 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 330 0 R /XYZ 40.01575 588.2394 0 ] /Rect [ 550.5338 383.8769 555.2598 394.0769 ] /Subtype /Link /Type /Annot
>>
endobj
54 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 330 0 R /XYZ 40.01575 425.8394 0 ] /Rect [ 100.0157 367.0394 227.0992 377.2394 ] /Subtype /Link /Type /Annot
>>
endobj
55 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 330 0 R /XYZ 40.01575 425.8394 0 ] /Rect [ 550.5338 367.6769 555.2598 377.8769 ] /Subtype /Link /Type /Annot
>>
endobj
56 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 331 0 R /XYZ 40.01575 187.0394 0 ] /Rect [ 100.0157 350.8394 265.8337 361.0394 ] /Subtype /Link /Type /Annot
>>
endobj
57 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 331 0 R /XYZ 40.01575 187.0394 0 ] /Rect [ 550.5338 351.4769 555.2598 361.6769 ] /Subtype /Link /Type /Annot
>>
endobj
58 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 332 0 R /XYZ 40.01575 279.4394 0 ] /Rect [ 100.0157 334.6394 221.8972 344.8394 ] /Subtype /Link /Type /Annot
>>
endobj
59 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 332 0 R /XYZ 40.01575 279.4394 0 ] /Rect [ 550.5338 335.2769 555.2598 345.4769 ] /Subtype /Link /Type /Annot
>>
endobj
60 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 333 0 R /XYZ 40.01575 663.0394 0 ] /Rect [ 80.01575 318.4394 194.8082 328.6394 ] /Subtype /Link /Type /Annot
>>
endobj
61 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 333 0 R /XYZ 40.01575 663.0394 0 ] /Rect [ 550.5338 319.0769 555.2598 329.2769 ] /Subtype /Link /Type /Annot
>>
endobj
62 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 334 0 R /XYZ 40.01575 585.0394 0 ] /Rect [ 80.01575 302.2394 126.3067 312.4394 ] /Subtype /Link /Type /Annot
>>
endobj
63 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 334 0 R /XYZ 40.01575 585.0394 0 ] /Rect [ 550.5338 302.8769 555.2598 313.0769 ] /Subtype /Link /Type /Annot
>>
endobj
64 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 334 0 R /XYZ 40.01575 354.2394 0 ] /Rect [ 60.01575 286.0394 117.1782 296.2394 ] /Subtype /Link /Type /Annot
>>
endobj
65 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 334 0 R /XYZ 40.01575 354.2394 0 ] /Rect [ 550.5338 286.6769 555.2598 296.8769 ] /Subtype /Link /Type /Annot
>>
endobj
66 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 334 0 R /XYZ 40.01575 319.0394 0 ] /Rect [ 80.01575 269.8394 156.5327 280.0394 ] /Subtype /Link /Type /Annot
>>
endobj
67 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 334 0 R /XYZ 40.01575 319.0394 0 ] /Rect [ 550.5338 270.4769 555.2598 280.6769 ] /Subtype /Link /Type /Annot
>>
endobj
68 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 334 0 R /XYZ 40.01575 214.2394 0 ] /Rect [ 100.0157 253.6394 144.4282 263.8394 ] /Subtype /Link /Type /Annot
>>
endobj
69 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 334 0 R /XYZ 40.01575 214.2394 0 ] /Rect [ 550.5338 254.2769 555.2598 264.4769 ] /Subtype /Link /Type /Annot
>>
endobj
70 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 334 0 R /XYZ 40.01575 165.8394 0 ] /Rect [ 120.0157 237.4394 208.8237 247.6394 ] /Subtype /Link /Type /Annot
>>
endobj
71 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 334 0 R /XYZ 40.01575 165.8394 0 ] /Rect [ 550.5338 238.0769 555.2598 248.2769 ] /Subtype /Link /Type /Annot
>>
endobj
72 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 335 0 R /XYZ 40.01575 740.2394 0 ] /Rect [ 120.0157 221.2394 188.9847 231.4394 ] /Subtype /Link /Type /Annot
>>
endobj
73 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 335 0 R /XYZ 40.01575 740.2394 0 ] /Rect [ 545.8078 221.8769 555.2598 232.0769 ] /Subtype /Link /Type /Annot
>>
endobj
74 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 335 0 R /XYZ 40.01575 272.2394 0 ] /Rect [ 100.0157 205.0394 264.4057 215.2394 ] /Subtype /Link /Type /Annot
>>
endobj
75 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 335 0 R /XYZ 40.01575 272.2394 0 ] /Rect [ 545.8078 205.6769 555.2598 215.8769 ] /Subtype /Link /Type /Annot
>>
endobj
76 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 335 0 R /XYZ 40.01575 223.8394 0 ] /Rect [ 120.0157 188.8394 188.5172 199.0394 ] /Subtype /Link /Type /Annot
>>
endobj
77 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 335 0 R /XYZ 40.01575 223.8394 0 ] /Rect [ 545.8078 189.4769 555.2598 199.6769 ] /Subtype /Link /Type /Annot
>>
endobj
78 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 336 0 R /XYZ 40.01575 704.2394 0 ] /Rect [ 120.0157 172.6394 271.6387 182.8394 ] /Subtype /Link /Type /Annot
>>
endobj
79 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 336 0 R /XYZ 40.01575 704.2394 0 ] /Rect [ 545.8078 173.2769 555.2598 183.4769 ] /Subtype /Link /Type /Annot
>>
endobj
80 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 336 0 R /XYZ 40.01575 521.4394 0 ] /Rect [ 120.0157 156.4394 214.0172 166.6394 ] /Subtype /Link /Type /Annot
>>
endobj
81 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 336 0 R /XYZ 40.01575 521.4394 0 ] /Rect [ 545.8078 157.0769 555.2598 167.2769 ] /Subtype /Link /Type /Annot
>>
endobj
82 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 336 0 R /XYZ 40.01575 165.0394 0 ] /Rect [ 100.0157 140.2394 269.1062 150.4394 ] /Subtype /Link /Type /Annot
>>
endobj
83 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 336 0 R /XYZ 40.01575 165.0394 0 ] /Rect [ 545.8078 140.8769 555.2598 151.0769 ] /Subtype /Link /Type /Annot
>>
endobj
84 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 337 0 R /XYZ 40.01575 468.6394 0 ] /Rect [ 80.01575 124.0394 133.3957 134.2394 ] /Subtype /Link /Type /Annot
>>
endobj
85 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 337 0 R /XYZ 40.01575 468.6394 0 ] /Rect [ 545.8078 124.6769 555.2598 134.8769 ] /Subtype /Link /Type /Annot
>>
endobj
86 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 337 0 R /XYZ 40.01575 327.8394 0 ] /Rect [ 100.0157 108.4769 144.4282 118.6769 ] /Subtype /Link /Type /Annot
>>
endobj
87 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 337 0 R /XYZ 40.01575 327.8394 0 ] /Rect [ 545.8078 108.4769 555.2598 118.6769 ] /Subtype /Link /Type /Annot
>>
endobj
88 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 337 0 R /XYZ 40.01575 243.4394 0 ] /Rect [ 100.0157 91.63937 194.9607 101.8394 ] /Subtype /Link /Type /Annot
>>
endobj
89 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 337 0 R /XYZ 40.01575 243.4394 0 ] /Rect [ 545.8078 92.27687 555.2598 102.4769 ] /Subtype /Link /Type /Annot
>>
endobj
90 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 338 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 100.0157 75.43937 224.2602 85.63937 ] /Subtype /Link /Type /Annot
>>
endobj
91 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 338 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 545.8078 76.07687 555.2598 86.27687 ] /Subtype /Link /Type /Annot
>>
endobj
92 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 338 0 R /XYZ 40.01575 678.6394 0 ] /Rect [ 120.0157 59.23937 228.6542 69.43937 ] /Subtype /Link /Type /Annot
>>
endobj
93 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 338 0 R /XYZ 40.01575 678.6394 0 ] /Rect [ 545.8078 59.87687 555.2598 70.07687 ] /Subtype /Link /Type /Annot
>>
endobj
94 0 obj
<<
/Annots [ 6 0 R 7 0 R 8 0 R 9 0 R 10 0 R 11 0 R 12 0 R 13 0 R 14 0 R 15 0 R 
  16 0 R 17 0 R 18 0 R 19 0 R 20 0 R 21 0 R 22 0 R 23 0 R 24 0 R 25 0 R 
  26 0 R 27 0 R 28 0 R 29 0 R 30 0 R 31 0 R 32 0 R 33 0 R 34 0 R 35 0 R 
  36 0 R 37 0 R 38 0 R 39 0 R 40 0 R 41 0 R 42 0 R 43 0 R 44 0 R 45 0 R 
  46 0 R 47 0 R 48 0 R 49 0 R 50 0 R 51 0 R 52 0 R 53 0 R 54 0 R 55 0 R 
  56 0 R 57 0 R 58 0 R 59 0 R 60 0 R 61 0 R 62 0 R 63 0 R 64 0 R 65 0 R 
  66 0 R 67 0 R 68 0 R 69 0 R 70 0 R 71 0 R 72 0 R 73 0 R 74 0 R 75 0 R 
  76 0 R 77 0 R 78 0 R 79 0 R 80 0 R 81 0 R 82 0 R 83 0 R 84 0 R 85 0 R 
  86 0 R 87 0 R 88 0 R 89 0 R 90 0 R 91 0 R 92 0 R 93 0 R ] /Contents 546 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
95 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 338 0 R /XYZ 40.01575 565.4394 0 ] /Rect [ 100.0157 785.8394 200.1712 796.0394 ] /Subtype /Link /Type /Annot
>>
endobj
96 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 338 0 R /XYZ 40.01575 565.4394 0 ] /Rect [ 545.8078 786.4769 555.2598 796.6769 ] /Subtype /Link /Type /Annot
>>
endobj
97 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 338 0 R /XYZ 40.01575 505.0394 0 ] /Rect [ 120.0157 769.6394 188.5172 779.8394 ] /Subtype /Link /Type /Annot
>>
endobj
98 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 338 0 R /XYZ 40.01575 505.0394 0 ] /Rect [ 545.8078 770.2769 555.2598 780.4769 ] /Subtype /Link /Type /Annot
>>
endobj
99 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 339 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 120.0157 753.4394 217.3237 763.6394 ] /Subtype /Link /Type /Annot
>>
endobj
100 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 339 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 545.8078 754.0769 555.2598 764.2769 ] /Subtype /Link /Type /Annot
>>
endobj
101 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 339 0 R /XYZ 40.01575 179.0394 0 ] /Rect [ 120.0157 737.2394 237.6557 747.4394 ] /Subtype /Link /Type /Annot
>>
endobj
102 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 339 0 R /XYZ 40.01575 179.0394 0 ] /Rect [ 545.8078 737.8769 555.2598 748.0769 ] /Subtype /Link /Type /Annot
>>
endobj
103 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 342 0 R /XYZ 40.01575 645.4394 0 ] /Rect [ 120.0157 721.0394 294.3252 731.2394 ] /Subtype /Link /Type /Annot
>>
endobj
104 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 342 0 R /XYZ 40.01575 645.4394 0 ] /Rect [ 545.8078 721.6769 555.2598 731.8769 ] /Subtype /Link /Type /Annot
>>
endobj
105 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 342 0 R /XYZ 40.01575 418.2394 0 ] /Rect [ 100.0157 704.8394 209.1302 715.0394 ] /Subtype /Link /Type /Annot
>>
endobj
106 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 342 0 R /XYZ 40.01575 418.2394 0 ] /Rect [ 545.8078 705.4769 555.2598 715.6769 ] /Subtype /Link /Type /Annot
>>
endobj
107 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 342 0 R /XYZ 40.01575 297.8394 0 ] /Rect [ 120.0157 688.6394 155.4437 698.8394 ] /Subtype /Link /Type /Annot
>>
endobj
108 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 342 0 R /XYZ 40.01575 297.8394 0 ] /Rect [ 545.8078 689.2769 555.2598 699.4769 ] /Subtype /Link /Type /Annot
>>
endobj
109 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 345 0 R /XYZ 40.01575 747.0394 0 ] /Rect [ 120.0157 672.4394 182.3717 682.6394 ] /Subtype /Link /Type /Annot
>>
endobj
110 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 345 0 R /XYZ 40.01575 747.0394 0 ] /Rect [ 545.8078 673.0769 555.2598 683.2769 ] /Subtype /Link /Type /Annot
>>
endobj
111 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 345 0 R /XYZ 40.01575 169.4394 0 ] /Rect [ 100.0157 656.8769 136.3787 667.0769 ] /Subtype /Link /Type /Annot
>>
endobj
112 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 345 0 R /XYZ 40.01575 169.4394 0 ] /Rect [ 545.8078 656.8769 555.2598 667.0769 ] /Subtype /Link /Type /Annot
>>
endobj
113 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 345 0 R /XYZ 40.01575 97.03937 0 ] /Rect [ 80.01575 640.0394 136.2262 650.2394 ] /Subtype /Link /Type /Annot
>>
endobj
114 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 345 0 R /XYZ 40.01575 97.03937 0 ] /Rect [ 545.8078 640.6769 555.2598 650.8769 ] /Subtype /Link /Type /Annot
>>
endobj
115 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 346 0 R /XYZ 40.01575 723.0394 0 ] /Rect [ 100.0157 623.8394 323.0047 634.0394 ] /Subtype /Link /Type /Annot
>>
endobj
116 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 346 0 R /XYZ 40.01575 723.0394 0 ] /Rect [ 545.8078 624.4769 555.2598 634.6769 ] /Subtype /Link /Type /Annot
>>
endobj
117 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 346 0 R /XYZ 40.01575 524.6394 0 ] /Rect [ 100.0157 607.6394 156.2432 617.8394 ] /Subtype /Link /Type /Annot
>>
endobj
118 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 346 0 R /XYZ 40.01575 524.6394 0 ] /Rect [ 545.8078 608.2769 555.2598 618.4769 ] /Subtype /Link /Type /Annot
>>
endobj
119 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 346 0 R /XYZ 40.01575 404.2394 0 ] /Rect [ 120.0157 591.4394 146.0002 601.6394 ] /Subtype /Link /Type /Annot
>>
endobj
120 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 346 0 R /XYZ 40.01575 404.2394 0 ] /Rect [ 545.8078 592.0769 555.2598 602.2769 ] /Subtype /Link /Type /Annot
>>
endobj
121 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 346 0 R /XYZ 40.01575 227.4394 0 ] /Rect [ 120.0157 575.2394 144.5807 585.4394 ] /Subtype /Link /Type /Annot
>>
endobj
122 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 346 0 R /XYZ 40.01575 227.4394 0 ] /Rect [ 545.8078 575.8769 555.2598 586.0769 ] /Subtype /Link /Type /Annot
>>
endobj
123 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 348 0 R /XYZ 40.01575 561.0394 0 ] /Rect [ 120.0157 559.0394 187.1062 569.2394 ] /Subtype /Link /Type /Annot
>>
endobj
124 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 348 0 R /XYZ 40.01575 561.0394 0 ] /Rect [ 545.8078 559.6769 555.2598 569.8769 ] /Subtype /Link /Type /Annot
>>
endobj
125 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 348 0 R /XYZ 40.01575 439.0394 0 ] /Rect [ 100.0157 542.8394 156.7107 553.0394 ] /Subtype /Link /Type /Annot
>>
endobj
126 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 348 0 R /XYZ 40.01575 439.0394 0 ] /Rect [ 545.8078 543.4769 555.2598 553.6769 ] /Subtype /Link /Type /Annot
>>
endobj
127 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 348 0 R /XYZ 40.01575 318.6394 0 ] /Rect [ 120.0157 526.6394 146.0002 536.8394 ] /Subtype /Link /Type /Annot
>>
endobj
128 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 348 0 R /XYZ 40.01575 318.6394 0 ] /Rect [ 545.8078 527.2769 555.2598 537.4769 ] /Subtype /Link /Type /Annot
>>
endobj
129 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 348 0 R /XYZ 40.01575 189.8394 0 ] /Rect [ 120.0157 510.4394 144.5807 520.6394 ] /Subtype /Link /Type /Annot
>>
endobj
130 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 348 0 R /XYZ 40.01575 189.8394 0 ] /Rect [ 545.8078 511.0769 555.2598 521.2769 ] /Subtype /Link /Type /Annot
>>
endobj
131 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 349 0 R /XYZ 40.01575 581.4394 0 ] /Rect [ 120.0157 494.2394 187.5737 504.4394 ] /Subtype /Link /Type /Annot
>>
endobj
132 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 349 0 R /XYZ 40.01575 581.4394 0 ] /Rect [ 545.8078 494.8769 555.2598 505.0769 ] /Subtype /Link /Type /Annot
>>
endobj
133 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 349 0 R /XYZ 40.01575 459.4394 0 ] /Rect [ 100.0157 478.0394 150.5652 488.2394 ] /Subtype /Link /Type /Annot
>>
endobj
134 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 349 0 R /XYZ 40.01575 459.4394 0 ] /Rect [ 545.8078 478.6769 555.2598 488.8769 ] /Subtype /Link /Type /Annot
>>
endobj
135 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 349 0 R /XYZ 40.01575 381.0394 0 ] /Rect [ 120.0157 461.8394 146.0002 472.0394 ] /Subtype /Link /Type /Annot
>>
endobj
136 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 349 0 R /XYZ 40.01575 381.0394 0 ] /Rect [ 545.8078 462.4769 555.2598 472.6769 ] /Subtype /Link /Type /Annot
>>
endobj
137 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 349 0 R /XYZ 40.01575 220.2394 0 ] /Rect [ 120.0157 445.6394 144.5807 455.8394 ] /Subtype /Link /Type /Annot
>>
endobj
138 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 349 0 R /XYZ 40.01575 220.2394 0 ] /Rect [ 545.8078 446.2769 555.2598 456.4769 ] /Subtype /Link /Type /Annot
>>
endobj
139 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 350 0 R /XYZ 40.01575 213.4394 0 ] /Rect [ 80.01575 429.4394 127.7262 439.6394 ] /Subtype /Link /Type /Annot
>>
endobj
140 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 350 0 R /XYZ 40.01575 213.4394 0 ] /Rect [ 545.8078 430.0769 555.2598 440.2769 ] /Subtype /Link /Type /Annot
>>
endobj
141 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 351 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 100.0157 413.8769 144.4282 424.0769 ] /Subtype /Link /Type /Annot
>>
endobj
142 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 351 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 545.8078 413.8769 555.2598 424.0769 ] /Subtype /Link /Type /Annot
>>
endobj
143 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 351 0 R /XYZ 40.01575 714.6394 0 ] /Rect [ 120.0157 397.0394 186.1542 407.2394 ] /Subtype /Link /Type /Annot
>>
endobj
144 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 351 0 R /XYZ 40.01575 714.6394 0 ] /Rect [ 545.8078 397.6769 555.2598 407.8769 ] /Subtype /Link /Type /Annot
>>
endobj
145 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 351 0 R /XYZ 40.01575 429.4394 0 ] /Rect [ 100.0157 380.8394 231.3492 391.0394 ] /Subtype /Link /Type /Annot
>>
endobj
146 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 351 0 R /XYZ 40.01575 429.4394 0 ] /Rect [ 545.8078 381.4769 555.2598 391.6769 ] /Subtype /Link /Type /Annot
>>
endobj
147 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 351 0 R /XYZ 40.01575 279.0394 0 ] /Rect [ 120.0157 364.6394 132.7742 374.8394 ] /Subtype /Link /Type /Annot
>>
endobj
148 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 351 0 R /XYZ 40.01575 279.0394 0 ] /Rect [ 545.8078 365.2769 555.2598 375.4769 ] /Subtype /Link /Type /Annot
>>
endobj
149 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 352 0 R /XYZ 40.01575 545.4394 0 ] /Rect [ 120.0157 348.4394 136.5482 358.6394 ] /Subtype /Link /Type /Annot
>>
endobj
150 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 352 0 R /XYZ 40.01575 545.4394 0 ] /Rect [ 545.8078 349.0769 555.2598 359.2769 ] /Subtype /Link /Type /Annot
>>
endobj
151 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 352 0 R /XYZ 40.01575 91.03937 0 ] /Rect [ 100.0157 332.8769 136.3787 343.0769 ] /Subtype /Link /Type /Annot
>>
endobj
152 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 352 0 R /XYZ 40.01575 91.03937 0 ] /Rect [ 545.8078 332.8769 555.2598 343.0769 ] /Subtype /Link /Type /Annot
>>
endobj
153 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 353 0 R /XYZ 40.01575 577.0394 0 ] /Rect [ 80.01575 316.0394 154.6542 326.2394 ] /Subtype /Link /Type /Annot
>>
endobj
154 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 353 0 R /XYZ 40.01575 577.0394 0 ] /Rect [ 545.8078 316.6769 555.2598 326.8769 ] /Subtype /Link /Type /Annot
>>
endobj
155 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 353 0 R /XYZ 40.01575 490.2394 0 ] /Rect [ 100.0157 300.4769 144.4282 310.6769 ] /Subtype /Link /Type /Annot
>>
endobj
156 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 353 0 R /XYZ 40.01575 490.2394 0 ] /Rect [ 545.8078 300.4769 555.2598 310.6769 ] /Subtype /Link /Type /Annot
>>
endobj
157 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 353 0 R /XYZ 40.01575 267.8394 0 ] /Rect [ 100.0157 283.6394 173.2432 293.8394 ] /Subtype /Link /Type /Annot
>>
endobj
158 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 353 0 R /XYZ 40.01575 267.8394 0 ] /Rect [ 545.8078 284.2769 555.2598 294.4769 ] /Subtype /Link /Type /Annot
>>
endobj
159 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 354 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 120.0157 268.0769 144.5807 278.2769 ] /Subtype /Link /Type /Annot
>>
endobj
160 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 354 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 545.8078 268.0769 555.2598 278.2769 ] /Subtype /Link /Type /Annot
>>
endobj
161 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 354 0 R /XYZ 40.01575 521.4394 0 ] /Rect [ 120.0157 251.2394 205.9762 261.4394 ] /Subtype /Link /Type /Annot
>>
endobj
162 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 354 0 R /XYZ 40.01575 521.4394 0 ] /Rect [ 545.8078 251.8769 555.2598 262.0769 ] /Subtype /Link /Type /Annot
>>
endobj
163 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 354 0 R /XYZ 40.01575 333.4394 0 ] /Rect [ 80.01575 235.0394 142.8392 245.2394 ] /Subtype /Link /Type /Annot
>>
endobj
164 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 354 0 R /XYZ 40.01575 333.4394 0 ] /Rect [ 545.8078 235.6769 555.2598 245.8769 ] /Subtype /Link /Type /Annot
>>
endobj
165 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 354 0 R /XYZ 40.01575 192.6394 0 ] /Rect [ 100.0157 219.4769 144.4282 229.6769 ] /Subtype /Link /Type /Annot
>>
endobj
166 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 354 0 R /XYZ 40.01575 192.6394 0 ] /Rect [ 545.8078 219.4769 555.2598 229.6769 ] /Subtype /Link /Type /Annot
>>
endobj
167 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 354 0 R /XYZ 40.01575 132.2394 0 ] /Rect [ 100.0157 202.6394 242.2122 212.8394 ] /Subtype /Link /Type /Annot
>>
endobj
168 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 354 0 R /XYZ 40.01575 132.2394 0 ] /Rect [ 545.8078 203.2769 555.2598 213.4769 ] /Subtype /Link /Type /Annot
>>
endobj
169 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 357 0 R /XYZ 40.01575 442.7994 0 ] /Rect [ 120.0157 186.4394 267.4142 196.6394 ] /Subtype /Link /Type /Annot
>>
endobj
170 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 357 0 R /XYZ 40.01575 442.7994 0 ] /Rect [ 545.8078 187.0769 555.2598 197.2769 ] /Subtype /Link /Type /Annot
>>
endobj
171 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 357 0 R /XYZ 40.01575 111.1994 0 ] /Rect [ 120.0157 170.2394 228.1867 180.4394 ] /Subtype /Link /Type /Annot
>>
endobj
172 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 357 0 R /XYZ 40.01575 111.1994 0 ] /Rect [ 545.8078 170.8769 555.2598 181.0769 ] /Subtype /Link /Type /Annot
>>
endobj
173 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 358 0 R /XYZ 40.01575 696.2394 0 ] /Rect [ 100.0157 154.0394 200.6217 164.2394 ] /Subtype /Link /Type /Annot
>>
endobj
174 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 358 0 R /XYZ 40.01575 696.2394 0 ] /Rect [ 545.8078 154.6769 555.2598 164.8769 ] /Subtype /Link /Type /Annot
>>
endobj
175 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 358 0 R /XYZ 40.01575 375.4394 0 ] /Rect [ 100.0157 137.8394 136.8632 148.0394 ] /Subtype /Link /Type /Annot
>>
endobj
176 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 358 0 R /XYZ 40.01575 375.4394 0 ] /Rect [ 545.8078 138.4769 555.2598 148.6769 ] /Subtype /Link /Type /Annot
>>
endobj
177 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 359 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 100.0157 121.6394 231.3407 131.8394 ] /Subtype /Link /Type /Annot
>>
endobj
178 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 359 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 545.8078 122.2769 555.2598 132.4769 ] /Subtype /Link /Type /Annot
>>
endobj
179 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 362 0 R /XYZ 40.01575 656.2394 0 ] /Rect [ 80.01575 105.4394 114.9762 115.6394 ] /Subtype /Link /Type /Annot
>>
endobj
180 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 362 0 R /XYZ 40.01575 656.2394 0 ] /Rect [ 545.8078 106.0769 555.2598 116.2769 ] /Subtype /Link /Type /Annot
>>
endobj
181 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 362 0 R /XYZ 40.01575 551.4394 0 ] /Rect [ 100.0157 89.87687 144.4282 100.0769 ] /Subtype /Link /Type /Annot
>>
endobj
182 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 362 0 R /XYZ 40.01575 551.4394 0 ] /Rect [ 545.8078 89.87687 555.2598 100.0769 ] /Subtype /Link /Type /Annot
>>
endobj
183 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 362 0 R /XYZ 40.01575 364.2394 0 ] /Rect [ 100.0157 73.03937 220.9622 83.23937 ] /Subtype /Link /Type /Annot
>>
endobj
184 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 362 0 R /XYZ 40.01575 364.2394 0 ] /Rect [ 545.8078 73.67687 555.2598 83.87687 ] /Subtype /Link /Type /Annot
>>
endobj
185 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 363 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 120.0157 56.83937 179.0652 67.03937 ] /Subtype /Link /Type /Annot
>>
endobj
186 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 363 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 545.8078 57.47687 555.2598 67.67687 ] /Subtype /Link /Type /Annot
>>
endobj
187 0 obj
<<
/Annots [ 95 0 R 96 0 R 97 0 R 98 0 R 99 0 R 100 0 R 101 0 R 102 0 R 103 0 R 104 0 R 
  105 0 R 106 0 R 107 0 R 108 0 R 109 0 R 110 0 R 111 0 R 112 0 R 113 0 R 114 0 R 
  115 0 R 116 0 R 117 0 R 118 0 R 119 0 R 120 0 R 121 0 R 122 0 R 123 0 R 124 0 R 
  125 0 R 126 0 R 127 0 R 128 0 R 129 0 R 130 0 R 131 0 R 132 0 R 133 0 R 134 0 R 
  135 0 R 136 0 R 137 0 R 138 0 R 139 0 R 140 0 R 141 0 R 142 0 R 143 0 R 144 0 R 
  145 0 R 146 0 R 147 0 R 148 0 R 149 0 R 150 0 R 151 0 R 152 0 R 153 0 R 154 0 R 
  155 0 R 156 0 R 157 0 R 158 0 R 159 0 R 160 0 R 161 0 R 162 0 R 163 0 R 164 0 R 
  165 0 R 166 0 R 167 0 R 168 0 R 169 0 R 170 0 R 171 0 R 172 0 R 173 0 R 174 0 R 
  175 0 R 176 0 R 177 0 R 178 0 R 179 0 R 180 0 R 181 0 R 182 0 R 183 0 R 184 0 R 
  185 0 R 186 0 R ] /Contents 547 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
188 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 363 0 R /XYZ 40.01575 334.2394 0 ] /Rect [ 120.0157 785.8394 175.2827 796.0394 ] /Subtype /Link /Type /Annot
>>
endobj
189 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 363 0 R /XYZ 40.01575 334.2394 0 ] /Rect [ 545.8078 786.4769 555.2598 796.6769 ] /Subtype /Link /Type /Annot
>>
endobj
190 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 363 0 R /XYZ 40.01575 145.4394 0 ] /Rect [ 120.0157 769.6394 200.7997 779.8394 ] /Subtype /Link /Type /Annot
>>
endobj
191 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 363 0 R /XYZ 40.01575 145.4394 0 ] /Rect [ 545.8078 770.2769 555.2598 780.4769 ] /Subtype /Link /Type /Annot
>>
endobj
192 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 364 0 R /XYZ 40.01575 668.2394 0 ] /Rect [ 120.0157 753.4394 207.8887 763.6394 ] /Subtype /Link /Type /Annot
>>
endobj
193 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 364 0 R /XYZ 40.01575 668.2394 0 ] /Rect [ 545.8078 754.0769 555.2598 764.2769 ] /Subtype /Link /Type /Annot
>>
endobj
194 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 364 0 R /XYZ 40.01575 558.2394 0 ] /Rect [ 120.0157 737.2394 166.7827 747.4394 ] /Subtype /Link /Type /Annot
>>
endobj
195 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 364 0 R /XYZ 40.01575 558.2394 0 ] /Rect [ 545.8078 737.8769 555.2598 748.0769 ] /Subtype /Link /Type /Annot
>>
endobj
196 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 364 0 R /XYZ 40.01575 342.6394 0 ] /Rect [ 120.0157 721.0394 172.4607 731.2394 ] /Subtype /Link /Type /Annot
>>
endobj
197 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 364 0 R /XYZ 40.01575 342.6394 0 ] /Rect [ 545.8078 721.6769 555.2598 731.8769 ] /Subtype /Link /Type /Annot
>>
endobj
198 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 365 0 R /XYZ 40.01575 510.6394 0 ] /Rect [ 80.01575 704.8394 239.2377 715.0394 ] /Subtype /Link /Type /Annot
>>
endobj
199 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 365 0 R /XYZ 40.01575 510.6394 0 ] /Rect [ 545.8078 705.4769 555.2598 715.6769 ] /Subtype /Link /Type /Annot
>>
endobj
200 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 365 0 R /XYZ 40.01575 405.8394 0 ] /Rect [ 100.0157 689.2769 144.4282 699.4769 ] /Subtype /Link /Type /Annot
>>
endobj
201 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 365 0 R /XYZ 40.01575 405.8394 0 ] /Rect [ 545.8078 689.2769 555.2598 699.4769 ] /Subtype /Link /Type /Annot
>>
endobj
202 0 obj
<<
/BaseFont /Courier /Encoding /WinAnsiEncoding /Name /F3 /Subtype /Type1 /Type /Font
>>
endobj
203 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 365 0 R /XYZ 40.01575 261.4394 0 ] /Rect [ 100.0157 672.4394 155.8437 682.6394 ] /Subtype /Link /Type /Annot
>>
endobj
204 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 365 0 R /XYZ 40.01575 261.4394 0 ] /Rect [ 545.8078 673.0769 555.2598 683.2769 ] /Subtype /Link /Type /Annot
>>
endobj
205 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 366 0 R /XYZ 40.01575 573.4394 0 ] /Rect [ 100.0157 656.2394 197.5022 666.4394 ] /Subtype /Link /Type /Annot
>>
endobj
206 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 366 0 R /XYZ 40.01575 573.4394 0 ] /Rect [ 545.8078 656.8769 555.2598 667.0769 ] /Subtype /Link /Type /Annot
>>
endobj
207 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 367 0 R /XYZ 40.01575 621.4394 0 ] /Rect [ 100.0157 640.6769 136.3787 650.8769 ] /Subtype /Link /Type /Annot
>>
endobj
208 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 367 0 R /XYZ 40.01575 621.4394 0 ] /Rect [ 545.8078 640.6769 555.2598 650.8769 ] /Subtype /Link /Type /Annot
>>
endobj
209 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 367 0 R /XYZ 40.01575 537.0394 0 ] /Rect [ 80.01575 623.8394 221.2602 634.0394 ] /Subtype /Link /Type /Annot
>>
endobj
210 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 367 0 R /XYZ 40.01575 537.0394 0 ] /Rect [ 545.8078 624.4769 555.2598 634.6769 ] /Subtype /Link /Type /Annot
>>
endobj
211 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 367 0 R /XYZ 40.01575 432.2394 0 ] /Rect [ 100.0157 608.2769 144.4282 618.4769 ] /Subtype /Link /Type /Annot
>>
endobj
212 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 367 0 R /XYZ 40.01575 432.2394 0 ] /Rect [ 545.8078 608.2769 555.2598 618.4769 ] /Subtype /Link /Type /Annot
>>
endobj
213 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 367 0 R /XYZ 40.01575 177.0394 0 ] /Rect [ 100.0157 592.0769 126.0002 602.2769 ] /Subtype /Link /Type /Annot
>>
endobj
214 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 367 0 R /XYZ 40.01575 177.0394 0 ] /Rect [ 545.8078 592.0769 555.2598 602.2769 ] /Subtype /Link /Type /Annot
>>
endobj
215 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 367 0 R /XYZ 40.01575 128.6394 0 ] /Rect [ 120.0157 575.2394 312.7617 585.4394 ] /Subtype /Link /Type /Annot
>>
endobj
216 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 367 0 R /XYZ 40.01575 128.6394 0 ] /Rect [ 545.8078 575.8769 555.2598 586.0769 ] /Subtype /Link /Type /Annot
>>
endobj
217 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 368 0 R /XYZ 40.01575 593.4394 0 ] /Rect [ 120.0157 559.0394 284.4057 569.2394 ] /Subtype /Link /Type /Annot
>>
endobj
218 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 368 0 R /XYZ 40.01575 593.4394 0 ] /Rect [ 545.8078 559.6769 555.2598 569.8769 ] /Subtype /Link /Type /Annot
>>
endobj
219 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 368 0 R /XYZ 40.01575 428.6394 0 ] /Rect [ 100.0157 543.4769 136.3787 553.6769 ] /Subtype /Link /Type /Annot
>>
endobj
220 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 368 0 R /XYZ 40.01575 428.6394 0 ] /Rect [ 545.8078 543.4769 555.2598 553.6769 ] /Subtype /Link /Type /Annot
>>
endobj
221 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 368 0 R /XYZ 40.01575 356.2394 0 ] /Rect [ 80.01575 526.6394 350.2222 536.8394 ] /Subtype /Link /Type /Annot
>>
endobj
222 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 368 0 R /XYZ 40.01575 356.2394 0 ] /Rect [ 545.8078 527.2769 555.2598 537.4769 ] /Subtype /Link /Type /Annot
>>
endobj
223 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 368 0 R /XYZ 40.01575 215.4394 0 ] /Rect [ 100.0157 511.0769 144.4282 521.2769 ] /Subtype /Link /Type /Annot
>>
endobj
224 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 368 0 R /XYZ 40.01575 215.4394 0 ] /Rect [ 545.8078 511.0769 555.2598 521.2769 ] /Subtype /Link /Type /Annot
>>
endobj
225 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 368 0 R /XYZ 40.01575 143.0394 0 ] /Rect [ 100.0157 494.2394 199.6867 504.4394 ] /Subtype /Link /Type /Annot
>>
endobj
226 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 368 0 R /XYZ 40.01575 143.0394 0 ] /Rect [ 545.8078 494.8769 555.2598 505.0769 ] /Subtype /Link /Type /Annot
>>
endobj
227 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 369 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 100.0157 478.0394 168.9847 488.2394 ] /Subtype /Link /Type /Annot
>>
endobj
228 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 369 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 545.8078 478.6769 555.2598 488.8769 ] /Subtype /Link /Type /Annot
>>
endobj
229 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 369 0 R /XYZ 40.01575 489.8394 0 ] /Rect [ 120.0157 461.8394 188.0497 472.0394 ] /Subtype /Link /Type /Annot
>>
endobj
230 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 369 0 R /XYZ 40.01575 489.8394 0 ] /Rect [ 545.8078 462.4769 555.2598 472.6769 ] /Subtype /Link /Type /Annot
>>
endobj
231 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 369 0 R /XYZ 40.01575 139.8394 0 ] /Rect [ 120.0157 445.6394 173.8632 455.8394 ] /Subtype /Link /Type /Annot
>>
endobj
232 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 369 0 R /XYZ 40.01575 139.8394 0 ] /Rect [ 545.8078 446.2769 555.2598 456.4769 ] /Subtype /Link /Type /Annot
>>
endobj
233 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 370 0 R /XYZ 40.01575 486.2394 0 ] /Rect [ 120.0157 429.4394 229.6232 439.6394 ] /Subtype /Link /Type /Annot
>>
endobj
234 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 370 0 R /XYZ 40.01575 486.2394 0 ] /Rect [ 545.8078 430.0769 555.2598 440.2769 ] /Subtype /Link /Type /Annot
>>
endobj
235 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 371 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 120.0157 413.2394 197.5017 423.4394 ] /Subtype /Link /Type /Annot
>>
endobj
236 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 371 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 545.8078 413.8769 555.2598 424.0769 ] /Subtype /Link /Type /Annot
>>
endobj
237 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 371 0 R /XYZ 40.01575 431.0394 0 ] /Rect [ 100.0157 397.0394 154.3392 407.2394 ] /Subtype /Link /Type /Annot
>>
endobj
238 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 371 0 R /XYZ 40.01575 431.0394 0 ] /Rect [ 545.8078 397.6769 555.2598 407.8769 ] /Subtype /Link /Type /Annot
>>
endobj
239 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 371 0 R /XYZ 40.01575 280.6394 0 ] /Rect [ 100.0157 381.4769 136.3787 391.6769 ] /Subtype /Link /Type /Annot
>>
endobj
240 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 371 0 R /XYZ 40.01575 280.6394 0 ] /Rect [ 545.8078 381.4769 555.2598 391.6769 ] /Subtype /Link /Type /Annot
>>
endobj
241 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 371 0 R /XYZ 40.01575 208.2394 0 ] /Rect [ 80.01575 364.6394 158.9042 374.8394 ] /Subtype /Link /Type /Annot
>>
endobj
242 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 371 0 R /XYZ 40.01575 208.2394 0 ] /Rect [ 545.8078 365.2769 555.2598 375.4769 ] /Subtype /Link /Type /Annot
>>
endobj
243 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 372 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 100.0157 349.0769 144.4282 359.2769 ] /Subtype /Link /Type /Annot
>>
endobj
244 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 372 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 545.8078 349.0769 555.2598 359.2769 ] /Subtype /Link /Type /Annot
>>
endobj
245 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 372 0 R /XYZ 40.01575 678.6394 0 ] /Rect [ 120.0157 332.2394 205.9932 342.4394 ] /Subtype /Link /Type /Annot
>>
endobj
246 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 372 0 R /XYZ 40.01575 678.6394 0 ] /Rect [ 545.8078 332.8769 555.2598 343.0769 ] /Subtype /Link /Type /Annot
>>
endobj
247 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 372 0 R /XYZ 40.01575 501.8394 0 ] /Rect [ 100.0157 316.6769 178.9042 326.8769 ] /Subtype /Link /Type /Annot
>>
endobj
248 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 372 0 R /XYZ 40.01575 501.8394 0 ] /Rect [ 545.8078 316.6769 555.2598 326.8769 ] /Subtype /Link /Type /Annot
>>
endobj
249 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 373 0 R /XYZ 40.01575 477.4394 0 ] /Rect [ 60.01575 299.8394 215.9142 310.0394 ] /Subtype /Link /Type /Annot
>>
endobj
250 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 373 0 R /XYZ 40.01575 477.4394 0 ] /Rect [ 545.8078 300.4769 555.2598 310.6769 ] /Subtype /Link /Type /Annot
>>
endobj
251 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 373 0 R /XYZ 40.01575 442.2394 0 ] /Rect [ 80.01575 284.2769 124.4282 294.4769 ] /Subtype /Link /Type /Annot
>>
endobj
252 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 373 0 R /XYZ 40.01575 442.2394 0 ] /Rect [ 545.8078 284.2769 555.2598 294.4769 ] /Subtype /Link /Type /Annot
>>
endobj
253 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 373 0 R /XYZ 40.01575 199.4394 0 ] /Rect [ 80.01575 267.4394 216.0752 277.6394 ] /Subtype /Link /Type /Annot
>>
endobj
254 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 373 0 R /XYZ 40.01575 199.4394 0 ] /Rect [ 545.8078 268.0769 555.2598 278.2769 ] /Subtype /Link /Type /Annot
>>
endobj
255 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 375 0 R /XYZ 40.01575 717.0394 0 ] /Rect [ 80.01575 251.2394 185.3562 261.4394 ] /Subtype /Link /Type /Annot
>>
endobj
256 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 375 0 R /XYZ 40.01575 717.0394 0 ] /Rect [ 545.8078 251.8769 555.2598 262.0769 ] /Subtype /Link /Type /Annot
>>
endobj
257 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 376 0 R /XYZ 40.01575 561.4394 0 ] /Rect [ 80.01575 235.0394 226.9042 245.2394 ] /Subtype /Link /Type /Annot
>>
endobj
258 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 376 0 R /XYZ 40.01575 561.4394 0 ] /Rect [ 545.8078 235.6769 555.2598 245.8769 ] /Subtype /Link /Type /Annot
>>
endobj
259 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 377 0 R /XYZ 40.01575 449.4394 0 ] /Rect [ 80.01575 219.4769 116.3787 229.6769 ] /Subtype /Link /Type /Annot
>>
endobj
260 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 377 0 R /XYZ 40.01575 449.4394 0 ] /Rect [ 545.8078 219.4769 555.2598 229.6769 ] /Subtype /Link /Type /Annot
>>
endobj
261 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 377 0 R /XYZ 40.01575 386.6394 0 ] /Rect [ 100.0157 202.6394 309.3027 212.8394 ] /Subtype /Link /Type /Annot
>>
endobj
262 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 377 0 R /XYZ 40.01575 386.6394 0 ] /Rect [ 545.8078 203.2769 555.2598 213.4769 ] /Subtype /Link /Type /Annot
>>
endobj
263 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 377 0 R /XYZ 40.01575 164.2394 0 ] /Rect [ 100.0157 186.4394 320.6332 196.6394 ] /Subtype /Link /Type /Annot
>>
endobj
264 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 377 0 R /XYZ 40.01575 164.2394 0 ] /Rect [ 545.8078 187.0769 555.2598 197.2769 ] /Subtype /Link /Type /Annot
>>
endobj
265 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 378 0 R /XYZ 40.01575 747.0394 0 ] /Rect [ 100.0157 170.2394 202.0582 180.4394 ] /Subtype /Link /Type /Annot
>>
endobj
266 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 378 0 R /XYZ 40.01575 747.0394 0 ] /Rect [ 545.8078 170.8769 555.2598 181.0769 ] /Subtype /Link /Type /Annot
>>
endobj
267 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 378 0 R /XYZ 40.01575 578.6394 0 ] /Rect [ 100.0157 154.0394 213.3887 164.2394 ] /Subtype /Link /Type /Annot
>>
endobj
268 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 378 0 R /XYZ 40.01575 578.6394 0 ] /Rect [ 545.8078 154.6769 555.2598 164.8769 ] /Subtype /Link /Type /Annot
>>
endobj
269 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 378 0 R /XYZ 40.01575 374.2394 0 ] /Rect [ 60.01575 137.8394 173.8647 148.0394 ] /Subtype /Link /Type /Annot
>>
endobj
270 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 378 0 R /XYZ 40.01575 374.2394 0 ] /Rect [ 545.8078 138.4769 555.2598 148.6769 ] /Subtype /Link /Type /Annot
>>
endobj
271 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 378 0 R /XYZ 40.01575 339.0394 0 ] /Rect [ 80.01575 121.6394 199.5427 131.8394 ] /Subtype /Link /Type /Annot
>>
endobj
272 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 378 0 R /XYZ 40.01575 339.0394 0 ] /Rect [ 545.8078 122.2769 555.2598 132.4769 ] /Subtype /Link /Type /Annot
>>
endobj
273 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 380 0 R /XYZ 40.01575 411.0394 0 ] /Rect [ 80.01575 105.4394 166.9537 115.6394 ] /Subtype /Link /Type /Annot
>>
endobj
274 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 380 0 R /XYZ 40.01575 411.0394 0 ] /Rect [ 545.8078 106.0769 555.2598 116.2769 ] /Subtype /Link /Type /Annot
>>
endobj
275 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 380 0 R /XYZ 40.01575 336.2394 0 ] /Rect [ 100.0157 89.23937 175.1302 99.43937 ] /Subtype /Link /Type /Annot
>>
endobj
276 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 380 0 R /XYZ 40.01575 336.2394 0 ] /Rect [ 545.8078 89.87687 555.2598 100.0769 ] /Subtype /Link /Type /Annot
>>
endobj
277 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 380 0 R /XYZ 40.01575 215.8394 0 ] /Rect [ 80.01575 73.03937 220.7842 83.23937 ] /Subtype /Link /Type /Annot
>>
endobj
278 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 380 0 R /XYZ 40.01575 215.8394 0 ] /Rect [ 545.8078 73.67687 555.2598 83.87687 ] /Subtype /Link /Type /Annot
>>
endobj
279 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 380 0 R /XYZ 40.01575 141.0394 0 ] /Rect [ 100.0157 57.47687 175.1302 67.67687 ] /Subtype /Link /Type /Annot
>>
endobj
280 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 380 0 R /XYZ 40.01575 141.0394 0 ] /Rect [ 545.8078 57.47687 555.2598 67.67687 ] /Subtype /Link /Type /Annot
>>
endobj
281 0 obj
<<
/Annots [ 188 0 R 189 0 R 190 0 R 191 0 R 192 0 R 193 0 R 194 0 R 195 0 R 196 0 R 197 0 R 
  198 0 R 199 0 R 200 0 R 201 0 R 203 0 R 204 0 R 205 0 R 206 0 R 207 0 R 208 0 R 
  209 0 R 210 0 R 211 0 R 212 0 R 213 0 R 214 0 R 215 0 R 216 0 R 217 0 R 218 0 R 
  219 0 R 220 0 R 221 0 R 222 0 R 223 0 R 224 0 R 225 0 R 226 0 R 227 0 R 228 0 R 
  229 0 R 230 0 R 231 0 R 232 0 R 233 0 R 234 0 R 235 0 R 236 0 R 237 0 R 238 0 R 
  239 0 R 240 0 R 241 0 R 242 0 R 243 0 R 244 0 R 245 0 R 246 0 R 247 0 R 248 0 R 
  249 0 R 250 0 R 251 0 R 252 0 R 253 0 R 254 0 R 255 0 R 256 0 R 257 0 R 258 0 R 
  259 0 R 260 0 R 261 0 R 262 0 R 263 0 R 264 0 R 265 0 R 266 0 R 267 0 R 268 0 R 
  269 0 R 270 0 R 271 0 R 272 0 R 273 0 R 274 0 R 275 0 R 276 0 R 277 0 R 278 0 R 
  279 0 R 280 0 R ] /Contents 548 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
282 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 381 0 R /XYZ 40.01575 741.0394 0 ] /Rect [ 80.01575 785.8394 240.6232 796.0394 ] /Subtype /Link /Type /Annot
>>
endobj
283 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 381 0 R /XYZ 40.01575 741.0394 0 ] /Rect [ 545.8078 786.4769 555.2598 796.6769 ] /Subtype /Link /Type /Annot
>>
endobj
284 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 381 0 R /XYZ 40.01575 134.6394 0 ] /Rect [ 100.0157 770.2769 175.1302 780.4769 ] /Subtype /Link /Type /Annot
>>
endobj
285 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 381 0 R /XYZ 40.01575 134.6394 0 ] /Rect [ 545.8078 770.2769 555.2598 780.4769 ] /Subtype /Link /Type /Annot
>>
endobj
286 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 381 0 R /XYZ 40.01575 587.8394 0 ] /Rect [ 80.01575 753.4394 197.1712 763.6394 ] /Subtype /Link /Type /Annot
>>
endobj
287 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 381 0 R /XYZ 40.01575 587.8394 0 ] /Rect [ 545.8078 754.0769 555.2598 764.2769 ] /Subtype /Link /Type /Annot
>>
endobj
288 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 381 0 R /XYZ 40.01575 134.6394 0 ] /Rect [ 100.0157 737.8769 175.1302 748.0769 ] /Subtype /Link /Type /Annot
>>
endobj
289 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 381 0 R /XYZ 40.01575 134.6394 0 ] /Rect [ 545.8078 737.8769 555.2598 748.0769 ] /Subtype /Link /Type /Annot
>>
endobj
290 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 381 0 R /XYZ 40.01575 434.6394 0 ] /Rect [ 80.01575 721.0394 172.7337 731.2394 ] /Subtype /Link /Type /Annot
>>
endobj
291 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 381 0 R /XYZ 40.01575 434.6394 0 ] /Rect [ 545.8078 721.6769 555.2598 731.8769 ] /Subtype /Link /Type /Annot
>>
endobj
292 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 381 0 R /XYZ 40.01575 134.6394 0 ] /Rect [ 100.0157 705.4769 175.1302 715.6769 ] /Subtype /Link /Type /Annot
>>
endobj
293 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 381 0 R /XYZ 40.01575 134.6394 0 ] /Rect [ 545.8078 705.4769 555.2598 715.6769 ] /Subtype /Link /Type /Annot
>>
endobj
294 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 381 0 R /XYZ 40.01575 209.4394 0 ] /Rect [ 80.01575 688.6394 182.5257 698.8394 ] /Subtype /Link /Type /Annot
>>
endobj
295 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 381 0 R /XYZ 40.01575 209.4394 0 ] /Rect [ 545.8078 689.2769 555.2598 699.4769 ] /Subtype /Link /Type /Annot
>>
endobj
296 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 381 0 R /XYZ 40.01575 134.6394 0 ] /Rect [ 100.0157 673.0769 175.1302 683.2769 ] /Subtype /Link /Type /Annot
>>
endobj
297 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 381 0 R /XYZ 40.01575 134.6394 0 ] /Rect [ 545.8078 673.0769 555.2598 683.2769 ] /Subtype /Link /Type /Annot
>>
endobj
298 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 382 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 80.01575 656.2394 177.3237 666.4394 ] /Subtype /Link /Type /Annot
>>
endobj
299 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 382 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 545.8078 656.8769 555.2598 667.0769 ] /Subtype /Link /Type /Annot
>>
endobj
300 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 382 0 R /XYZ 40.01575 162.6394 0 ] /Rect [ 100.0157 640.6769 175.1302 650.8769 ] /Subtype /Link /Type /Annot
>>
endobj
301 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 382 0 R /XYZ 40.01575 162.6394 0 ] /Rect [ 545.8078 640.6769 555.2598 650.8769 ] /Subtype /Link /Type /Annot
>>
endobj
302 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 382 0 R /XYZ 40.01575 621.8394 0 ] /Rect [ 80.01575 623.8394 189.6147 634.0394 ] /Subtype /Link /Type /Annot
>>
endobj
303 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 382 0 R /XYZ 40.01575 621.8394 0 ] /Rect [ 545.8078 624.4769 555.2598 634.6769 ] /Subtype /Link /Type /Annot
>>
endobj
304 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 382 0 R /XYZ 40.01575 162.6394 0 ] /Rect [ 100.0157 608.2769 175.1302 618.4769 ] /Subtype /Link /Type /Annot
>>
endobj
305 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 382 0 R /XYZ 40.01575 162.6394 0 ] /Rect [ 545.8078 608.2769 555.2598 618.4769 ] /Subtype /Link /Type /Annot
>>
endobj
306 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 382 0 R /XYZ 40.01575 450.6394 0 ] /Rect [ 80.01575 591.4394 271.8182 601.6394 ] /Subtype /Link /Type /Annot
>>
endobj
307 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 382 0 R /XYZ 40.01575 450.6394 0 ] /Rect [ 545.8078 592.0769 555.2598 602.2769 ] /Subtype /Link /Type /Annot
>>
endobj
308 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 382 0 R /XYZ 40.01575 162.6394 0 ] /Rect [ 100.0157 575.8769 175.1302 586.0769 ] /Subtype /Link /Type /Annot
>>
endobj
309 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 382 0 R /XYZ 40.01575 162.6394 0 ] /Rect [ 545.8078 575.8769 555.2598 586.0769 ] /Subtype /Link /Type /Annot
>>
endobj
310 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 382 0 R /XYZ 40.01575 249.4394 0 ] /Rect [ 80.01575 559.0394 300.6417 569.2394 ] /Subtype /Link /Type /Annot
>>
endobj
311 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 382 0 R /XYZ 40.01575 249.4394 0 ] /Rect [ 545.8078 559.6769 555.2598 569.8769 ] /Subtype /Link /Type /Annot
>>
endobj
312 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 382 0 R /XYZ 40.01575 162.6394 0 ] /Rect [ 100.0157 543.4769 175.1302 553.6769 ] /Subtype /Link /Type /Annot
>>
endobj
313 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 382 0 R /XYZ 40.01575 162.6394 0 ] /Rect [ 545.8078 543.4769 555.2598 553.6769 ] /Subtype /Link /Type /Annot
>>
endobj
314 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 383 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 80.01575 526.6394 224.6942 536.8394 ] /Subtype /Link /Type /Annot
>>
endobj
315 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 383 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 545.8078 527.2769 555.2598 537.4769 ] /Subtype /Link /Type /Annot
>>
endobj
316 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 383 0 R /XYZ 40.01575 553.0394 0 ] /Rect [ 100.0157 511.0769 175.1302 521.2769 ] /Subtype /Link /Type /Annot
>>
endobj
317 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 383 0 R /XYZ 40.01575 553.0394 0 ] /Rect [ 545.8078 511.0769 555.2598 521.2769 ] /Subtype /Link /Type /Annot
>>
endobj
318 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 383 0 R /XYZ 40.01575 627.8394 0 ] /Rect [ 80.01575 494.2394 259.5187 504.4394 ] /Subtype /Link /Type /Annot
>>
endobj
319 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 383 0 R /XYZ 40.01575 627.8394 0 ] /Rect [ 545.8078 494.8769 555.2598 505.0769 ] /Subtype /Link /Type /Annot
>>
endobj
320 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 383 0 R /XYZ 40.01575 553.0394 0 ] /Rect [ 100.0157 478.6769 175.1302 488.8769 ] /Subtype /Link /Type /Annot
>>
endobj
321 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 383 0 R /XYZ 40.01575 553.0394 0 ] /Rect [ 545.8078 478.6769 555.2598 488.8769 ] /Subtype /Link /Type /Annot
>>
endobj
322 0 obj
<<
/Annots [ 282 0 R 283 0 R 284 0 R 285 0 R 286 0 R 287 0 R 288 0 R 289 0 R 290 0 R 291 0 R 
  292 0 R 293 0 R 294 0 R 295 0 R 296 0 R 297 0 R 298 0 R 299 0 R 300 0 R 301 0 R 
  302 0 R 303 0 R 304 0 R 305 0 R 306 0 R 307 0 R 308 0 R 309 0 R 310 0 R 311 0 R 
  312 0 R 313 0 R 314 0 R 315 0 R 316 0 R 317 0 R 318 0 R 319 0 R 320 0 R 321 0 R ] /Contents 549 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
323 0 obj
<<
/Contents 550 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
324 0 obj
<<
/Contents 551 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
325 0 obj
<<
/Contents 552 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
326 0 obj
<<
/Contents 553 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
327 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://www.khronos.org/sycl/)
>> /Border [ 0 0 0 ] /Rect [ 143.6057 664.0394 273.6457 676.0394 ] /Subtype /Link /Type /Annot
>>
endobj
328 0 obj
<<
/BaseFont /Courier-Oblique /Encoding /WinAnsiEncoding /Name /F4 /Subtype /Type1 /Type /Font
>>
endobj
329 0 obj
<<
/BaseFont /Courier-Bold /Encoding /WinAnsiEncoding /Name /F5 /Subtype /Type1 /Type /Font
>>
endobj
330 0 obj
<<
/Annots [ 327 0 R ] /Contents 554 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
331 0 obj
<<
/Contents 555 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
332 0 obj
<<
/Contents 556 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
333 0 obj
<<
/Contents 557 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
334 0 obj
<<
/Contents 558 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
335 0 obj
<<
/Contents 559 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
336 0 obj
<<
/Contents 560 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
337 0 obj
<<
/Contents 561 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
338 0 obj
<<
/Contents 562 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
339 0 obj
<<
/Contents 563 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
340 0 obj
<<
/BitsPerComponent 8 /ColorSpace /DeviceRGB /Filter [ /ASCII85Decode /FlateDecode ] /Height 680 /Length 40381 /SMask 341 0 R 
  /Subtype /Image /Type /XObject /Width 1520
>>
stream
Gb"-VH]V7XR4.QZ;3QmGA7/)jENWhA(ucco>X292&Mo6%>,WkaN.ZgjM-psjAWd'dY9Lej'92$O&dQO<Le%kdUBXFh!PKBh,MH\dU@AC(T,<^YTKsNcq[Io79W-doZd(T0qu&f<kNoPL\(CV*YHtt"HgQ7Yzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!%Pd<DuifgY`#(n])_Y[VXV-Idi!CZY+dJ)rJ1#ietj:)`MN]W1cS6IfAr25Oul?%m0-^6Ou?PPFqd6!='UkX&lL1rSiV-DnHp*`<*;H/0#ag&&uY"-*aIP@B;@f*h.rp`TC(e0`V1R5]QSWK+BkVfW\i(MMd:KC"&rMH01O8*Htb\5(1TE/iFW;NW:8^#UVlq^`pG@/Hc%R!0GVNs7jX4T72+F_M)&sFk,-LA,H#hhct<ci.DO]3,me)VjoMkr:k!TVHnQ9[C>"=l_6h+m^qr%[;4Bs?bcU9kF^Y?D;4dOgT.BUA$r_P[<6V7fiI*fpi!e^DoDd_==bF6M%@VH@jSC[=CJ9h<Z[`d%E7IuM^3n5:a=m(4+`ODVJS[#!!%Oep!H8O4o+0&\))GsUe-c1479VueWPOp3p>4+O$2ZrF0<+>WnVF'm=>K`fW\f%HgeY7s%m4#Z0;N:_MDSDU^/NgCE.E^8F0+<<:!fT@/`Ls!!!#_>&V.Nk-ARAY.X>J&L0b%W.ag2h>@!-O.S7Cd_'ks*dHUoQX4teFg/!++=#AA35U^6@i$'M<:"5`D!Z3/Gj8Z;!!!#QlFlrK>J>L\=24U^@uid]6+LLhd%Qe5IeeR!$eDLg^Ltlae<+oTlpC&0lqZnHlro%4NSTXbLo*^`M%K^f!'mU9X]p#Jp",6E3O4*.j3U.(4nHlRkK]X1B$HbT5Q!3XN86"-0Qo6q2Kh*(]RDq1ZUEhA';^^$!!!#_l0@R!m_Af$.9!)`EPrI"g;O't*,rn8B?Zi(YD8Gt@eZW0U+)g&EfC_A(!RJQQCG,s!!!!A&,,GI]6sGFM_;T>rhH,Ms7sujiu?m#nA,>orqPO'!>^u7OD'qnS7nX%F%+PH"%G(9A#9_I!!!!IA\\#Z0.sfrP!]^>V#HoQoB+<P\8c$Dd#(1I<&@\T]@*E.UIh4h;hkPW!!&7JN>jh%Qnb@cs8KPY`8COLhgPP%hqu"fC[09(<A[u<?o2Ar8Y^R+O]BC$!!%OE>-qtj(Vfaa>g;7&j,^tF`Z&96q;p+GQ&]P%B[USH>U)ak8$f+R$NL/,-o*Hjr:5da1CcM5YcP_2ktcg*CL?tm;boQA3j)?rbo;W^9qA\;1k$DGV)&)O!2*>-f<1Z(EFS?>O],%=od<!"M)fqS-CQt64ISEW#i]gA5tN(5!!!!qLfUTZES>-)AMo-I]m>+g.pmSul).GbeT41>a!$6@OWBQD1i\%D#6b)-!#1=0M\cmE3]*lVI.jn=SMOp(p?gU5#K;1K!tg;5%SCndi\8?f8f\TG!!&,/il-gs1[uN-bV;?[i=AjW7+:/B_u\$*9!,)q!!!!^:h=5"#q)7)Wt4!2kFJRsU31ICEqQn$HuT]r7g&el!9D&XO$>g?ba>IYE85HRGr0]lM*i$`/j"Z).-#iTNX,Ub!9c%>[VV?oH#cpj3:b-8J+TKXV2g@lMo->90fthD=QA>:NX,Ub!9dm5kKa%45Pqc(q]Bq,5r[S<6X<u'lA4Z*3/DQ&j+,-XNIr1*3-@Uh!!#:9GjrNS#7hlG?-%$=AXEA`GJ?ck&R?gqBH5Uipr7lF_jrh4!!!"lj5,:cr@([BA0_&::Hj'KRPh&hU:\@[NC03VlT"*JkYjtS!!!#+gX;ok5Ps-[AiEiJI.PU^_]^,]5\IQ5`M&=q80&0?!!(AHJ,$o'0"po*lr&frIHaD.]^e\[Lrc2Jgi:]IUE=1]acJP-!!!"l'b<J"d,4cGho&XrO@'L\Y[Bc^E(D2`I3_(R5pSgn7-\^k!!%O]?$ktHfnC;VT7-F6YJ-Gd*)_XsLc!3D+VH#B2uipY5XV`irq\kW_`q[apNcAmV%/8I&]p,G7ANF!8a:6p!!%QLoZLV@17S,bd%E[c4n`"CE%!9"&s4$a,fu/uWP\`:!!)`ko0<7rFofU9#nq&gC/TgS+c=3ooZ6SK&gh`\!!!#GUJ7@E4WC3CSio/X//5ZdOt9f]D,SCU!!!!^dI,i&cTCU.(n2Uli.4Of/km>r`?A,*&gl$ROsa-UFZ9@$!76A2rqbq.STId'2!T5Letik3@M0!24jcGka:-/j!!&*&Rl5-+VRJ_ajHEqtmBtI&:jaI(,'gI#Zm2,>LB@MV!%%'b^]&BL.'']#526#kFBBeaUepd3X%98?i;`iX5fn?;WMfUclPF(#$ST.HFY&c/8>JeS8?,4_e?JuR!'gke[t":a^4#muk^2m]af/dDF@8/Y;FP=hJu+J2!!!!k8l\mAB0PpT(jB>5l(t@hU!uJ.7;>8C7@L'5"TSN&9#Sn+^\kXgI4e"EP9s!r*=J\m;C`A2dO^P5FY!Lm!)W=EJ,fHj6\`N]qb(;m;X.@4AW^A_As$nlEiEOL!!%Q/2KnH>(hK=_g1dMgU%CdB7C#A)V%*V.!!%o/PUTO?I!s3na1V<;];];6oL53;Z:2o)ih_Y=!!!"Vd_'ks@UrbN?G9jcL=EKT;ado[b!k;YqPB2U!!!"Vbl.:n?aek<IeL+tZ-]gFb%8+"8XMOS!!!!I)V_];bFVK.h=#eOFY*/QOa,OmbTdj$`rZ5@!6*p@1XD$-oS")fQoYe)Y"6;u_FVYqJH,ZM5S9AFGA`A7#7MGG?!X!^(4*,S^IZ44`CS)"YlFb(5XBb^WMd&$97H][?`&j;Sh?0[bJm)re?JuR!'oL(n\c)NpcN'+N7<EoIu%'_KT*93*=)WF!#2Bu:9,O*L85:^r`^YD]<2,6!2)n:]^S72Dp'Ad4H_`@phu:V=_:-\VN(f[!!!AL"W(DT6ft@HVksq,)N(n\jGXdI*=)WF!#1N[.p'`8q9VJ>IJ;QA;o\qK79W0$7Z'[0VN(f[!!!AF8LL&CKB;QMmsD#9JYkkV7Z'[0V@E_/!!!ACil-gcUc`>;T[\NX9-QeL;'T@F#6Fl*!9kMRr:)L8rpc&!S2q3p8Yg#FC8>Y15QCca+L-:]\L5D<`uTA/l9M"bOf4DFOgM(i!<<+MPX^ZQ)$Aq'$PoNJ"BlUu)X//3RlV)\!!#Q%p$1'^3rZ1pqQ&+s5[-[g7aackV@E_/!!(IBns@*26fZk+B;Z4Bg+(N.Ou?2sFW^Ya!0G"NDnfSdhs7J\SiRX#X%:hnD^0g3`rZ5@!;Uf]/[rZkGl7@,W<7_FM56-\N<Dus#QOi)jP,J&,@XJS=]q.R&87\,g.:$ji7*;X!!#8jD;Moc7`9`Pp.ZP5F@;pB,]KQ!l9G=L!$Hc/]'6(/%UX7u-)gutNel2E"HG<6*=)WF!9DJ*Vk30c.uIDOb>k?Xl9G=L!$G(oJ,fK6#sfY\n3Q>ATHbY'ZQ,!9:)s]B!!))tc[PSo(^PW]MdK-u8:c*XaX>9cXFL9LUIUCEf!iB$EokI/lKXCHnX4$]M=h8u4SXUH?Kg*k.:J@SdJf9PW<3/$!.]I,qWb+k+FO.\f;B+S5ddYa;r=66K9e/t^3B&&G&;-KY$Fu'9Snh2kHml-E&:`DF6Z!j!!",`7ZJH+"6!7\<i$;%5]sT.'?\MAQRl9;='+"nD8hYG(+dNjX.IcmOhf@XOj'd,!<<+MI/(W-5#GqOOlk2tk:B`>i:kKCqsClmn,N@$2r&@>s8Mt<+,QV"%;jcp?!U`IAS(;9l8e6p9`l-PS2q2]!!)5+Rl5,@;=K):"&]A%\E_[em_8Sd[X;W_p?gNr;jln!VsiKU]B,+'e^ZhTcpRI660^Jt'knZT(+Ge8&-)\1k[)Gu/W1eA\`]QR3fq5/JU1(9rUnc<470C5<b?)^C[\q-cG"`(f"Y9Z4f>t;NMG;RV,IU#!!!#TC[Tug0a.LL\%eIpOM]PQH;;!3Q<SAOI/)ZURp0_+p?gc8ju7AQm>Mr@8j0(^,)rAR,,J3C!WW3#h<VAi/rLnBmC1uE3fq5/iHiee%mSk?#C#Xn]lN5WiPUF`bOk2VpWbkhI-e,Ye8mYtdQ#r4;EAqC!!!#G^!8UtN#2U\pu$e(""@L2=3mk\jtUAc4T"KOF`hi;(Y*T\/(-E2/Q+WP+92BAd(PH(rqI<35PNrSW<4SSh06V6[cY;Pqo4f2G3s%K3VAp9MDU?:Mj-sW#QOi)FKb`75Q4.]J[]LNQ9(,EebT$&7uS;TlDq*H?=r$)F`Z]hH1T9>S(sN[:4#DJ8%V2^V[`h0!!'T3T0@[4#eY6AcI@CZXq&s&C2.L\9q.IGe>ufZC27V>]/fPSp51\eG)MS[*=)WF!-GCH%m2P#^`S((EU#dr=53%$++F"Dmsb#C]C*6\2oTc[ER'Iq^=\"]WTUWiUiEbGUible!!!"lHY'%+e56peqXpBP)E`96;boR,Z-B92F?nE!)`MY.*=)WF!-F-i4*U\^#<u&2BiW4=3T]Aas7B+e[!hiF%W>**VZX6%462JjQ7lU:3Yh\q!9d%95Q:GR8WsWFkb&dgp?pbKbl(QoC0*Q2aH.QH>]Ia*Pq.(Ff[7gcWTUWiG/%%CdUCFk3N45)!!%PpHL%]B^AHaTrq0XuFoD0SV`sdQ1@lZuW.$mB_1Dj*s&6,8qWaVqhO0ieVgnaG\))GsLECutq9>o%Zr_-/j>h;DA8QS=72N@[->EM\!%8h6p?]?irqk#%kFC=M$T[b"&P!g<k'?&?C<M"G2)R6us8(>gMbTWsW<7?J2;"FF:4(N@?MX0Rb7?VoOSJ:K@Dbd:!rr<d&UEK'=(]aJH2-?RBD$g^]m;Q7kF?S8.E<N[I/NKhF3gZm[W&YEq,Y+NmCM;7.rn9XRl7CGVPZ/=;pT0]8E4Bm8EoKU)`MXS2JcK`l#Zn*!%8&`GON9Cm^kuK)V)?Je%jbLF3ci+N;2AJ#9QV[Fl@*4o?,s:l`IM=3\.]/S2kXOE3kUO:5;7V8%V2^k?a#=^Z_DMEeblJC]FG8d$tOa2I(7@'o*iVBZjtWS>rThb:^CXI^o@MgJc.!\Ct98$'.7C=TAC!Z\?TGbEjheg>U;UkHn<dEO8rGFG&1>VZQo!5[jNaj,[iuS=)OGWf@#K0E3dk3-XfGq"`\%rc[Qi-sZ/>kLA)6cC6aG\,;$o,@5cf`K"e14f>t;NQ_$&Fk6=>e*-i4!)Tm`r:%Urs8;%erT[IF4S$QolT#bgHuXOEfs52Zo==%URl^8[eZO3nGl-m;cT10YgdeN]qWcnKGB[G9l8e5HBcQLU.Ga'sVUGPG!2/guhRr[HRrA<'^]405%QL-'HHn\Jg_5T_g9`;X*\^tel?E\<Hg<\#p$1)<BrK4ub?(fLeUbuEkHn<dEO8rGFE7i>f%0i\5Q50D]Va-Y!!&["e^W(W*BLRLHHpm+]pC>BM,/LCrql]ln#$W&@!/-6;d3HfCY#TBVp7?hXLI&4X1b!$cY8_:i+TJgk#Rg*SIPW"!!R8aQn`1Lk6r4fE+&WRcLBf1F3BL^3AOoTf/4g:8dFWA@EXrg=i4i$.Ot/Yg!d+KWTUW],]GSD[!>jk2Ot<X!!!1<il$[.@Qj"TUUG'rHLoB?f<=@BHgS5O`NHrOl?MFel`X)$C*DnF4XVdd]!T,_4SrOdrr$=imFn(V::imqQgLEIW/\ui:'Ub!J-%QEg9_]tp?gW/\`]QBs)-`.^&CD\ldi2]/bu`Fr@D:NiYT@s0%bd,iHieP?+Zt-R?II6q<+BbA&jV<Db`Hn>p=ipd3>"5rXmWD!!!!q:pS2IHM-R2HM-RYMrVg:bD*0JqXgbfX382J9fs%Ppu$c=_%sTlf5pZQT9X`li5)sb03GHOI`o453VAoNMq#uiXTR$;eXoV"j,ZFmNpm#K!2*?`kKhJoV^kfLW;h0e*DUdO8:utnHKqL"H=^Z!*lEX`'<)oW*,435O6<Ch)*2l<l#Zn*!6Dp/$Q!DDRlg&JUVU0B[C)Y&b\,q;TD[at%Gn\\VOQT<9.mb#:JjHFMU[UgN\p1n)GI%2!!#86fi8C4e!-;+i2Wi\MKcOJhqm;ac'pY)PO3IAN6q5AFX)G^NB=HZe*-i4!0D\Geu\,l]6=ZPB?m%#gbLOqnA6!Un:`4H)DP]S>HTAD=W'".\4bCb3ZS2#!:ja>L(4+Xonu-"e>ZAN??4`)APKmfb:U3Aa2a5_h[Rt!2i=Dje;XV!WYLst#64aS4P7)ZgOK;,@e_rl_LrE&jR'G6c7Vb7rUndS0K/,qOfhjD7KRemC/(T.!!#9nWi;s85(%S`4AS3?oM2RSb?t6hXCq7nfj,4-j?]SW,]0>pQ`o(a3WK-[FIt9t`l*+CfW\f7e^^3qe`t\c@o\$O=+AaHJO(>F\jk+;l?:YQ9rA'n!'lm?0O[;,1lj]_W3':5G0((]NZ8oe>d.U%Q`LY-<?u=TCF!c+DT-]Y!!!"@TkVuQAIfZ^WiG?aFl%2c4gE;mN]XDE<X@M/&iJ)pP.%t]A3(_2!!'UKXBDl=FP3]rY:dT=jS7brO#?t4a$9"GeO%lF'TGM?FNr.o9W%sm!'hpVT0GOZ=0>Z1U<?WPGk'cqo:SC%\pVcLKd&r1;'TB<\P^i?!!!#G0aedMbXRh@gi5hCD;q@T:5\^omsEsXVY*;(7<1kT7\]$pe#(Rp!!&\*.P!$U@ST?\7JCY1jiWjnM*he:o\F`KmCo\fa$a*#E^kpUU*^2^F?0C%!4:RN2/@O4mN&(DR58K!pU2]ai.BV.e>ZBYHUH.dOd;-"OeN.l0V&[R!!$k5<E7SQ?ba8(=C-72Kl!jea<Qc,@<9dbOcW^X7Z+('A`%^Go,Z<E!!!#GS8I#h%2^cAL5cin9ZYsXkK]V;>9#D/8D^c\Xbqdj[#F'>*QW^cSIPW"!)9JmW>RmIGRPG0N#@iB9qQ[iM6YkS1M5]n]?m?E`CS'@bLD+@M;326#9S>tl#Zn*!6C*:1F@j60jq)cY0QX9T6fe%lunP!rplD$hD@&#8XO(!Uh/gn)D[in!!!#l9pdUX7YjPTFk#!E>E]2Oh/tS_^ju>aP9;7$0>$>ME:1)Jb]GlG!!)B_YNP]QmG#+MW[_EoB:aB\KQ5t)(FG)l*\PkoOt]cgFWdfb5Fp*7s80R/%L2t6J:*hDCK?B$HhH[3B$HdOO_id\m5(C19EatCms[34,kOcmG`dH;KTV.k@qhLuF8u:@HE?r6k@Z_kXB;_OFY*ROrql01iq_9RI[3#1HBq+4/GC=p;od<eVUGPG!9etL/mOd'"Rik\Nmt?3[s@T-77cP%jVp*o80&($73l*5>U3XO?g:bIc#buH!!#/PAS#F2#-=c%80(>j;l36F^lCG;R!7G92g$[9^.>S$[Rdr"][X3.OQgie!!%=s2/Ce8mbKroIkt`_9H?dT`f;&YiLP/GBrM3.oL53;Z:2p4%]!#sVZQo!:thqLWquDS(ZW6/;l?LQV-39%s8J*'6R'T)IHaD(A"f,UJjl+sZ:2p4Nhs'UVZQo!:o^sAh)\rZJ/I]KQnT\+/?O0mjd/4+\^*^CP9s!r*=J\m;C`A2dO^P5FY$h<F?0C%!%"MR\pF/@iA&[u1M0>G=PBRNW[`@Iq5'EaRQ;3V9dEa4FRhu/e?O*Me*-i4!0iX$A&cFuDtrh\e^`3L@qhunqmV(@gUD*S4aHVZe?Mh2,+TpW,./W2;TI3;9W%sm!)OR\9UHBD])`!<Cu)Z[FY)qOe5K.S'E26]iJ"7@TbKm=763k87;AZZV&Pgt#64asfM.nt27jd#88g*UorilDg!>+*G2_eocec?^GNs,q<foM,6BOg$:6AMT_oW/4kl:\`'WIKVB?"Vf=0GqGeuVF`9?1o'Zt[m[6*VX^T7$3FYJ$5_*/[Of9dEN1:aAr7;sJ>mB>o`CVUGPG!%9JkkKhKR3aZ#mR6$YZHN!Ng:HIa9fU'AKS%i+8DI)OH-mk'1OZ&=aO[>1$WPch:e*-i4!#1QL$Q!EoS3-/K,BYPCA,#EIkFHg'm*U@h*k6=Vda[5P*$SB,@3TP4H$\iUHD]-l!!"DSQ'IWffWCmB,'>GBD#3egfriSk4Zdd;'Y6hu/6a<8;TFrll#Zn*!".DJ2/@O2l4p)&R58KQNhotXo0<7r2CtCQ@7![_:$Q[G7$/>>A)0Hs9^6R(L$<[Z!!!@)<E3&mJFBI9Vl#KN)u]>o^W[aF2/(@0`u]RYFZ:)$8;V-am7<C2Q.4b,QMT(p/6fP6FZ9@$!:8IOFmFPY"0r;9;TI5Q?@VqHJ,"eKa=b8q2fE$fE$uE_$s?V!HM##+O5%Nn3WK-[Kql5jHMI!g0gH[6Ak_Jlo&n_BYK_fuB:jVGX097+3ZM%T"GenUnf\VjFZ>*#F?0C%!/4h)Qn^<P)a8XoF`hil=RtaNLE=U07X`?$LFcQ3+E]Z>&ViQ>)((Li;Bg6C`PHXW!!!"5AQ->R(bf@`eubo]8`1,/pqrqp?CG/9n>.ddl'5=V8KAE='8JXZH?Sp*%3cZf7oW/UVZQo!ONQ(P;e%f<Y@#&EWiFRRUpP7.dVP*-K+9s+k*p9a*=hlV#<E?=2YD&85jE<GP3I&g!!)S.k005J$L?6Cf:"R4;TFsWqsV9aA]g6RA:!gg-YnnY('cc.EH\GDTZ<a%*Dpf4SIPW"5i0_W5<g*=<E<.tNhq7gpu$dW#7o*`k-E/_qq^^iQT?>%;B4%CXP*-'"!*.YF[ROmF?0C%!-tefiPKD%)aC-YV%CnB487)#m*DulYAUl/L:Xt-e.L)2E=h/,AiEi2_2UgP3hfM^3ZS2#J8S@i=d^"G.OloGa&9FUCtURho&QmGN]cmR+8tCnW?\.tipaoQb`69Tei:1=,:ZEbdfBFKkU()rXQe99=,aS"cCC:`Q6Phnj,[g`Et?;3GMJo]Mc*&5qnsY9".(%E30\DJ;b'g`9W%sm!78-RWiGphm2P)eWDf^lNhr+B<`Yf2_?nm,p%[R.^[o`4;b'7Ai\8?fb)TXF54_/C!!#iS[Vjn^@).:0gJ4+i+a#>)C%:3%\ba)r`uO]g+9!s:6o6J*9cTg2r@JLalA,E?!2(R:X/h!d+.h;/Oueog[Wq?%TgOTI[=Z_Rp9Si&bh9^YHg7:!%ri`OE5Y&aN_UQ@PoKc(!/ar<$-_nt_lKi=;o_cC<ifDCg1dHrFb=#6H@=m*?[;M4Vc*iNF%,-0+il!b$?9b=!2U/4!!!![A\s*,0ut@h@)1?q>>rR?;V&!V4)s8uZN"t1WMfaV-U6:rGAlcVHAZD$B^f^/g`_Kk&I0V)>Q=a(crj;F:5s72^OH-]WiAt;;OUp@q;iJMAfQ!H@9H1\e"?X3f=psdVk/2aF^1aoRPu-FRQ>6UB`'gmE?J0""TSN&?!ug=R5*F_h7NEM2/?+1;Yh.\>4fceIPH&KaRR:mJ)cMI.Pc+>BZt/<goT!K)Vd^@]?mELRuT]/k\/VrUIW)pk*rJ*?X$b3jHEA7T0@\EO<N9h))Q$R`/,.o/m[3%XdpP_pu/5QX!UW6*6Vt:N&AP'j2H8DnaaHprU8&lj,@+,L)Y#D+dcX:qUa>(F3Q/3S5N["*Xg$'nT2>UYK+7,XS/a%c?efY[p"U]o#i\I`T#c%_eZKb2JR8L]6<RF\T286QAHA`]6<T0h7K021]RMP8h);?ZJg<]2<WH.N>lNSR*iZus4jR?n,DbD^An0#]@j=(U?SBQUD\,I)U04\*)2tbZr1tg/[sdZ\^g;kM_Dehp=X(;=0*5qB[H>3bF?0CE8A*Jg%=W*MRS'-X'aE-e^a[jbOqB-GkL@P/Z^`rW/[uXXC$OH1M9IH24o<mWoq=On%%VQ>T'H]QAOF6cnYS$!-G>Mr8JNZ>]Rq0LE)HrNf>#=Eo+HSWXs"]%2I,&NL"@qBZt/<B\:h.Q)5Q`G+<d5H&!Jjq#C1ts!q9"o&Rp)G3s$^iO@]nqj_`Qad#J9^]!l6q^ksVjRUJIn(Y<ig&B0)Q7cIsi.ILXD]UWB7/$&&(L@s%B-1BgE+/Z']<8#\s8GeXq.0G"[8>2KXf_PgJ,,GtK>WHT^[&&7hK\(?XH"!5rU+mE]C!&]Z6DlAp9DXZCN?g+G'ruJeP5IJ)s]MrGOJkIDVa#2otqmN0KqI8i4utn^:V3c<E3%Gp?]n<iqhuEcQ\4-*d[%DSND&`gL$t<+Rd#<hQ0lq],<]b>ho\d!._3bj3$K,QX=j^70ao^E3:h`q9OQi)rLG1K+C0@n])`L%^<0*K1*%6j$XRBROagZ)R-c14m4AV55Jr<H24C9UE4aFTn*:N*e*nCbrrJ:Y-.3TRr?S%,dD=K.n6+[rqYoKH4B;sg:_k-o]aiboarE<XC&`VnS4\Do#\_##</e42-8+\O"=G>,V/$$QnbA5VP_Ic[r1#JelcY)1?Y3PhY-?k)m;0Kgg*uuXQMDhp*`*A48$Gu0/U.3D/J[QH1S=^c#'rGf&V6Zd2LVBG?qXNm'<[6!!!#i,K=*bhgbZj.8u6dieZCbnUL]OLuDkQjjpP<QTDpH@eZW0U+)g&EfC_A(!RJQB'>ZgHhQgJVVA]IWiL=0fJ.[BjS8Q)CTkug5Z1r`:!KJ*P@B+<8<XGJqlf9]//(N-pYm-1]J40NW-Ik+gM_!_P(a8[Alm1*0DIA*ce5U896LKj'j"Yf_UV'Op-7%jelh^EpQ=Q<Hbfk%AG8VQH.Q&?f5kDhD!UUqd)*1LZ%K<NXf`*5!.\smDV_niYJ7gNSODG`6Ou?ObVSG-S\&LYReDaZMb`VHlt5U#luMH;rH=!/M8nf="g7cMp!m-MgRtim7oiTG=5rnm$g5YToB4G<DM?iSD]_,goT14`Ie&\pjBd5mKbq&<Dd&NukP=;5s2#SdE8l^%54Zc>NON$)Ss-c[kiee&rloA1e+*u<b$B;SQ.)X,s7NRFh0?>OhK`aWKhR\S?$0pG-[3h`\8gQcH0:`af9U3ffPu%/!!%OKhL"_)jia!?orDF_p=Nlurm];g6Y#Vq@)7Hfldn(>#t,A^?&0MXh2.\[?#-[NZ2;oSd1jtNW?^f(Z3&=n-_Ho'gmota`9WC!rog,<Y.EnuG^')\na/AJ4*U+OO(;;m[Au"0A3D<0n0_P45(.atT)FmXmG3!DSXU4inQf5P>0k<UBPtBBQ<)V'C\b5Fa1hH=]BtIY!!%Q;nE-3Y/mGdNat'[>`mOJPmbRd8j,]fhC!sY>o,`/7JX9\h.<VksM]a7o#WT\]i+!QAlr<=`ltl$/>FpaI\(\6*=+_HnEYj_*GM[U,G3io?O]AG_A[bTLPP;M5Y>\2%?/:)9$aKoFnA5R*GiFR@55M30+)J6So:+Y8B&LIU=Z*'n450%9ZSal=fOIY4Fk*VeS;/283,=Vr++LpT/,\X-J(j[H1]RM(&D?aMnWe7EU.%d/Y]]9_P>=BQD#__@%3C.b'<dbkfD*@F(dF$%4Z^2IJ((8h/O\$3&<VB$DnFdiUWN$sDO;!mp,?pHgd3:VWGLc4lY1Bj(b!)kg1rqNi=Etg)jbnRp5gFb@[OTEjiZlRl5!FW5VB';2>QUsChK(c=d#8;,+No;M:Z!R9aj:US'naqL)i*ad):bSQS)Rt`fXb.Ma;5;aK;r.3bd$<j,Q4(EGHP9cp>\nHgEcUS9*4\=5A&SD%Abu^kN:;P$HcT)i[Q^!"h[''-TeP&ROLb@n1!P@]*\eg,Os;5I.h2ib\GSUQ=PD]`8!.bP%Q<lbAfc>?cI;STe\lZ-&S_lD\biLkD0[R&N)cHC6R%:0%bFej"?Ef^F=iqf-XibG2l=T6#%<OQLk?<]-i=e=W(PeZ)XBA+%'W:3:P/0@8bebPlTm+ohTk&@lTIS""4M)e`cN]12bmgM`-s7u\G[`Z&j'nF;fW+imkN-VTp`V1hN1bOqCW?@2)!M_ArkN'W(#h/gn*D1'KCBBhMIff12K7sPQ6IJ2>o<E5#;g@g7A3HAY+Rg\kLJ,Ef8\/-c&Gh#eq`S`[V-#;l*K+B"_E8W1CS.`S&e##jOp=a;#^%Kqn0]%$2I;@H;N?RobcTf0]gU?M([oZX4a(chFEqpeA`.-gdGUjPc`F@g$8:3*T*\3(I`<p+_Z1?O8CoI>#],HJJ,LcuY_N*Pa[;"BWk/;831M9HcUK_t`FmnI)7?.mrfWZOE4LsHF:8CB"pZBW>HhZr6ZXuq%$CX(A<*!$XY*h+lrf"1!]^gb0Hm'-1A,G,UT!PWWF4a8MmBkJPIm&.`>O+<&\\7D'SD='G*PO!0!!'T+DL?HT=_BV+e3E[IQ6AVMPjP*YU%+b-F'l[l38*4^JD>PUYs8^b)E^d(J]<=u)"4PCABL,cZ-9cAT"AafWWmBQP>O0IWdTjV-]8coDQ^M!69XM2Vk2&FhY6ElGP:CV)`MZYFu`S<XnU10&*4kRg[`6\)Fr?=*nAm#R\KQ5HS9/lZN%M(+rgEtnEl2ohMC^XTL"49Oa[_l)XM1@T$ubmg9WY)r7T0]r:A6QnfEmaj+@k+LnXHu'e:a`.],q0G353**d?CZIJWSMY.E&0@\^3m#U%!??m;BP/Ab'96F9aqDUY8g*G=)AYJ%BGq,ri$G4!uu^UA-B3q_!$lfUb8^Am1/^M'<K*l#[6L5GMIFu%A]3HF2ecTYQ_aVO/%buI*9G8mT4(2[=&fiRXFX')c@ALC1E)uotP]Bhl\JHH-8IVR!:n%Ll,m+B2d5Q%[rmY\3U9eMWV.W49b]ULfr3r8'8j&6IOoMDti$Vsr?mNK+MA7*D^ri4kAH;4il>r>^0M<2).<lU(9e(c%E@k6/<Isp#L6:tI"9^(-e-2/tHfZLL2bF6)ICA[_l=huJOM*Y)=[p#rtA7Aqkl`IX^21H,B2)R8+rU"MFJ,Jgr"@)[t%qa.ZrJb`Cj5PtM*]ItAAGa`I6U1VHcQ@GnObXs#fV+'AqT2N^npgfPkgc_8f(/>ur&7r@[pjnj//F8,`!>>_Z'&3hX>!Zo/!!ECL155'pR'6`'4=s!o<IAJn_N9-aA%OJ7XQ[`-+c^OnS`_pG4+.rG4"#=eNRtVX+)m@o)+ofd^$uY7Yg:iNUOIDep:)7.B33H!!"Db\J]E+Iq=U*7gq+ANun8B/$DX81o\Tk9f@8lPGOl;bObN!j5ZVVp=JKLP:&;5UJp%73Fg*ic,qfdh0%7Y4_ONWh,ds3FlT`&A*nRR9ZI>j9:%9U-7i?+A4[/YOjDk/d,<lqD5l^bX7s*f)fNBoNI_,Ta^)+&ZK>afDSa>P)maTh$RaTHimb5Zp$1o7R/6Q&20o2FqLWt^Va(,oj&JMqdboGgl`Rk&/bPW^NUFC#_gKO":A*0`o-"29:uFP4i.K3*]<#iKF%.&^#I8qTFsGNh\(jm4e4irRU.p8EZ#XE8m*:2Q++5u[7E65)Vk8FLaY<9dc^?qCp6$^pZ9M#AH.Q&[opjfEcPJ-7cpA$bZZPH[o?TXNfs52F;:!?ACg0*opu@EJ@Fr7LWf?\A2BEI'/[F[W>HR'F\0C@LgMT+C`"V/Fh=?PJfp+e4;T9gYpr@0Q\RrpE+kL"D>mohrGUq(cbnXRMs5I\CC6g_Adolk,'g$93kNr)p]<807X1PR,PC#-6FBblM/U+h3kEQ,L:roqGc(mpplJL'Q.lCjE^U*6F)GGGsUPA-TT>n:3>QH5Lb@[madG0DIH)p,HMn/_MR_7sdEBP[.l=kBaMtZF$4XW<&ASo$_+?/2#rUmYoqOH^1_$8UG43\gpo[3!UXo!NFiq9D2;ub:[lr1$XGoDo&55OK<X00%6/Q_hV:jAshrlgo8gN^&&]BVE(,?.WAA@8Lcn%H4-l8cDu//qj"fVI:/YiV;N!<=7EX@+aakg5Z&H7AStFrscQ7]L9rS-Db@cV:#&nA>dg?X[huceS3nXd2BG=jPc&D_dj&G?m)/kLA#2A@J%N@#349%b,R*$_lASTU?a;]J5_56^aDs\h3TFg=k7sU?iXJW<1eP/[o0NDTFm8kbC(Rg6B:<]/$UE.FrQQfD>16m#%@"n&ijkZ$nFB\Pr$V0><gE1U"=JMH932C0*Q2hu<GcZM',2>B^$bGLU]N1XA1I>mo0QPkF]br]TWdIfKH_QR9m2fi/'an+jLYpt!2`A)4_=0j^ec/'-d(CTft3B5Rp.-7A`8F$1lT34ZZ()Vd[0\=Sn"T.[nMW4hkoLpQWi'J7K4<qWA@BXs]J#Pt9`?M`eC^R6t)s8LpU]8b-C#F^i^Y?9B8SFH1fb?YdE4%7*RoB4G<>Y*P[GOMhKbH`&*NAo^]]DD&gGMX2rDHtloH'/ss?JN&H'X-;8gMPX+lIT.,3u-@3B3oSs(#-39DfQX<SjsiIAGGZQmAf@9gOEPPp*.s[opkm1!laRd=^-e:DoR_RX]E=>!2'l[Y1;U)@pZorP>qhPs!9V9<i#7%mj9,o)^CKeP:)\S1MLKnlT+k-r<;oYUQ;QBR<.D7:@?!r7>hqh&6fArGj8=nl8N3jq6nmr)HUitYI#k#1=ocP:"uRI"e(Z;_2]R"qTUtVCgkH@AN]XPN*lUI,=c@\Q2UUST/LQ?^%^BqG4""=++F!^Rr1:KPZ+lsc8k'X\)2YHrn8ECr:*(*#%d8C%l7kD>e+ldHnbQ5m^h_un:`N+D`,&]VM.t=hS"9&/6S-!:+K?^]u-nS^7*<F(2pnV`Z+Gcp=V-Iq!ch7=6GGaXk%Q6Q'Q<ikNpr1aGP/a$<%Pb6Ou>E:&Yp%7Zc$+=YVBApm6L+(Y*=%!"*(cb"O_^8qXaVIe0&d$lh72nIuEAk*F6AD&V;7Y]/R<Z=\"5aaZHd?bO(S0#%,?lK[[2RqT+!e)X%FpMOKC5-hgTlT&UMI<HU0<p,eLg*1aS@WSl2eX)gPbPq-+T%@:q/^@3Fr6AVpl(r=3oiC+\<E3&<YB+cWMDP13=gRBhS$oN.;fQ)Kh6YEkRh_K_e%^D4>Ah!J5q0=oHHs6NG?pJVB0BnbT3aq8Uj+C*LrJ'_!!!!EOkgG2RslM2h)(Mt3&eBc2A:"P(K0:+\`P5dBKT^A$fd[$opdAt\nYKraZ\(cak42#Soa>1kH8!rC2Hn@GiFS8J1LB8PqKi/.Rl&:4S)6)oS]uuYC?-pG8WZ4BVCIB=RLRbi&\mQ%GeO6A"8/1G<`]+-Cf>?M:Z!R9t]=Lje9,k2La-8]Q)(CVe"u%q"O7WrpOd:l)$%:[P[t@Dp,+>2Rdu'k3mg"qr>\UbM=EY_+^Ib4\f-SSt+P5ce2CgY,cHBk@A'#ERp+m*\q7srEY6P\1@jbJ0L.>N]+W7Y?SJRhgZ@A)EaQQG8"$NaP*]ueDOK4\X>H^ep(6V,k[[U:#0sB\=Sm7AAs^]r8Sk<Cp'Y4k(tIWW*b+4ef-Sf@(Y\am@=cu_;s,uB\.XQDnl8E3Tlo2[f8#IO$32=>Lj;b!!&gX]C9=XU.)VjO>m/+C,SZSq!mBgmbA[Qk%Zug"l=Xuc-`:V[p%*,CG[P^Wd;t)7X&,qq7Q:"OO`9@V<6k<_VQ=+SD<4%%A#$"UaD_Xeae+/\^lRd)aDOe!!!!I-pR[p:U=hW[VXVPC=K3;PKN47mQ;CKFQic%J,_0k4K$"i<Unu5HN*]upJ#r4q<(O8mBg!X]^sG'Z"$;lK*gj(@Hl4:\\#"Vc^nFnk_>s>'rC#]"Z"n;c\Y+Qs8;KCplWT=Iln+Nr`gGF5-I*#)N>j$%KHJ/'U3FZS?pL%CZW^(0q?QB_J-5JY5WD/^%]O0%;%*B]mKMGl-gU'C?j!uO;470o[-0MYG\Mc`4KCRg=NXBY-R601oTTu(21lk/)=CT$2<8"?ho.&5>*qZo@19ij6BEXghJu"\$KN5il*7m!<<+MJsFRn1O/EIYC,F^0p&"`B24Wmq/$%r=D$L,JIQ?XRl5+EqWO^7h4&>s\V24mDR'$K^e.hW#qs$f@WnA@VX]>W\JpZ#NZ@l=1X@neK3Pd#aZYKXS*E#EH;";;rKf*?f&Tf/DnYgEG,J@#R;c?3kNps<ZWTjLFu`a'NI_*1!!%;1RjBE1h"3/N1s"?*%;J)9gi?&2M9DbjRp+H@mP:C19.$k*m&P?&;3U[CIJYNl,=dd</h["Sf=ptNdng#&%tD[Wg:;:fg9k^o:7[iUTl8i&d2K-QBKB2?fscH?S?IG@lWL/&??kEB:HXbfI.,q*DnPV[_M&@&%2tHGF"/[j)jHrJ;U:2\/6K,!>O:XUYAWjbGlRgETQ"Gj*LH`hj,b2#SqPY(k-JR<Nq:OXYH6,]G+8-fUQ9#0O5-!_Ki$*pJ"KSZ%g:e(IJ^*KZZ=A"DCkMIP"RF\Z=Q\P/^PW?%Qp8*p[6j1Q7U/C2GH70m'E=4p=[I;&[eI,'<8+6ZO;b%O&iAdeZRO)!!%P^H0M/lL(56XEd8i&,ch2-T3R5Mrm\R)aVBM!Nun8^Rr@^FN-`d`H?WXP=3o"$o?KEjQS+gkH1I%?6aGFeTL"2W:7Sh)accKVe[2>4ope]uF`g(bS'D@&E<o<"jcjP`\RsmAND88b[BIjJSFF`Ych-\`5F+FtXL$c0l`CYM#64`(!'l+fZY.TKro64Tp#230jT#8\!#1I^I-3Ro8a"9(rpn)OJ"/P>z>.7t[MX5fHTgOV7qnN/Xl>Q_'!!$]gVG3P7%j,+Y<d*uK#;9;i/9NoP!!!#+c?))I!!!#<aE0HC!!!!fa)j?B!!!!fa)j?B!'o_L=Ks'^rdXqFq5Ij)kRmOTfe[?j,h(uX!!"%GHM-Q0]m@YJ@b.V`WFGtm=\P^q!!%,VF3d#$[r:.@8kb^4/TiTE4d"uN!!%Omft)=l;+DWAK8>?t-`2n-T]\)$%KHLU7b-&>_hJVYiPV$;@oC>Kd*nCX#64a;MpkHd4[omuLC^SfWC\*<!<9lW3WK.F$RSQ7&EAHF!sWSr[OlVQ!;s=]F?9HnJ,W6mkl:\`3E)hNNKHQBIf20@fT8-0!#dV`%KHLU^s&3&@uSdHGOID)ete<0J>S`0#64bFWMlc:7L,3DQ)S6oTG@-te+r4&O&C`8!!"9``uTA7j+;sm(T*2rJ2T-Q%KHM$A2,:LME1:kcVGPh!:=/T*<6*'R9$Lth5aV\(^nQV2(Nf#!486[F8u<6Vg7^@kPFo>)af-ie#&t%"b;UhSIPW"oFP68CcUdZUZ0Js`/,.+`r\M=R8*te!(pR?FnMtI_r>J3)/#J%3Yh_,L?Wd[!2-]iIer=!Kg3<Ff@8<GNWjqc@lbV1!%:h`>];uVcQ=iK^p\+7;TAi(f/&s-!!&7Nb:gUm^>\hPf5JQ]%B3h<TY$Rd#64`r`lsi,j1Ba.hS%OD?(3kj!4nN]F8u<6"B8?"A=)1T<`Z)X"b:tSSIPW"'X^$j\0Ll7^Mr/Ke?K"8=**QM24Y3W!#1t=.op3<jQFj]T/m_f&hojd!!!_"eZ2dGlI@E!_p=c/.s3BC,a4]mk>S#LPj*8i!2,E:pY9h<qt?"fn'e..9-"B?M4%*D!!!A`Q7Z=$3pN[=dQV[1`72$l:af#8!rr<)CZj!6_hJVYYNohkECT4q!%9DkVpkIdDgmm2)uous5Fm9"l1%4@KG.+ZWMrH0$NL@NF?0C%:hVJki.C`]5%)0VD;2LqNWjq7ANCh3!%8hR?[d9J1[ir!hhDRZ;TAi(Tei5L!!"9'A&aK&:>WU,n$Qr_VN(h1ia=ef!!#QgU7rk/)sb33hO?PA!/cWtF8u:`M*(.8,:hpSpr>To*=Dkda)j?B!0ChD<ijBVJ^9rQ5BSLW'J\)$!!#95XBrS$qsHU_eu[B+!)W;]VZQo!h<hc9T'P.?Dg^lB2JlX_=9'`]VUGPGJF9aTbEeo`3\%j^:RjC!FY!NWPR^Bb;cQiJh,+1Q5dB(SF6Bc9_r>J*)/#J%3Yh]f;nJpU3U3Q<C27VV',U]L'WKPW5<Z_gT5_XR2)R7j@f`65[;e6uQX>3p1DTukTOepEE'\kg*]S,s[Vabs`r\M_CWgf\pY9gc/9(7/8(Z;AjZ,F'!%82@?[d9JBC=BThhDRZ;TAi(O3m063n(!&cecA(^AIIC*WQ0S\/@)7`4+jb]mHqg]/Fd_!;%fo9W'[U`/*c^@Ddhr$4d+:$I_^.h3<=l^A$K2;o\r):K1J"fm#QKh7IkQGi4-as5d=sqGl5l!<Ad3gi:@Tg%T$`9`gDQj6:ZWIer<7HH(p`QT@S9!%8+'<ijBV,_,90hb+st!'OV?l#^gTmC)laS6imTrV!_89cYGY!$o"!p$1l_nuQ!#;TAh=s!]mtcK@Cc\["GBaX*:LNXc$h;L7cAkPkD*s#e"7:Ra6oFY!O^-RpVs5P;!OPr3U?JHrpbk*r?F!s!j.[VXW;e58`T(ZU>c-`2n-!<-2.?/9r'h07k8-T3U>AA8$0Dl8U-!!!Ya\T?r<@Dh(TnJPu0OZF6XpeSMGn%SbogBS3.fN]^M;dNd:;cAl@=9&?B\'n,;4h_H!E5Dpq%g,W6IfK<&c^m;s0E0ra>-?rI<)chm%N,6Ho'1f7/r4G_!s]=k[V]76=9.RLlK[ZsbaJ(E:O]U/Q(6'*roIL9o[-1.@g<!a4LtC\bN!C-?i7lMCtPs8FY!O^TAFkVSY,r[kLX$em?fV<55j_A\##nlJ,[do8KBYg!9D%V))L7[E:;Ysf</DK3Yh^/egmr:Z=:e1DggqUUIL4m0/%7LT(BF@qmU]jFf?Sh!.aK[dnMc4?\%UYpYOE)!'jc=e^\Nn]_S_Bm^hu3.o/A)jA10_'=j:OrV,3A3][7kPh*$F?VsZTIf/tNO$0pIT0Br8pMSSGm*GcqAs$nlEfkU/IZ];_Ih)PM:&dlcl$i`,"ROjM/,Jf"cr5G#JH$1[(^V'oRJJiETR5pQ.4G%"!%9JIEVJ_H-gSg639#`C;l2*L[&C")C<)>THhZr&*?Ct0dO^P5;D&S8dP$b;bJm(G:S@qaR/WGZoY1B&][j8nJ'pn9AUX=*Z")U::4\4#N.fD11K)^;i'<.Hs&,6V^Aq(Em_8Sdm.U?eN]G*<8IA:iAL(pArYtb[>uQL\co(I1'KH%E!#2^\rTHc)+((m=RGsrY$<AEbUhH'pOgM+*!U)*501A2,$NPnFm^qr53p8SFk+n"@=r3$aAZWWZ!_#i`96&AZ!^K%S^OCTSRC=i5'Tq`4AYcJUq10`ds.pRsIfZ3]A.pXlR5-(2+OE=*L#8$.W<31b#lQDF9)f8!KqP07,+F,14o5qa8D7m+7Lr?"MN7\&ihcYYJE1n@g=<)sTBM:u9nOW)W>c-`BcP6b3Ym7Sdf353oY1Bf<qaSMZ"(hO%KngF'%if^J`<F(V$-"3!?e(GO$2&9#:XiLT*Q[0;[3BN<r-/qJGp>b;H^b`IItBH*-"C35bPG-N?aiSBEKXiqHljLrYGQta=d2[=:Ikfp7Mk]Hilf's%CJ\rrPFuj2[4A/pPd<7B$B?cAFH=A<)mL*=+proY6V!r@\-rOkmZW<E5;F&Ep2dA%1q0`BsStajC%h5SDb6;KqK[OZF';X@VC<WMuj!!GJ&'Q]e'B"b7kEp[0&-nD:j*;[3Ap'knZ0*%@F>&:i?rIjl93?N<WkCqnIs5hD+D5d>:BU6N`3!6@D'0;V'#"3&.QMGbXj!?hF7^Q]B,$ks*4.nYYG#(ZX#s&)JM1JfWmY:(^f)$'5's%=f'cTnaS^7pk5B)p";r@b!84p/d@q2/&oT)g)7oY6V'q$[rFk:9/]Hj5-!e,N<<j>0U`S?F=enehGu:]F':Oj?:tE5&'2aCbLo5Q*736p:^l_YK'e,+elYs7F'j');qM$g0$4M0oMXr6t[D9&qd)/=`ml-1VoRnk]9Y.?VqAZ#IFOPfRJ;a?TVVV*mKL`PVG.;Bh_6+TM)KPS3d#'FX(S8r7p"JGdmr;G-"+:b8-?-meF%!:iqc9.?"L5d>:BU6N`3!6@D'0;V'#"3&.QMGbXj!?hF7^Q]B,$ks*4.nYYG#(ZX#s&)JM1JfWmY:(^f)$'5's%=f'cTnaS^7pk5B)p";r@b!84p/d@q2/&oT)g)7oY6V'q$[rFk:9/]Hj5-!e,N<<j>0U`S?F=enehGu:]F':Oj?:tE5&'2aCbLo5Q*736p:^l_YK'e,+elYs7F'j');qM$g0$4M0oMXr6t[D9&qd)/=`ml-1VoRnk];?WY\ud@IW3kAY!o:h06?>Tt7hH>Aq24(;B_;b<Ppo_`[9hl&j:WZ#IEl<VQ1$dE/Op[;,9na[:dkaVO4"^]1f`j8S^Ys7Mq,hT>ehQ2p^h!;WPmD,oHX3L_sGc8MJidp_eb-l1*0Xm1rGGOOD%bEjk(1h]^,bP1DYpQf$$d0mFMHj5-!e,Qj+5P:Q3lKX9\^,T>!4f?3Y1JfWmY?KK<rGQOiD+-l^H$O\9T:.NHb'WTjQZ1i?NdM%]r6t\SWhuZUM'nlsgQY^=<h4U*\QKl3(bt$$#9IQ!Z*8B:eeU0KCY,^lZY&=57]PWnR!]*qL%A<F]"J&K\o_YhQnrF&TS3ai^@g&]F`hisf$9gJ=0>dgI/*29?T_uHSD)]NFF.A*j>-esTDl;U55aofb:gUmCVqsR390bJs*_pgErG[_fDi1MH;97;B:r?d?ZegCqVO6hHunrDdCBn:k09A70D"nlDkD*r3S?0C++F"6:I!YEZ'Qg5$ip+$s6Ycjf5oeqn%C6S\>$fNhWd*A-D,iuiI'/n*U%u'.k>[pRanH?2n)n,0"Z)i[Faj"Z_pFu03Ri`!:iqcgDQQ]kLA&44o=TPA&aJL?20t;b(b4;LWO2%=?'Z17XP$iO$<F(WiN;FQCg!J;GBk[F%brSZY/FERG!a9STWMD*BUhnp<k4Y!?hF7^R`d2H;6"o;,P`MDr9of,=dcAp=X(s\D[YbS5,6n5d>:BlAYH1^H6W*3:!ZPZK6#;n]$k2?F4BC[cFAaUY^7UNNS2NPf[P<a?TWAB6:YTP:PIBDgq;IgUD+)s.Xg7LWO2%=?'Z17XP$iGM[W.]'HL<1M4jm+[]F]ihUlq#KUNXa?TWAB6:GN1OSue7ilqdn(tbN?W>A9%/C;G$g4S9k`Y*@1s,\s*@%0W+TM)KS^HEbPIKCpl`t*F)AI&<F#m)\"3&.QW\_5iT(D6JYDsGS,$XZ_R5<*Cgd^iP!:iqcgDO;oI8W5+oAh](/=`n)URUO/HhQg*W2Rd<>@(Y8kbF2^a_H/(q$[9!VuQ,mope>nT7LJ1I+9+j<6ojVZ,c_8n#nD4!;R$'q5=8[%/$,W,G0NriI'/nh,2MO]QnSd:923`#KM<U^WrE<4p+(Ll$kc^4f?ZJB:r?d?Zei)f5p3nF3;\LQRl9;='+!"U%T&g)$'5's4\FV3JBpd"3&.QW\_5ps4t2)A,Tl^_M&A5CMUO3e/gq?"$lkMIlg"\VpNLtTNF0\F[fI*^NF[A:HnU8i5($\F#llV"$lkMIlg"\VpNLtTNF0\F[h_i^O,_C?++QPD?Anio('bX(WVG>*c4[qT)g)7oY6rjSl9=`1JfWmY<&HMrU911]5P=K[ds"[CaK&WpTL["1hTR=a_(Up5Q,M5W94j5q$[rFkGunlAH,k4;tK[cJ%b3`$m%P+WMc?QVGMUFq$[9!VuQ,mope>nT7LJ1I+9+*l$p0\h`bc&Ug,Weba:+<^A)13L"\o8B)p";rGQ>Ik7ej1$ks*4X3TpJs82NEDkDOYq70t[Ue-cYDr9ERU%T&g)$'5's4\FV3JBpd"3&.QW\Z]es6eUKl\[3qa;&d1rq3JHeC8SaW',f]#(ZX#s)s-C:8*fr5d>:BlAQ5F^U:JWoB+<@'m"!3R^Hq_XuqBk6c`m?a?TWAB;ju-)YjdU$g4S9kWo0[HM-R@%mN2Ra;%c]TpX<:j>-esTDl;Ue8ktVHj5I^o2TG1\,Y9h@n1FjSBlTF1Ul7jqq<rQie]&<OOZhk)$'5's4\FV3JBpd"3&.QW\`A`s$$;CUZLV!AaM=!nDG*hGTf:u<:&[%!9BdO[klNT$B9E;MM:Y%B=,/J^%')]gKVm!cY43k$ip+$s6U6fS3eHmJR[SceJ[c>J*SbhT$pEp1B?L.rg-M,T7LJ1HpoKHcN'&VqHljOHj5I^o+e)i4p+(Ll$k-.neihkc<$5Cq$[9!VuNTXaCh/J3+#NTj>-esTDk0T,+jEqiI"'COj=#hJ,3MEM0oMbL%?%U6p:]<ronn]-1Vp%(=$!G');q9q5=7hPfRL1=?'Yb9&qc.jIcF<;Bh`a@c;]'.?VpVOFR+68r7p"MM:X:V*mKL5lU"t.4+O&-l1*0PS3d#!;WPmV3K&6TNF0\;+fn*!9BdOQVo$"JR[Sc74FAF!0D^,?V60&#)\-+'r=;^"$lkMIjl]7)(69G=-O?n$ip+$s.tt$B:r?d?VsGV1B?L.rg-M,T7LJ1HpoKHcN'&VqHljOHj5I^o+e)i4p+(Ll$k-.neihkc<$5Cq$[9!VuNTXaCh/J3+#NTj>-esTDk0T,+jEqiI"'COj=#hJ,3MEM0oMbL%?%U6p:]<ronn]-1Vp%(=$!G');q9q5=7hPfRL1=?'Yb9&qc.jIcF<;Bh`a@c;]'.?VpVOFR+68r7p"MM:X:V*mKL5lU"t.4+O&-l1*0PS3d#!;Y6YGOOaFp[6k,3Y:MV8E38'8EnWT!45N$9?GQ\!^IBHqXfUsGfPgbW<7^sMDU?(Ng*9Z#XI_J^Q]0*0*!8;m'4T#(L0s?Pr]K?X@VABk"+adJH3&Ps%CJ\rrPFuj2[4A/pPd<7B$B?cAFH=A<)mL*=+proY6V!r@\-r;,L1&?1=(-;c3i%SJ>iYaW)b#3Y6hml$k-"qHj4n@f?/rd01V3`"AsNJ^0-0Nb"07:)sU*lh%rV%/hgZUlsQNJ,fKAV[`hj/eZg]q`o/Ks&&pj^As?lG00L2Z"$];!Z`'`lsan+\EJDk!W$.'88-VX?.i.TrJ?U[Q2P\VdQ!CMFY!N0V>mCEl$i^V\a3+F`uK0EhS"87`rbWA8K4YpO+T\Pdf34XoY1B&+AOu^,S/V%(hJcYL]gHn#XCoDIjn:l?N;Jcldr?/h7In'bB)gi8KA2G<MXCUD5=>TC&g[ps%>)prrPGO\bkg,bP(OmP+n%dR1,4hWFGtm3;kML7K3_q"mAH@qGGg0:RNuW^&/SG8C$QWmgr'[3ZN[qdf32ZoY1B&aR6e>md.gZ@u`Rh'/q=)Od=Z'N01(<1'j*Qr@\=LrsJg\DuKP*g%:53m+ASW<Djq`'dFm.b`!6YcTY07oY2(er@\-bQ\pZX5(39<IJ4=D*&2$IPXUKG<E3&dfWi>ji8d2"=X74I>U3XO?R0'GNKKMJN=(n(r@_mLIfZ2Fm+Sit3ppL=4gkb+5bqj7A>Ef%h[G&'V>mBbk^NW+Gcb>f55Og>j2XZFhPX/Aliqt'<fq!VClrb#G`dHXmKRt[r@duErriD$n%S\ebC*=c`$[`go#W7dH0(<8h0%?@cTbc<=-ks/!%8ku#ARUfd7(IN[Ah%E!2,.ue^Y*K33^LhKU%mjNuBn@TDn)IQ7Z>7lDq+cNYDJN<GcU?72K6oFg#lKbXifb!!&kRN]ZZBbB;*[ro\bpG3mjsY.<]X5QCO@n%=iFC&fXl)`MXS2JcLfUk]q1aR\H9;hkGT5`,:"UQ5mLr:"mc_u@bRIe(,.rN7*F!2*oHQS1SaO@,c.*&_Wc`f1p9LB@NA8\+)_S(^ud3UEuf^@Roa]_C90WC$l?6>+.T!!'T19he?-H$RSuSA5$W^\uc6rR[)oqC$Kj!)VlQQid=RIXLHcheK<WF7RF#hg=h*m]HVA[P2,"!!%<9`Z&h9Gi4.4M`IF+e>FcH.oSqC!6)d-3<0'?g#U8=)\d?WpUSU]5KoZ[2g'3BnGh7Tq]I?Q1ND??plZ#Z.8m$8PESs<%oFl#83eUJHB]&9n>4K&$l0aQ`$iPZQU=D@JRDLl$,MM(3)WA)DJBau$]ROd3=Qo:"r/>rJhKLt6k"kY/1eO`p@%i)1UFEobO5)jmcX0H[ES:84T4Y[BD_R"pX>B[D4'q>DgkX&)uoum`lg$MI)#afjOSBac^m::g9fr(Z"(iBfs<'l(]g9BBp\u&5__af)O4OQH2?d'j2%1QRSSG0e+);r!sYi0ZR4uT!MH`3Qid=R[[qg1WO/%6a<?>7kDDM(r:=:pnsACQDV_m<VZQoJ%<DLLW!(4$N+(Y[J[pj1g9p5chtVqL3WP8i0F%T.$??+EpEt`nP9s!RHr`<L!!p2\n('/t!.`3h?XM]sB?rOuXfefZ\q"rb!-E7^=0M&L^V>L`!!#u_s8MKeNapSj?[ob_"`iA^gjAM'D&F8mA4sf[!!"LtY$JYcp$1)k1>:smd+N*"!rtS4>IA3G3K%UL"$e6-@1E8;*Jnr#!-EH(jo>D.nS"g&5R4/p%KHJLQ$,1gF@[>4!!(C)Br;%uLS8,d!!&RFFufVF!#ju"!79D4VZT2rVI9r7!1f<s3WQNc)Wh#"d)g"""$erB@1E8;,dc#$TO#nu#64aEBr;%uL!q^\!!!@?VZT3'dP(n+!(tU5#Cq\pgG%fG5Q"s@i;`jCL!i^$J-quY%KHKnmtDQacqXgrCb8bnTPN/^)Wh#"5l%e9!?a`Jjo>BHZY?<>5TA0+#64bt?VO6hEk8l+3WQOq(LD>P_]/XVBG&t_!71p,bQ.]oQBg3"a4]n]ZoAM9!!&[WBVtqtMpj?b!!$2lFufW1+:WAl!2+1BVZT2BcnG\)!8<TZ3WSLo%<DLL+;<Jn!72,mjo>BH[^=KaTLgua!<@XBTUcPmA^W7;!!"L(FufU[9#DVK!2r0:kl=PEL,f56:s$)n!?b0U_]5$)!WYJsdS:$tP_M0u!75'=hS!,T*<7q?!<@Xn7lq`A:.rJE!!$]I[*o'>KJ^mR!.abq4f[+/#G<kD/,:+G!!#9rVO\2^-_XrY!!%*pg?ATZ?lJ/-!'j&NSIRo?UgX`5!-E&2kl>fZ)Wh#"5\Ha\%R>fC@1E8;F=LudSX9IlVZY<6BUAl%!1f<s3WSQ3L,f56d$\UG"46ILQid<gBVtsZNbFd^!!&h%dfHCd)Wh#"!/7f/!<<*"BQpi4!<<*"zzzz!!!![R'g_]Sp97O?+P-G2fE$M"l=LaNDiS4-0`nXe5K-X>p^W]p9E?*g:X??H0:`,_hQ.RHhHZ(qTaM=qqL#R4S-d!En[m7l"[ge`NOdil\8FT55aofmsO:[nR.tQI9q<k`=e<OX(&>96`d3L!ql6ZDnYhpmC1t:C=K1'4aJCBhQL;$ET>%j?G(O;[V[<kSgTMt;7YGE2f<isIJ3m]>`_E1B[EF<YJ5PJb*@>JmOe9u7L-A7c^kqZG[Y`;oo:%Sb23s7!!&[/r;H)6+$Fpl9]<1gp=_ZVp(T-`B[NPrRQklUbb?Vuj,Q4\fqCcgroGe_.Ilt5DnWQm^:p:3g8pkZ`fD3KU/Fk"T(CN;Dd@b\`MJJ9pY9gc?!U`'ld)t'opg8Dm#g_l]/TAFOX!B!>.(C":!4X2_1N!-o[6CoC^:"@1u"HVCO5[='uuraL(/LmSTbuX4q>$]R!.K-M>d;D9+Sn'D^7u*],HIO99q+H2f;kOT=clR=uIF\V[AbD3jU4Ck*]kR\c2HkLC>'KX]r7e++G"H5K>#=GgUe&]%R`@7VpkiYsbt@A0Lq()ID:Sb#EJ"0gAjSG]DT]`!A##[VY-PSIN7iOJ2OIqWZJ,-_DYg[r0H;G0caCf3Wf@o",nANZL@[msk@ahD4>Nbgfd%]kc6&go'-J5<]+2:Q5'B/,eF3peeS5bEc]C`fD2`bFEY!3Ur6$pXC.#][>*+p(^P%k0K[W:iWI&4_M`k'n,rNM.aGEmlkmZeCCU$-^u*VMU?eGiJ5kmd]0=IE_8B,<(48E=5Gr+n%S[:1)+0@Qn_B#q.0&a]Q`i$^\m1HF6ChC5)4LWkco*c_RqHplT%C0\4Y<`nL&gFc9M@,_ScESJ/0t_k03H_4Utgl0DrsCYDaG]ZCt_r*!S&uYb:3JlF"%-!sT0Ik_8QVmskB7]HcUfopf-/l-cCSf%HmNmoXW]0JOS`B]@Asopg:$Hg\El/`RNcRFo^r?d/[Uq;(Lg(Vccd*dd8FcTe&re<V[jL(>ATjH2t3l;tace#-!hARb'lFQh((3N'onOtqBslJ[L?:6m@!iET.BHf+i=>KZk/.oFVAERe&Vopf-5i4sp6e/;nhZ$,NgU9BQ#\adZY]6mjSC$>,p]]I?4LsE>:a,V[Q\0?3bR[T\>J#tVIhOG:-@[SU8GTum]de0+uHsG!d264p@?S4J7fOJIs"onWt[<:fdF3d!.-6;"?f!jZ6F549F--i@EZt\"BB:k`\9('4LNo\s@]C3HqNi8._fAd.F]"0rkL$?F$4?I0!QrlOtiS:tbj1i];R>&]N,pk'`F`k1LG$FOS!<WPEN%&@.acUj2p%I-Yc^m9]rJic(J3::B'-"Z-l-c:F>NTI)kK]X+[C(9e#N("-mE$n4VJ1<OX]i+^]egt)^EbV.R(+I"i5]p^K"UQdqiY\oCh@L"RF`P]D'nY3ZY7a\]Vef5>T"V:_hJVIrUnd_NZD?2BTk:!.9c".Y/;/@H?=NK9URZ4oS7LWeT6HU+.dkC2g!SMd<\Q887$A^2=Yq([WMD;jR5qs3H=&s7Sc`p?9K\84=(Gpim1GX3dLSBDUbU^J,S\?e&TY2kCf1.H7:ill)'qf.PiaY!,/CQ*d]GuCkiK@qXDB5a0[$;+AY6#FO;Dpd.c*qDbV],Z#JZanCk9ccT'sD/d9jDV&'W[_0jIH$<J/O`lXomhLq`!8P6W@%`OW@cK**2[r:/11uOa9N>OAoQAGpbk09A'=.<meWiP8V()"_DIr&)@rX!^iF]DFA8\&I,m+FfT0/4A(gi,Wd9^148d.TZui.K3*]<'2rBDU`gH6rf`j?fm-*6?!TWm[V9hPF=g=X.XMPC,uhpi(,WHHt$>;q'(LU/tV8Xli+)&UZ])B?m#:5K'S&X3X$1r0j(Ceu7c-"'a&DQ7lU:KUmI%<13EL1A;%S!&Rp6i?9NdEM,C2gpm-)b*4>DH[BYf^-2:X\Y8/Xqu4&cPkT$;H;-\!?5e]3mbG@pfeU)AT8!i4f<8OGGjsX9r/*#-.")VgF<6Qk5b>,:]ralRX0,X<SeK9mmp<S.7!`u@l*UP[88:$PfpGuG:-Un)F)mH8E:TG=J+V,Yaffkr/LW4/,bKj+'r%B4k;KC(`.PUm8;/GG'\7?R0*2=f*4TnB\e<sZ<AQh5P9!NmI&]MI^['\J2td*=LAG9[!5O&@U[."%q4uf.'NH&4l;!E3J,J=K2mgHHRl:is2QU9#IWsXoBDQ"^A6Yf.6ZVAI6%]A)qWO].n!H2C87r1@HM&c#80LbKKR`H;hjZTFi\SnC;n1Pnm^ao/6`0'I=05ZP8^CP^4.3j^F9"tkis'1D8Vs*is8K49qJ,k7EZJ2,+]VFhcF[k;>3PtAms^V8_EE8>jBZ0DBM#!OlT+i_Y+I;YlDh([PC=+jN"=@bRdgu\S.HEbCDuKsPNSg4DMmOc=/PqjbGj[Se^Yt*Z:g]c"TSQ".4O2N#HMQa-QXpGGh9*(='pAuEco10n%N$*];4>)`ljin4C<2BdA-sSV-!Q[?iN0(P#-DR<NF\lRe5ua3qC1D&)X[(99UP#>#itU9[Y:K4_Z;B(!cc+YH=qoeu`.oXWUL5F#`F(e'Nkk)qT.OYB\=(KW;8JPE&Fs?[:/NO6DBU\U:fYgSl!H^Cb`=Ng?j2`/]<>eQ9NcrU2+do3_Oj?i$>p!72X-m+@GEJQ7$EaLUK*>P'PK99q,#%TASR]qqoT9#XYL*:kPu^rai0o9r3,V!-%^q<+A7p=Nle'Pf=)VVHJmr:c$qSg\p8<NF\lP3H:T^3k2d/,[Y1IT(JS)N_MH>"s;boA&V*;AmQh/1W_^V"!Cj=YfHp,Q5,)g(h/XlT+i_Xolp1:U73rPLco"c'qcY[V!UmlW-ln_jE&`IQaU5HBUNj>5Y),rqbs(r"BA:!)8aNQH?b4lCp_*\hnf$e[i?']C*6\\W9bMe5K/&"8Fjoc0OP\-Ouq^Js4]9P4]>-55_<CrTVIi/"8T+81PkFgsEM%C6Ns=DI;BL9:"YYgj8X`R+dd2T]c`pPh5V[MA#OTQX>2eq=<W)2)RVuq9Ps6SN:K5Ul-n?GgrZh6\c0=hnT22`uTBrd759u`"@bFG1`]Vor/$(4Rdk'%S1ber"/mf#NMdc+;Tlhj!F64G^6A9<Y[-De],bl/`Ma.C(F)*afEW2B-cVF?'Q+udpMpX$C'.B/?RY@Sq!+c)(W@QVsWe1qf8jNMEK\&D-QF4'WpO4Xh^j\(2EIT^,#"7,=dcQ4k8arZiC*QD!<n"H'e$5o?KG8L(3IsE9#2fiH*=.(C0GDE@*PRaH/BA9b6U^m+o;Jn])`4A)3ja^^Cr2/=^/`SQR4F?C0OLTho&YB4&rdBhphXZjds4,S.=u4XZZjP[D`c4XZs:I.4rWnZ-Zu^%^B(b:OAS9K;@>Z[2B6IJDcVQ_+/`L3V0llNeWMLgVF&#V<j9HA">\jC5'ph/Q?(am4DG??Vd%A<X'U$I?4T>IYJMDU[pU$9t%:WTOu/lDh([PMXa$BP]7ucT10YF-\@[ZE0E@T6rDrE2NU6>PrfJq!7Xo5Q3D5lS`.dJD^D+pDTS'!76&?\kQLhh6[o0U\>tcZ"$9Dd)I7*WMc>VHP#&?B@#K7p9u?.B")[6)TU]S>huSj^YBV8*^'5NB:mFSZ:$jRTh7lHCn]Vdpqh@&^7;7,Y.O,5jJja'*(p"iUQ8mL4a6>LX096`q!d66neBW^CY+s0%iI,JVXkHJ9ShT0=gM_bRlBee#9J]sB$:q?Y$LqeRr<3$]Qr8?D6_ec^\$,*IYe$DKCMnl&<"NEnWJ-*]KB4-X,7Y3C1HAq(@alaFq$kQ5t7dbE.f7Ja(hq$_[^2"Q7Xhqh7@a0Xf^FR^Rmi<G:-0ZkfNc(P7g\u3BcbV>[$*AF!gRMIDrA#.]hg/KreC^0]f`]hu;]#:Zb\c@e>g6C<NgD1pnEG?M!FpRa_j.rE^UqdGb[/3U6nMJ7_onE+,(;qQZi'&/T2r=]?A6a/^O]RZq'7<W:B^*9tQFI!W4sbYrP#J6R,-O^&LLd*[<KlT'Z#?+"E1-^e#FhPqTQ\U!Oq=gM_"*BU]Rn(raYG4<<QT5_XR0qjM^r9W+C++3RokFR%'8Y*b'9"\lNFT`7a6nf3N";]r2`Z,p1RhH_URoX-&.gi+#Ia"9?0>.a=@HfY[<cmutdIFc6>]H1]G1$QB14,ee5+JsZkNj_/lDj(Hb*,.mh?cga8Scq[;9qi6]&haHXJhk;jso0t3?=*l^L[BFcr/<+a/(ZC'tK"JX&gZ=ZUL@,2C&e-QS)R4SDfQV.7)@L7=(Smhu)UqKr]O[NApFR[kGCf8^Vk0^4NDgg7TO.qLsBnoL$nlbcbesC;0GUmj2,-lP#oc7,P_,A%G`A<V>:&&!m$6J$pQB#W2[DYTrqqKY3;%c&@XA9o]\/3nSU&q$k%6lDrO??U&Yrd.C)p\WSJ(qY0IYk<Ju,BqCMiSk[t+`=IGKB'n<[n`a$JiLF=>-WF/KVcR.uSN=/O_$*PI'r@GL$X:$1'8(K-q<++?P3'lR-XeZ5\1i?8dJK3,UJZ7lG5qWqIr!W:l.)h9U\1.iY/mq^cQ4oVct/PL<k8l5Eop/$b4t1qO067sqL8D>h/L7@,qd&,0/P(\GfcLE,aUE2.JRYi+itT`jj\AFrUX#jgU:s7]m<H-$6u_nC/O6)s6`tF#2Xe&h$"0%I.t814lM&-npVfm-6C8?PLc!L=-f%s'e[&^-T3>1.Q/ks@q5+?&7R%C3Q7rQ8UBNX(boLiil1H0R@Jqo[nKtT\F70/@`c:/LIQ28\1d#d1@N+@gNlUWHf^MoG5:p5X!'ib'\7?R"j/i@V,chAiIM4Tkk;9nn%QEPT;8j,5AJ]HgucV9eoT9!%J/c/f16,HJ<i'6k02o=]=,/VkdS@tGZ+%Q]uNb9W^cmNjHVLKgUK(d[SMas93r:WA4BM[`C`k)kJRf'Q<S5uVFrZ,C;"pgN9W:P>Z3Ub-n:eGj>B#n"\$_oGiOd9#7o+^BcM<K@:u-Rer1J&*e4+XVWL.U',qdX)&jNa*#kJ2%P]Lh3+\[Sei>$^@cI.SgY`!RN7ddedu44*-5Tk*1<1G_CgP@6/[LfC2,>%3rG^&jSeGFUjd"VBfErQ-V\^OG0)b=$Ir&d#f<8P2n\l<2/sm>BeYJ8i[,06+7us+-R_=(B(+uq5j2U.PX28Y-)m/;iqflV7:[H`p(n!,]!s!j@D;DergiLg/;XAkBWUu\>QoN%V+aGb)B>1CG.d7dT-nVmg[Rs*9fI?cIB_ma/'V4*@UnL@P3d8*nMCTT.TtO%jS?R;1k%&j74RpAN[OeOXcNu>*8^7Jh0qS8_3f]N`Ckjc72D/1?B`.YqTE"iPe#DP^#9F`H&NchQQS2h>@h<)t@R/AXM1LQCMEt0Bb`d4,8Mnqg-,!QjYi_.8g!c#;U5FCZB3rp;QZJ]pd<a*PO"4(!]egM:o#`KC&'Fe<^RmWR1fCs`o#m4SFRS'L7\e@,h.C",)h2>"]'?:@e1kIQ4Se'%aijGHh&CjPk0BOPZY.U[QkOt^nl!/kH;;+`cC?o:@b4k+9gaDC!<Adl*dd7YjHqs:-U<O-dP$O-KBILWa$9QC@3Hp,L21O=OrD;62r0^)ORh#<rcQ_h;9@eer;#pl%rUEifs><=DjO[<BkWZmH_9(DY..s4k06=R+l[e>d74EM(so()cG#@#fQ1t4e4TD(giJ$Uo8=[]a1PpQjN3B^_e>3(N!0S)>]e@^\[R/Om^V:(9q(_$6P&S@]fYN[.n^:A$qh"($rK&j0m#.#0oSOsDs3^SVH@.'q0#;Sd`Y)NC-H@"]q!AXKceU*:s[7scD[EUK#_NsFk9oc[*:6R[d0)L/m5r<IH_?bMlIX:dIDK$T;Y?;VPoV%7m?h:Z\9L3jj\@g[Vac^'91EEqZ$W#T@0d4L(,)&]&dWe^W9^OV3bL\01b?TUW8#o'CNL$^1GKR`Pgj"Rr;%_-\ShP5'tbU9t>%D^3k3Pj;^BhHgS5!(GCdb`kOIfE5RM[SsVX*GJ6e.8P72Nj(LQC(W6YncCDF_h7DYO4iqoLnSIdM0OV\HV+[/P8*5f^F4*ZRX4D@cI6=E`ED*0@&^nQ-5Fbu.&YV[U0t'Y..MfP][bFEE_aBi@qqL#JD"5k>%o%7cjE"=$e`t\cZOX*cLk1HBb.T8V"uCuj"ubeoZM3XbY9n+B8pk*D]s.'B5%U&5'5:;lrG\omHHs6p1FF-Ak9U''f=t?f=-":ZY$\qmkoYTe0>&u&Zl?^R1tV`VEt[69D2UsEXcktFYm]Qpf_*j'+*l^>TsDmgcG#f)0Lq'=Z#SgDAqUBh!4gN9]XbM6C<52@F-?^XgaU6IDnVG02^mt>9.qlCm(-r^Wf\Mr2Y="/OM:.old@;c&u?s)p%A"(55T.oFD=>d:=#Fj1[k5/7dE)3EiuugeU#NTIm/^fW-Bd-E#-CkLtUJBacgel\bbSm^\ZEOrj8A_-tlQg>mt*LA+&eh%'n"m!!#9"84k^/*dQhq:I!\!_J'tG]Lr7umbJhg[V=3fSU'@cl'_-q"q<'\[:ZA<X*a-2Vlm`,g*&h<,[X$]^]4<%s*jRa2m6T'^@9A?EkZXU[sRYa(Lq2?C=K2(_B-NeS2bNAZ=QJj0]gf*p>oP%eZ/;47'(m[OsRYG==9RLlZ$+Rrg5W_hW^r1T%4nXp?d4U9fKcZg1sj3eT&N8`fS3UVLoij*lFRl>Q=a(5WeSkCTgI(4SadXN^tW.TD?]DY.X>J'e<<q*EP`H_]+4J6_00]%"@OEV)&)O!2*34Q7]`<_@+h678?#=e3!-3e(&2M-AFPc4GH#T"gL-uVdpea!!!!qM=/(OhU>4]/ZBm5E52M3rq<hE\YtTj&q_:<+Eg/Y7q1)g%a$g\!!!"l;Ttat5Imso39mH;VGEi@cn4TuA$I7fGJm6Jp.jtOfND>^"TSN&A82&@q.V55j,ZG(p=jN33[0H>>n]:Jm7OL\!rr<$S^>6-$bu7tYGCiB]C*6\l\K4Zm&%/h(:u5C@b)+l!!!"9@JTKUB:Ns2;A89M]=2!S[l^k<@`KdA0Qq$od&\JWpngcTQ43OI^\Q,;HhLtj%KHJ/S]L[#lc4u(QV:&555OJMr8JMq7musfmYdX'm*41bZ#d73W+4PpHhTJ5nVq(LJ,$o'AfV?]!'nN&WN#.9[;/I):-.X8eZ2ba*DT*\A&aI'Ie&[W]E]O+n?coYlKdcBNemWK4#(nim*OCeZ#aCkB,si>o>1kg,d"qqFmJ2h@K6B.%7t2.LE:c?fi(Ohkb3e.o]_R0?uXe1QbE@kgK@$798X`.]/A9VZ(kfQB,shSO]IhS$lH3\c'k`O!<<+uBY/KW^?D;L>i!aNhL"_)n`.Y;K6bTgV`atRj&nl?CPeT$]/\KqZ.!47B,skHVI9r7!'i>6T0>E/9\%\DAK=OX<*`dXe58^^(KfL>l`F<F6X,?eSQpUY]06iMlYtQ(%<DLL!;;1k3mIBtqsRm<l(uLToXse@Hi<WhZ]9jM'>$>LHF!8i%3c[qNi5+g0F%RX@/jr=dgQaOr:$&eoVH*Fk006WFZ<nVG'tW$Ud67nUdWemZk");!!!#+'^^"2ABL,ca]ONB3HEreF]jJeQ6H>R%?c*p`5k!08s_H[)*<#CL,f56!%gN!SORJKYi0A)qcYaI<E3%%LI7noA4X!MdNao#lYn>9L,f56!3JaQSIuuhjH682ER14>T6T@PXM^a;6qTjV,YaFH<O*+4Z=oU-!!(C"[*pJhB0Z8rEb`GB^]*ongUCf9%[AFT,LRgYP=V(B_l4=gjo>A]ZjlDEnk>Q50c>tM;l=4J$^E?-,fu?CS#g,ASq]6*!!$k04.WTskK\.p4Z<T(TS!`SY--&2*860=Pt795Rn0,ATrc/RL5%\g!!$/)Y[Bb0DPsgL_hO@N4up.mF_tu4f&=uI7)C3n[#YpdKH64_Gi=?0J,.8+jo>A]A>Rb`doj"h:"%nlPZ(>&l`IY%%Ysa*dO(,)BqX:]qSm39!rr<t#s)KVSS+O>-FoDlaH7]/mI`7$^IXqeU#`(PO]5J=dhXda!<<+u.%R9,cAE>e55X$Z`g2W&1FDEikQiAp,+TpW,.4_:V%rCO[7eCW!!%NVe/@!)r8A09kha""Cu`$Fj0F]!N[)t$Ot'?[&hN?N>(q\k!!!"a/@V1qJcuOf%]>#_>.*X:TDMl0h5-HERWU0'1m(b">*33TAm*1&_DKI;!!&sF*OVH`CTkGF`@lZpl2-Tc/9FRJ>*33TAs$n4a3nERbQ.\DBLb*c4.Z-&H`pekI^(orSTeDkZ-\V%Jjl+sZ:2oI*R"H10F%RXTKVR2m<"'n+!)AAg1dHr*=*ZmUfesIUg2K%lk^+P!!!#QYE%"*BDhPpYmJGmJ,GTa>I'9CN\Ag3OtBQa&hiQQRRtC:!!%QCY._<nWN)sjc7sS3\`^8YL!Cm*/Q+260@DN>=IMq$)uoth%\oT'doj%k;%iU$pYVTc/9EM,E_5[f&nW.W\MVM2!!)5-g0He22rB!=\NBVJIe9D:A"b]9`(TN+*iYNL/</+4#64asUM=0'FNur5X9`smQn__K6K]*J(J,ICQusO2cnG\)!2*h;0C<jnba8tS*coO[gU:tB3Yjc[8A@^48B"-@XCGt+L,f56!1cN3\'nKb@RUpd,EFsMFY%WXOb?:a7TsCE9>9293L*ih!WW4nV,VIsSO%l47:;<,:X2!4pkMDZ8B=?FX988G)Wh#"!-Cu:=0JdBFuma1<rMmfb;p405EV$BFUh)>:!KS#rFl^^!!!![Vb1a&o?p8b-,D_?kbD;$!rjV\1<Ia2dB$j*0F%RXJ:FMfFugFEE'].sq;mrU(]tHeBc5#1.@OZR)Wh#"!0D!4Jd$oNH>'bSF;?N9*!%%&fO8!mCrmq&-m@"oOu#um&iGjQSq$`b%<DLL!6C@L4.VR24uqKu-U7DugV5V1,Eai\1_R4`hcdo;!!!!;P1r`EqXj#hq:>0#c]:$Pfs><q^*tm=UhD#gUha2KWJ3D5!!"i*PBK!8qt?"nr8fS]ff!aRbnDNEM&PX42K,L%%KHJ/j_Nn"3qqEN:V9cthS!.jNF;cTU.2^`d^JigBp\u&!'jJjANQI!K*TF9c'^Ac<Sms`6mQNCCF!bt^5I_+!!!!U:YW8*=h8]hXT&Z8pd-L5+'MpFCF!bmDC_hr_]/XV!;9?,\'mq&K1qgs[Dg`+XX)=POu?4I`Rh2"%KHJ//Z&-ol"o(\.@IbbfW_%Q<su,[dP]/$8Dk7gXbJh9!!'C-<beNgF6:\KkNL<g>AAl=2Bli[FX)HAC5!Sg!!!#G)Hro,cG4u5@r2Si/o6ZX6(<_,NRWpj0"oo;<NF8FRt`p'!!'C+(2To?ieoJ0HFe=hhGUUE>Dgpi"HG<VBRsI$G4k.NX7T"@bQ.\DTP_&84.VjZ^,]57aX*:\?u42%,'>,],E3XG@.)g\Z,#\/^Y[<=)Wh#"!77$8Un,f1Vk30_/)%2fP,h.6U<hEBfD"R\.i,(dXtI;9L,f56!49H<Co?m]Hg`8arSW;==sH.CD3;D$%S&8j5.bLUU?(!!P9q#.X'lJ<!!!mOFuu8ln%V(nFo(@#[pEn<g/Cd1eYR(FHLr%4CtO78a+#XH]Qi2>D<7jKn(taY=0K@;qWinF):GWk\)`^Epc0CPa5bk(hS>-p&ibUuP.C(]_1Mt?HY:]u6+N%lQid<g5UC)M4.U/i\L(X'j,H"+C2E9=PNk0=HM6\CH_baLB'n<[,=dbFZ'("u^A+h>hJ0BVD8.9GA%3_No,_8D@RW>FLE(?UmbPL=a)`3^\C(og!.\mf?G632P>:DkP]f+0faCH=/8=M(g8S]9F-9_Ch07a^?XI/^c-)G,n(G$[UFR3AE8\m(/),<LgRUmn(op3i]Z8>YkFC>DI/<**pM#us!!#:GWN3(8;ELF:%QU=X"-#h'pWrN&3HO?\X^R\WD>Kn)q4DBMVY00#,CN/]*,?s-m45BQ12u0e[-[D_mskA`J,XM0U"leV]:ONOq26o?3*jX^&L02Ogt:bYhOZ!0TH]eF++3nGQOc(6JD>Irm+J^&bQ.\DTOO2>:1qh?26k@[`uNQoZ*c6qopfChqUaiAAFns.j2[3V?Sui_`18u6jt<lNc^lRaVNa9"-h^_D<E6Vn>Aq3_U%<Y&6lO*2jdpD^X`&V<mpr=LIdr?<%iXR1!!#i`b%[bP;c=>;S9)t9D&cbAdYrKIfW\f%Br@Mf]W+c"4tjVA;XUmWeu_S@cC$kEH:%kF*BSG?FeN6]L;!3(48ZWE*EmJt<MXa-hp%WL++3Ro>mb]@g/Z$1!!!!K=ekA+B$?VSci2i-5A9rHg5G+DF2H.h1Xd0>mWZFhI4Dp_p9DXZqu$'3QWQhl0KkDn[^NW4gX%rK)X!]:1O8QP_I?:"PZ(>&i.2-'mfWUj5fG5/:?Sq+/rRd=\DrTC@VZdK?-c)80nh9nl)'r5a%)(*Z$#B`&h@+sG3t,6Sli?J7%Qs0(o9dfpj)c1mE*W19DGuGqmSS,k3Ug0/*jtO!!&\%[%5K2(L<8PFjHIgSf&&&o[#rC``D&%]UlHVp[7kKkFZh@3CAN0\bu$A5Q(#g&h?i*.:8ljN)HHnr-[h4\!AZ/UlIFoL`cWcL[VtSDV!bK!!#7r7GI)!mFsQ@q9tu8P\k6%X>R/i.\H%/aqnb3!u38uHhZqQO$'_lH;<I,roIL)\D[Wn?i^6-:k8u.l29k^rbMH+br=P(3jd&;s8A#a%NMurh7@42p!0*i-Vg2!XCUPATmum]?^e6_c6Las"tEOI=24T33Am>0?+\*?RQPld!tRN`p=jLu*BjH'!&Q+-S^-2L+!*ZErU56^3j-WUN-`eCmFs!^R#o&I]'HLLEQe.*Dr%0YO(9P8VG,[LB2:<adWn5!a$<'c++O4Y712'[*H]Y"-_5A0<EJ"!f3L&Bn:Iud!!!"4?da*YTD6>PinrS(G@qpnjXS$:oAPHH^A[c[^\ZKa"q2?1^1?0;JZl`W8i,=Je##iPT7(mgP/9;P;^g'R`p1>A&'V07o^:O^m+AR-qq9;1CMU=A"onXr]h@,EKWJ[_BY!f+VWuX.c\`GfRdm7:G3l`uMC[-Jbb%,WaX#t=L?mW9ci)7PIe;9&O1kSmqcQDl!!!!ND"[)Dl8ai=?9P2j[r26ATDuHIoB'Yt@pUl;IZ?p%I(MEbq$[6'5\G&_5mMOP]i@WuWos$?fC+SIY#r>]n^agHS+h)O]m%JW+7E7aAP0,7MNlCI&-)\1BO1HX2_);.1M>"'^\tK]ldjm7f3N+.S/sh>baLET_[etJhKs+p\8glfZ&1QdPP.Ah3Y28k!,,[+=5KlrqB9e7^AY(4Y"BKL4*GErY-_BEG3p/[S<9sb_Lr6#gAMMr'1qXoSol.U!!(BWqY':q;rBn=ktbFe;Rsr_^K"UhRjM-FlKdcr?2F3XPJ6t+l`S\mVl:l"A*>,5ZOR*<!!$3SR:i*/;rEEPH78)E.TcH?/)RjVj+n9ldY4SpT3bT#fBE)*mbN6ah04)3hE?-a[r1#>]C!%I?:^YYiu#R&l)Xsf!!%Q#FkL>m`>&*-47:0NONLRP4XWA^`"P:[oLLJge^`3HQ`mHj]C!&]@`c"UcGG8Ch3u!%,)p(@,Gh^V"98E%>1\]N1L^^hK-1"6lTcq$PNk/NF`g\a<U'&V#7c.CPugR/I*4+NUrAifIJU$IZ(e)4mmJ@Z@i-GeZOR*<!!$2(9he>UJ^6@>S?)gl>YV6]KM@poSUL4bktA1ik*hi&G8;f3?XJ<Wh05d9SABg_Y?A3/'uKE-,)p(X,Gh^V"98E%>1]3#CLRWubV@.K*D#:,C-<pq?+T[L,EGO%\luCM8`;G8=(\"C`Yg'tj.T//`\Ek'@K6B.F9[L?E_+E+hg=h*X95Fuc)BgTe^[rLh0%t_7Z81hET>'o"`c[P%idRu`>;ltS_-#d8Dk?/8EQuU!<<+M[P2sqi0Xcd4bn]=c)Tr[p$:3W".Qg^Q<X(LfonNu?XH$5eu\MCX00$K=aAkKj,I*ob'#EN34WiWlTbFM!2(oKF3QQs&\deT)m^$M68bs<'<8+6F)P:ulU`.IkFHgO%3*lpl'h84SP:AKd]Fq`5QCcaTInrKs8=Ya55k-&ZOWct27oHdA&jW"j2\($4obHO[r1"?O4Vt6VKEsQS<aco*((F^S95qS!!(@]P/\a*K+C/e3gNCfm!;EOn\l=Ao]_RRI*S6Bp%A!_P%GDLe8n6<e4kZg)^k[d!'60>:H^St_@%/4bW6;KN_%tsi(2n0!s&B%J@9Ojbr<[bpl\9&aZ9uHN_%tsi(2n0!s&B%J@>(/M_E(l\9mu<=U,#Q&ZH]Um'c?_!!%+!!s]<XaVF2?Ej8UiE7TR?!!#8gRlPP%9Su?$*h@ErcnpllOh-[j=U,!.!!$kQe##j]*J-1cfT:5,:p*@@,]=oYZ]51h!!"eDNGj1hk/C8s:<bg2-s*3[,]0>peq!f$!'iH./mTAoj"Gf=$X!]9jbe/>UlEmK3Y28k!6ECB_1Q6@4D2s0X94$n7A<8_7ablh#QOi)AEf\4mYM6jn(taa%Km[dM&PUs8XjiF!!!"\Z+bY``Z4f@^\hZoJNtZHU62C:Y#tu2!!!#PRm2CO9Tshsm$Vu=:eINs,\j,jeq!f$!'it4q;d`LVYlXMr$:SnTX[P<8C9uXX9/J'!.[\HGk'd\/0B&f@9^0VaZ:3Y(MOc/)(?J\RWU.]!!#h]0"BhkQnMfqq;k`a!r4#l,<6u;ZOR*<!!"Ll9/"!.j^X?8qInHb_#K7E9JSD%2!\6D!!&\Oba:+0B$L;NoufB-pcjn&Od;-"=U,!.!!!aKd%EZZGFgpBEn5fW5=?tj6:P-j*=)WF!*$*9.omqI[QO-%,?`&RB,=.,A7MEHf!,2T!'itGY.?[VQt*RAgQlt5FC()YObBmE!WW4N17`R==YYsY1M0>3J^A[2qF)#d.V9\,!!!#+%r]2Xk3"r&\X6+kkXRk[3YjcO8A%L.8A[p:XCD82!.]6&d@s'$l]V/6^H_$dkZf=nP2(s@bW6L>!!$\FWiE(.:>N$V\*'?00'cX'/0`akjWa4=rN_Fe!!!#QV=ETda3=DTj,`*'AP:UZd.'Pn7C#A)7H.l!$NL/,Zt%"/&!-PZBr@MfFWbdRO_0_lO`FS0!WW3#mG!!V^"9Gp^R/T)GM[UJa$N93#o74jaVH=lFY!Lm!7:/Ip=a:hr8JN&Y!$spfW8SV@uAcn"H,*pABR"L!!!#_+BGUJQ/'4RdRu7<3YjcF8?1b=jH4%W`rZ5@!$03(rpY^2h7L_?Hec,N=iWkL&a:!$'r_oSQ?=_Y!!(@HX]VjfZ_.24beD,V)3]1oF9I^sO\V$<O]ko.!WW3#*S*$m4EK"L8&ZHqjN*HFGOE[9*87GaSk,PGUe%CSWiX)=!!%NZDU"V-4aZm]RJ85/SFY68De0q!m8'NP,Yt44,Z:F:f&6T/!'mHd@Ddh`:Hgf$j'VZ2QYL;OZOVca,SDHP-B]`S-k[upDu]k<TG-"hF6C*sSf>$,K+9r@]"0rgE+g=;<?biqD'F71Y6P%-!1B36EFP8q9q==&lWC*-OX*N,7+u/l$NL/,FD=&;g!>gQqU`L]p$LMCB,qJI-k[cQ,KZ-?R&n1+!!!#m4n?Z=a\Asbp?_Un'2N-Z%[A><,&*\j8J8"cFZ9@$!5SWD@Ddi'II1gl#oHZB<EY)EV2/YQZ6I^apL=1'!2r.]VG'Q.mit>_>dnTVf&;^e8:X6`,Te3bZ47*>!!$]Z_[eu%gl;0W6P#_DB27%:OH%ocOT<KDm3<p_%L2t6!,0=Jn%XA:V3`MVAt4)%H*>!^HI`\UG%,[9:/CS4Ud67nee%o_!!),\Y-(Ng,ThF'_7/9ICY%Ik(1KeSmS6q-7fm3A%KHJ/ct)UYpYP]8j-*D!:-%F#`ufdnl\K4+Z#aCk-i5rJHL1L0,6@iF!1NAMLE>a0Vb](s^[/8LhL>@hX<XGc`=@m`RdAqadBU<iNX,Ub!,*6+B$C&2-U4#(IPkur[/0XqX<V2(`D2@tR9X,74#_>&ee%o_!!"TerVH3I`f3Vdj>d#"UOVfl?Xt/hbnmuFG%.a9A%0J'brR$K!!&\"/76-hN&/aMl2\MEpRX<^?If_91pP55a!H'dG%L$eX<RcH!!(`i_M&B4ns-C(21`JiqqcJI?!0Zcj'jsdc:[e6m(V,/=[rSp!!'C6q=EdIomu.a5Q:B2DpLHgMMkaR4".5G`K&,&+ohTC+A;=hcgTc+Io7dVlDUJT:S5@HoB*-,iZDW"`9rGPP3eal9e&.'!!#:LhL"]SmBk?*]"nCP*:W?6J,AK.T?]Krc79)`G!YJNA<4[3M&hh':]LIq5UBUBCtXLY?J+@hSU0S#GM[W.hS"9BNiTLBToK/7@8D)5m#K^I=iU[G!!$!0f3Wf@o&Rn_*-"AE;Y\IK5',hN=0>Z1,3ua"Z5DF8j;@/mb[^-P(W;?T3\CC4!2,mN2fIR;Vk9QP/(1nFhj\Mp8Wf\M`F-]IVHp/g%(MeJ!rr<$qe>`geWV@Vma7e">''K(=24U\TDnJB2r;V:[.Yu(/d="a0ce[ZhAG;jlE!>T!!!![Pi)K6\!L??ae=J2RT:R9%j"tU<M^%"VAQ6KXr+Nf!+R]m87Q&6%LiC<!9hMtmbPK__1IRt\u9DrY%_2$\DrU=1hkB*%m@:Hp[5*bX=Q(K0e>%=0gt8F`R)R(`\?[8%0-A.[&*WqqF-;XN?:Cao:Q&1>,aLN^]VnFo?=57WnQ1\X96[ECjldZ$q1Rq3]Jij0jHGH0m$P'#QOi)FEY("[5ZreA+#UMiNU3046ruSB$?Y4pu@Ebpu.!2a4Rt4"(O,s@q1^4_fNjAL*[&%P8C_/!!%P,p$TH\/m,@9]ANST#q)7ije)57hu>dqq9GKjF&oGK\S'6[X<ZP.YmIZYYrT'dZ"\J&)k.q%&47$3P'*Q#!!!#\HKUiCC2.LtpV$#)*&oXUh!p4sI%kQ:^153DXfACInA,?:IJ)-lK5Fir)50O8&U":!Ruk*VZ'hl%Z,s90=U,<7!!'7<G4"#Ve5K/fRPemIfWi,:p[1r;i.DP(iIhli55X]IYJ,>Vm+Dn5pu$5>4dX:4/b,_.ee(0#&]$k+&Qj]f(isLaCeeeGCg(X_gP6+9!!(AX55OK<Vk8EambG?S?[_V:iPU$7kYYG68Ta@Rp"3c8*AV0Hkg?.Q9UIMFb*6&8B$Hf(mst]b=LN&!b*=L/Y$LqeRr<3$]Qr8?D6_g+]"59'E;U:IN<eLC=<JB;L#XKL_K^@-,ZYX1N7Gqjj"98MEc9Zs-\@:R,N&hhJreGo4,*_8!!(^Ki.DQ3Hg\Fkn%JI]>Afi_@DZ/[S^k>rn&#Z#]V4U_l\RQ[[uLG4N!LasMSLFKX@ENr!!&[?fY2e2b:gWCI/3?%R[TlKr9%"V:7X4Ud`!#04DNBETgOV/n)+/Tj,Q4tkbF1uieYJ^47#n<qUC'$*dGI$#:,S&p`]VU&&qPQ5V*ZYa%PEGna]dRX=@6fX,WCb>JqK"gL\(;zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!'pGTrr=7Ng%b~>endstream
endobj
341 0 obj
<<
/BitsPerComponent 8 /ColorSpace /DeviceGray /Decode [ 0 1 ] /Filter [ /ASCII85Decode /FlateDecode ] /Height 680 /Length 286 
  /Subtype /Image /Type /XObject /Width 1520
>>
stream
Gb"0;0`_7S!5bE.WFlEbTE"rlzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!(q9Qt<-F~>endstream
endobj
342 0 obj
<<
/Contents 564 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] /XObject <<
/FormXob.8a2be5a742ea3365c26f8470e6317306 340 0 R
>>
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
343 0 obj
<<
/BitsPerComponent 8 /ColorSpace /DeviceRGB /Filter [ /ASCII85Decode /FlateDecode ] /Height 1760 /Length 98847 /SMask 344 0 R 
  /Subtype /Image /Type /XObject /Width 1400
>>
stream
Gb"-V#FH3*)Xd.C]mFs)@6rIE=9F^SZG]%JPT0oF&.jp3,=*/8Jq0L"Lh&e,P(t:aP*5s1,q'B/"@YS=M+)N1oce^sjil<,G'=\G9[>`L;ucUf4[(jSh/g/s3HaV`]'?c^#U+j463n`f&4-XGKFgHU+bUCn#U+j463n`f&4-XGKFgHU+bUCn#U+j463n`f&4-XGKFgHU+bUCn#U+j463n`f&4-XGKFgHU+bUCn#U+j463n`f&4-XGKFgHU+bUCn#U+j463n`f&4-XGKFgHU+bUCn#U+j463n`f&4-XGKFgHU+bUCn#U+j463n`f&4-XGKFgHU+bUCn#U+j463n`f&4-XGKFgHU+bUCn#U+j463n`f&4-XGKFgHU+bUCn#U+j463n`f&4-XGKFgHU+bUCn#U+j463n`f&4-XGKFgHU+bUCn#U+j463n`f&4-XGKFgHU+bUCn#U+j463n`f&4-XGKFgHU+bUCn#U+j463n`f&4-XGKFgHU+bUCn#U+j463n`f&4-XGKFgHU+bUCn#U+j463n`f&4-XGKFgHU+bUCn#U+j463n`f&4-XGKFgHU+bUCn#U+j463n`f&4-XGKFgHU+bUCn#U+j463n`f&4-XGKFgHU+bUCn#U+j463n_q&jlpJKFgHU+bYpc)L;TS#U+j463n`f6n5'[L@[Y/"onW'!!"b_H3O?L!!!!1.J+#Kz+B%D@z!'m@,1B7CT!!%O?Tk=?*zO[@@oz!$[,g!<<*"!!#Co4TbZa!!!"T'RBr`z&1R5[z!$G2')#sX:!!#9[cnbY%!!!"L8>0Yrz!0KUoz!!"3sScJfk!!!!e$9\IkzL_P.>z!"^UO$ig8-!!"->kSX@#!!!!aUsLmtzJ4QAHz!!&-JcN!qF!!!!CKq8;Fz6jc'Zz!/M>8"onW'!!!QZoF(^"!!!!A;Wntuz5bua_z!.[V6B)ho3!!!"]6I,W3z,))Thz!(7/W!rr<$!!%fhH3O?L!!!!1.J+#Kz+B%D@z!'m@,1B7CT!!%O?Tk=?*zOlEjA+bgOp#U+j464!*UkS`S%#U+j463n`fO@Y(s6.>G=Z4?p8!!%NXN1PTl!<<*"!.[V6B:rl;z+B%D@kSX@#!!!"T'RBt0"onW'!!"3sSq3I6zJ4QAHTP"6)!!!!A;Wo"^)#sX:!!%fhH3S["z!$[,gJXulB!!!"L8>0[hB)ho3!!"->kS`S%z!/M>8#'pIRz,))V>ScJfk!!%O?TkC$2z!$G2')<_q<zL_P.>H3O?L!!!!CKq<je!<<*"!.[V6B:rl;z+B%D@kSX@#!!!"T'RBt0"onW'!!"3sSq3I6zJ4QAHTP"6)!!!!A;Wo"^)#sX:!!%fhH3S["z!$[,gJXulB!!!"L8>0[hB)ho3!!"->kS`S%z!/M>8#'pIRQ@2u$LC[!l=Kcb=!kGXJa`QjN\&8hE#U/8TA@!['8(g;QL/KprZI(MCi<J47C=8bfTP"9&m)KLgAA'5r-iIg=63n_[H6\nSfmq4WeG,m\J>]=pJt@Ob!Uq[D+D&ZX8c=h/F8,'YN=3rO<cS/F-SFe#FmWl%DkB3&!!%[g(1lMSRn24/b2uS[RVM.;Ro.k+)W.1in.'aKH3V0op2*NQUeDBnlWGJ#^?$$/)dgG_!"_S0djZ54[3_)4.\EL:T[5LA1B@D2GM40^qLsNHn"=(h!$Kg&1Fa?mR-Q,=ONjir9frF9kS`S%!$@[%H6;faRFo"L+-$=$+H9oA.[sDFD3^*^nI7V]Zfi:j)$%F>4)L)UPoTF$.H:dl!!"b_fs%J./4VPt5"EpacN*a_^9,NBit@Rb!!#EWWZ#DHbIJMk5GMkaB)m<JSbOqEE<5)M0`V2/,kV0Fg#*e+kQ<MmSq3I6n;lO\P15=13@=n/!9lm0ZKefY>jN*m/U@VI#/DU8]W`t\Q;$k=aOMR:!(^1sWKdpqCj'CMCO?-_5X0Q!H3V/4eA2PNipJV:q>pX>_ikN^LGT"F7F+6F!;JsU!kC=Y!<<*_e0,:,nMS#\!2(Ds"$HbE#Q(qVbO=@PGMd:ch$!e/:WR-L2SNF@!q7@Z#'pKh&(H@]\BG'U!8=@Z:[la<^k_+kkSX@bBNVIDr!q!n<mg]:$NL1!ONjqEHt<t-Hl2oL1O97O#/Cc!aVje*Hc#QP$NL1!ONfDUBE7seSq3I6n,mf%b=d1c)..Id!8nNrfi;+_1qj@uTG]lp4TjUI\))Fhr!m$pRV7)r"TX'KaC\L3^9S&'^'k"7)*J'b"5jD5^OrCb>Q=d!$>X%bTBI0V)#umoB)hos5M!W#5LD:61B;khcN!rqI]S)$J"gSKB)qj[ScJfkrE'.(r^>'tcN*_@4TbZaqQU5/r/%"rScS<_H3O?LoOA==p_,dm4TjUIoF(^"kf4SYn0`MdH3V.qkSX@#d#U%<i(rtRoF-6lcnbY%TH@rW^n9g.kSX@bTP"6)5X3i8J3VF;cnbZN5gKE1J:=SN!IphVTP"9&J=ZcA!<$"%"9(^75gKH*!BgMb!;`r)#5j=LJXuo3"*t.O!;'b1%/:K!"$HbE#P8E)!9hHA)"8o!#'pKh&*Ol2!76ca0]5b!%.jsY+4)eD!2(EL@)/Du)<_q<5G2Wh!'id"^jnYs1XIoXIR)3Z!.]O"JH:7pB:rl;r.(@>!!)t"!sANjcToeVp]3M[!!)l#"pY!^Sq3I6n,mt@!!)Y$%1N"F4TdhLi!8l_!!)6')AqrkH3S["^^oWH!!(B,2)*raoF1@#J03,o!!&Z6CLFrMkS`S%!'d,h!!#8Kf"cf#d50-*!.I2Z!!%OuXFUD%U1^-3!;qA=!<<,u=9A[)7*cG34i=b,2HI$Z85._mnAUF(O#D49+QIr9]gH*Mos/[QgYe]2m>090rq+I\mTl=:hZBSeH3X/tYK*5`\P(%`[g:<G9#$K.?/)m1KA"*Z7^7aJEbo%AFF@;p*DJZ'WaWZf-/qO.c[>WYjbM!.jj3K4q7:t*rU."I<=&1BmEhZE57b+Yrmq-(,%^XeH5Q]J1\J@UcToefr+P^2G3RL4Cg8tL8+o#SkS_fUb3u"fjVD7BQ&jY+W0]0m/OFdW$l`g.$?I'Kh(p$VgGlq,r@S1cRIK.&pR=2!rKeacI6'J1k&[5/J=igu!oqH(!1KnEI<l*DL>YRsB<Y$iT&K%@2&.2`(%;t]SYZ/nRU0k47\&5a]L&%$KtBcEc^nS9.reu-,@,YN/T^7=c^"0X@u)^[f=n'j69`7\<B'OYn2'`A@!igl5Vr)F:X9Tc4i:(Qm+f!gk2t2m6:u'"?iB29H1%:dD335kNpM0u4W6J9PDJrA?_;_T7?dcN],j+&H;"&S1qhZGN0'Ul*.PZhhqNaQ=ltaGZoL/'`K<%B[<MZBiV))2(K%r+M2`Tt+3(bbF_+oD4bds(_iq@EmS^sDI/EAZZn)!pl:+j9Zr\J7YbGRLKEnX$\TW](0C3?nr#hmq2_.u-DKVG*"!2T70)Ltun]R%6HjTtsW9>*!J"gS3p7B*k[<GlWaFhMs>]Ra:dkfeKQ&J8[nD3>'<Wtn;TEdU^r+t?XQ*%a^97'm2)M\0')1WW^%*?R-A:M@Dk7Uh;0Q1Ku?]PBIk3A*&6[P'&k3#UTb6Hj9f38RHPR\uIh0EHs'2pP5i-k5+J3VF;cnj>%1YhJb9RG*)lB@M+lVri=hp=0T2gP]'foYAqp6rV$0(SVmp83Qfqr=t`0#Pd#f@ufZO-&3nDJX&.bV886;X,rj?pB+q2R2d>l=O&=h/e$li#rP1FjmR@m`YK2RsIX,n"XLqr/%"rT#$GYiJ+OH>'bp=QhP;u5!e$5oh^>LjL5%]c]I#I);na!ppb2<7ObsnP@'/>h1NfJpm;l@XdrKKpg<_Hnu^0Yn\][m3h;1:bM5-n(_t3kmG,,]+%FUbq5!:j%/FpU3O#6Ob:Thp<bB)EpUf9S#^E5tofN"lGaQfF!&!IQ!.U_UTP(L(B=QnNRHgC&oT<-:P$2DAFIRTHqK48/g&&3?)Ei]ooF15kYBRCU;XPV!.j038WHa)s8(nLB)(W>R3WGCZc'tE-#5R8ug$s*8R-WpAphil`:M3cGJo'?.TmqH+k.HN$TcH)i#`8KmS/Z(iZ@C&(h8kd8rY>TB7aD)0'0QF\K3`HBE:qZIm2Mq3Dj?DK?d=0$ZVICP.T\#SCg`Fm22?P^fa#"[S`Pm`0(7K#C2uXg"hA-gqf4N2:j)0R2h(U8B>D41:J'j(Uho:[;hW8RCXTH@Jf-qi5IVr/B.?,ioBIcQ]!mMH=5;MrQNrWp4`PT4ZcCXMo*FZKNGnbp*VE+4h=9YtorBX34']0#C$Z`(08g6W`8G9X]XZ5c7='^\7aD(l3j>>e^78>8dVpOah/=[>8!&D*)XJc&UgE-f0(*Bbn0%E46-@KeOdG)-IF:<)7)ag/&&aaUhQ^c\pM3%(oF0=D4+[uc!"a[P!UqI_#'pKcJ=b`kK?Jnn,bQ?niT!H%$>p:=qp+Z6R6#4r05Iau-+6e3PD<1@\,Z-u]fY)A;7]03O?Z0V"nST%%fSb[X-\"UTCJp2#FluJkhDm"Q1J3I5(`YKb*O^RiO6:Zl5ASs`6"dr:CMKMkS_fQb3u"fjVFM]Fo9!8PJHG-c%bnMXo-7'l8477$f7<$ZLH.nor]<X4SV.67L5q2!kqmN_YpAj2[b'Gqh6/Z:TFECTlr2qedW["f9a^IjU^krn"2?hmb?PL6]U,t#MO?7;SZk8G=nm=O6Q5G$*1Wd=8Zr]Z8-#0\VsmeKmZahOZY;-]0&UDmlk,ab4aHZ1&ui:l?AklJY#04pC,AlGq-7%@JBHLQsnh$0!iO2n(bTlo72uidf5$p^\iM@](*2OHfe$ESF)>$hf,:A[n#0p05_.=nC:1DLVD40L3L,H'AQ[1p_V-ki][Ql*GSP&VuE4OSjD4kpJstP!Jc')kS_g<HC^$K[fH@rpIUe'4#JTLXCnWg(Cj3`KEoi9+/0iRS>q<oYEpo)h.`eD\e&E?qu6NUi5]B34QJ2,-[kum9#7E<eD)kXFJrJCbEOSdnC](gP<@?uqS7cN+&u<4E9'%I?hT0C^ArdelIWlI1&ui:l?AklJY#04pC&KD^3hru(t%rlM=n/=0'!PK?Z3=W"nLh;]R,e>&a]D?.QrquS3O__^@gO*D/5HMEH'Mrlc-5_DuYd6[.4+@ICf.+jZVmK[]H#<?R*jB*;R/=Sb1i1O;lB'r8k9RX)It7mB.*E^LKJS6B:DVmbU&fi">[#R?R6V*9ma]meHDC5tU@`atV*\=Zr]jVgo*u,1j42I]_fOdTal_T]tPRT\7'i[d2_mnURlp`"ou.jY@C`<Ptgc2;Xg&g\Qf_rQ#nt4aQE\OPs_8f9-.VC=(`lCgU#jH=$P3QO#S"UNM`T)oguu(4]2ZhZ`&`!!&IehgKeTH3P[gB;ek1m.($I")]@\i5omIZu-Or]#]DnU"_BJSG(+?34tu5fja5Y/Xk1P^&-aBr:J7Z+YQ'TDNc=BSQjZ?[=@r!R8)8Q3pP7Er8M?.Jfd9J4)at'X(iLMg@J(7c$<ZVN@Q@[*1e>R.poZ@L_tGmW0Qp8BR72mBQe*.X4e<fHfRH#/:SMn1\TV4k3>kXQhRnR^#81:hJ:pi[b+m+2a$?sBE;+c4mj?0Dmg$>Wl.uOJ'6V.W_BpKV#=rp2L-UJPl4\l)5hoO?N.Tefb9j=j)<MWq/rlgeE3W7[#7"Le>rL4b18AIV?j,<1>i*.*pnj-psh)9nr2WW2N?$uh*>;Lm0i1ts-j"UP-Y$D]aOn6RJPa;B:rm6lod`*I_Fk@nT@h]VYk5TbC,tjn!i)+SO4G_TZCD.%I'a-<k`CT0+P1))UaZ_[jAJcYATcXZ&/F3&+?WfW!W\'YPd)<&aXX._!_-7XiW=horY33]GOI#=@9Lj.eF-H.ckm$oPt>db^M=bfOB%F=r$$hNj<F_TPI,7QL!D9W6:#$6<4Qd^[EP^?-0s4+ip&:kCF';,PE^++G7$BF75:gqHpKL5Ak8?&X#X`$of0AIf0`oUq@V^LFZUmdXKoNO'0MA1oc\mrRr#P#"Ho=p_,dm4bK<=B5#\gQIC[(J,XUm[qD.`h!_]?44gY7W9iQ"I"][Uhf"mDno%a-L3*g6K5Xo,E4!2f\_*XS5$;TJIIl_Q4eHRoV.,ji%BDShTR\3-Y\!=T[mn.+]_Zr.\<?#=?0h+gp0NHE+\L-<^n6X*GZ+7(A\YarK@sLQgV<cmFj#FCeZVPq4BW2uC?4rQf8_3')?)ju#aTmRpQ#OVI(9-VTbS3?4Abb1]A.alp![\Z]B@!P=@d?2-%l-ka.Va:?J*Y1#$1-=Hf]rb2R/_"6X;k'^2M'Ol>bl&]f3"#n\5K_&bHK^5LD:61YCB-#5:8fVs?"gpROAn2Yu%WTs#,L@-<,hGu>.6FZO9SEcg3u,),TBH/i<++k]BOdQ[m0jmRQmFDjOm&Cot^!-b^nD!g/Amdl7`c('f,Lt#Q5AA>j$K9XAC?-P[i.raUF2P$<9[q&$Gr6TY7dW?&;iDkjEj@M@#A@L,YIQe`rE_F1YkSXAMU1^-3YR@tDAN5b;dPJE"4)\4b+XU3/+-k[.hsNONBZ7XKK3L13AY%#l5$IiI%6/8n0_r7&T5Ro[1[((o4(rrN"aJTW+1/*]GG"_+l.iAu^CGuXjM9mT$k]QZk)QO=*]*SCP3M/HNono(2e+%/1Apj\kH:mliI3sO!Ill4"pSJ$qVA&^TP%*.oaKDhqoraDR(a^c:k%j3mITL8+"TW5+hg;5@eiCJh*0OkT<'R[>;Vit/%2OM)Y3^$"[.K5.DLM4QWnuQh/K8Opj*UCPN,#:lnXPFftO,^2/+^k]s<CUIWTGeC:9=7G%t4MAksH3ADjeje74dqFQ\Ji9oQj1J:8s%?dm0u!1KnEI<l*D#0$I&6h#X3?Q<D"VKlJ5MA#?^O&fQuH!/"0Z=<]ckol[;>0o(hPk$nLHFX3(eh9N+qfI'brMEPDo\OM1\$UWD\7AD`ILQ4%g8fr1.iRQnR3cEb*a)'_0qGI_.7;q*TW[(i\p`Ir`IlLYOD9tdM$mr55R*O[rAD7s!2,bVh5=nYB2J6p$t0VsUgLmo]3rVilSB+R.:+QTkJTj]V@Pkrp[.[V&qWW#;o^]@1ISj>ha,`7/\n\tNb<;\)4\F1`i:3CnI4[01L*#13,`=RlXH<NDu]dGroM\l.3jQ,)1[t=YN]Tu!6s$^5!9!2K;,J\YV%)],Q"&/[O.p?ftG.4C<l]sUoY(_h:ArAom,!kn)$>/d[<g20C960,cC5i%!hXdpRej4k)b\N2_F52F@u?L1qhZG1m@n:bPPIm]=VXinHm%7I+6.s6%SCMbC7.tX^,ik30ap':U*t1q/U(-YTiQ<RQhm304Xe>K9l4$%V`h>>#n;#I6h03`JF6s=-'^1f>"t@l:W#mP&XL>X@I`lhaY;Tm[(h15=>YD#ubVI!+r4fI<l*D#";bBY]";tNpLtEo7NS2G]?sRVs:3N.$-[F[e8+>/roagYI93KT&F$`n*HRs.-.]?AmGG$Sfp_&r!o0%D?2e(g=rWNKp4+bZu>T`5?pD_E,oI;fOB'()[BVd6?^J+p*^U7:bjG"eKB5,_gBB-*#5^IoubjGs-C3h+2N8n;8(/Q>M?8>+oCX'QT_T63W<W-RpS,LA.(.T)5L7f'RT$s3u?HUk9^)Y_04C`0<:>LkNcDkeUbC4orC9LDTqc#i*5g^J3VF;cnj<glP[ti?WX(5)0N9O9l#6.DTg9g[1aXs;tAn3J(kmkYEMo,nD!tl4sFCAPK3;q?]Qd=puJ+`:60AYbbk5Z.ag+@20oK%OR1WBmVU)t=7!)R)k4FoGhT3ZWE\N[lYX8k%_Tr:m$Nk%o8$>eT_s-&C"][3o4#8gNumXlg-?][4oVD:AR,cb35</;m(]T*-FGE&e"I>>]gsCDl17AFZ:]lB-*eV!eL:@-bNn*W6J:$F'tRp\<O7/m!)r)!!.U_UTP(LXehd6ppHAI^BWl<>3R_j:V@Ri!$C37\Q2?,ZW`1OuqPcL\G:cd$[%G=bkophV>sF+^e2L]mq+h&]H[,:Z!r6n?AVL*3(3]#1NOR1h8^@sEkS`;SZ?p@]JAZ`R3Z[C5I)D0!_$hn/*rQ#Ter^u-rEo9[#K`#7Gr$>0$o2DCE;T+U:Tp$)YK?[`Ff^XK<."7DVnk@GrH<eCR<3.LaQ[1W?gh`D4lqR+Ilk:8.K/^!i!&`]J3VF;cnj<glPY0KhgPEmpZ:&;E`0uY@HVtnX?N=qXiJ0PI"V:,r@!AS$'i7e]d``j="is420j`N7$.MFPoKA_dFP<ZP2@7(mIHj!#MHRD3OVmqVaj8cH3Tr();n:tm;,Y/;U1Mpf&7$sZ3sp@EloH.lp5Q[*M4AtR6.^;23B4DId"C,J_//ZFu1q!6q-DA!4bf,YPV_<YbSc%=d%EHG9'h-e(9,ST.*)r471S=Jreg!nkklO9ab.N=.WLI0D>c@.=)36TBI0V)=2J=%)78+GM_u.eo:c^LE9#=5!,uB*E;P"\%>C_r6?g@4'4(cggJfe;:aQQqIXA<a!T@eY#5-IHah4]H`9N$-aJ-YkkH'91&ma:XV1X'eTUgDc5p1gnZc!CO6G#cnY[H\Pqg@4>WB!;pn4F5lWMRj6n*Edpm1lNmq'8D8%YLf^Xkksl@6EpR)-FtPtDkgX#7j*m8549(L43Bpi0O(bQ\^UTrY'?:ecQ>`.KQZG%k:(.N).9!8N\&m#QFsS2H&(/II8YOpC;0&W2Ol3rC5bq@Oi*IeC:o1KsB^c0CAHCOK9UFa=`K5dW5Q"pSJ$iVdY?L32S>T&I0ELD.ah]N$i!6uFetI/e`C2&t8Z^cE[V-1NkP?L4)#d"4AAH&_pC3:t$kp*1>>rq,>KedD5#dt4/WVj-()e&s=.5M<SR0Y4Q4ogY;?m8uJVpP:KjB[NbJmMcW\r3J08/GmO2DCT]t<XO)M/T^7=c^"0XGAL,0TDQ/CJIG?Q/f7q"!74F<maEu=1FS]=#''&$Sp-Ms/7%8Ms2Yopq6&2E.X#[!l#P\Zq/VK;g$?\:gT8S&jNDWEJXm1#+6Uk1eLd9A%f%7#meHCTaTLC,1H"7b9ac7OSPjnA9eWsU,CVfLoT"Xum)L[\cBc#Hc6$%8SW76b]CJgg^)`,9a"7FlA\s(4hJ\]T5CM-f#qeHr-,D`s34cP<I)YuRmZK0F+%H!MjG"K@">[WSmB>bc!!(9nmlil:4bKKDB<^g3H1dDtN_RZ^:,t1Xk"N8'Pq1^hH^jCAVE:??;>KbA[KSIA1i?,IkC#A?I>\obhtj<5X54mBhbprZk)8tK<(T)NG1;Uk+Y/IdQhTioDha3:m]Haj\O)]m"-ZJ%=XDsj@>'$BBgL(<;p+R%l/`[gcqfGND,-*eC0A(5_^WY(kKfF$8aSVJ7TYWFM'(QEh>5X>!KYg6PZ*"'6h^K=8nIJC\\t1A%Fk\EdY[oB&N>u:4i;3icRH,;B`f6`N*eFZnr2XT9c4fBe]nrMhf6F>kSXAMU1_R"4Tb\<ScJfkrE'.(r^>'tcN*_@4TbZaqQU5/r/%"rScS<_H3O?LoOA==p_,dm4TjUIoF(^"kf4SYn0`MdH3V.qkSX@#d#U%<i(rtRoF-6lcnbY%TH@rW^n9g.kSX@bTP"6)5X3i8J3VF;cnbZN5gKE1J:=SN!IphVTP"9&J=ZcA!<$"%"9(^75gKH*!BgMb!;`r)#5j=LJXuo3"*t.O!;'b1%/:K!"$HbE#P8E)!9hHA)"8o!#'pKh&*Ol2!76ca0]5b!%.jsY+4)eD!2(EL@)/Du)<_q<5G2Wh!'id"^jnYs1XIoXIR)3Z!.]O"JH:7pB:rl;r.(@>!!)t"!sANjcToeVp]3M[!!)l#"pY!^Sq3I6n,mt@!!)Y$%1N"F4TdhLi!8l_!!)6')AqrkH3S["^^oWH!!(B,2)*raoF1@#J03,o!!&Z6CLFrMkS`S%!'d,h!!#8Kf"cf#d50-*!.I2Z!!%OuXFUD%U1^-3!;qA=!<<,u=9A[)7*e-E!;HRX!rr>tYm(F1M4T9i!Up2;"onYq@grkA'0QF\"5jEnhKk+X%UM5cBRIc&!.[kdAlgn)Z3`G'$ilq<4TdhLi!3DjA<Pid97'h[?ZZ;Ki"NELQ&Vt`JrMDc!,+jJ5gKH*6(n@jj`b\DZ6tSa\c;a"$/+[f``G(7`g6]+1o"]VB)qk&@D0hS4#hRh7H9:Y!!%C52S69bPteLQAH2_TkS`S%!'_;a-qSjm',q`A^?>Uu^aE[!.iVjK"<1\P!76[rJXuo3K7-sfj`g3c]5KXBkQ1b"-Y0P6)dh8$)d`dLd#=QIScS<eFc(q8'<<'ZG6%]*iQ2:jP;<3Q7F+6F!;M6DkX:E?qi!2A!!(+0A:r'\-32qtB:rl;I,`0SgXOb*3MZZUJ97UtArt9?Cj_3q!!)4QcToeVpkLo+TjZ_=XrU4n^'4Z>+@D<OXDDW3QiZ\4H3S["^fMR+;hPNS!!&+0e7Bt;K55k0&&8m*#'pKh=8$K*^@g&]jS*Z@F/=i!_uKeY?tAjY)d1kDEg[6Lcfc81)$%F>4)L)UQ1SnCE:%>uVE+1dLB.Cj9i33h6oMHm2tm:\U1^-3!.8J.l[@9$ARa[$*^!NASDb3@k0IXe(]XPh8N*I2it<!Xa;Ws_"#,Y)JXuo3Vn(7\W=Mf>b^5,CY!=.'[/tWZb.ul)=ki^Z!!'MPfo2pE5K\_G,8gLZ7aF?G!;P3\Xi]k8OHLN%pN`QOG\]tf25F[lrPeP>!!$s]RnhXeWm-iG;E6*,!/7"qScS>kiId<!ABCWr8aj4ep;FrSAe1rPJ(YL%p9`9JOc!M,4^IEJ^Vp$tX/=B#^4laj5`s<cC`I"".2tn4>foN7D67>)asAS>f[2M%1B@4?_DYO>'e5;,L(HZW+^ml!S[&9]c)C/,3<2iP;Zo5c4Tg5lY()U$ek6J<<L/>;Q7SHR#oj3oKFec;rU^K'EKj1nCa`k9aepBa3)PkD4TdhL!9;YD1G3oLpX"O'>e@Yhpt,R[_j\EJG\[:%9_8bc$iiELOYT?mrqk+@)6Xr#)ZX_W1O'[R%02'<Sq3I6J/<$.4iQYFe_C\j_]]J>J$<PS/D_9F#ST?'4Tb[;W*H$T;pQSS20j`B&H^=321oQ3ec7t&kS`S%!#YIX[WsJOKB0ann,DG;*7=i^!c&"diiN630[V]'1B9,3<jhMd4bI:ffY5AG#s\UD%%bFB!ruc(B:rl;@$]!P%(G$_h[=5VGOO?PJ%No!BE=nfedS.h>6=k6U1^-3!+=@kodU-p$[;P,S,E#s]_;Z<%HBtP1-SkAl&@QQBCXOQ5a^aQkSX@;oZ<[np4aa)7biQc$`[0bPs91h2IYE'j3!]?AplU.p,i<IohOOW#*>ui1O'[R%02'<Sq3I6J3hEuePPj)jU,SmDOI96=KQUHq9$9m`i9!oZtcmh22Y6u\euSGJ98c!_6\B%!$Fu-%.jr.9KDY541F'mCT6:s\#l97s*BYSj^cA5ZfDSm(O'_d=hXANJ'""16Q1K6NAZ?$n^[\*R-5FO)$$$ZG'K'JDiY5(]"7f-aD^J%12#4YRDq`,+T8NVn1<E7!!j6$"$H_dYDKFp-Src"[pD!W&chd5B(.A.)?:$V4TdhL!3`A+lS4e^Q7WqbHmA^aA'Nq7]JT[#-@,lB"oqtn&77_8N2?,8(`s%arE(k#(2jW^KSc:OScOAn1oOVMArO^N_i9][J:=R;4H$ZQ!5_.M5gKGGCDnO!Q5O2[S>!qm!^K!$%%bFB!ruc(B:rl;i&-K5<0\>2iN1XiNs'u^X;O-Y[fuiL7*hOtq%?""+bUCn#U+X&4TdhL+bUCn#U+j4&uj56!.]8UdA4=s<9'i%)]o@drE-+F(2jW^GT8jK!'"]BXJO-?A#IU14q[klYu^BGhAQC`3-kc/E727ACRM/.T01Tt8-%ko>/dgmCB201kSXB98X#HWAYpA'EOt\&!76e7MJ)J1!.`,;1B;rhB!'h29JpkgS&Rr"5X3gLT#Fn9!$4YV!!#c_[s;.hWo7ki0g63MqQX)k/D_9Fn2P^u!-$Al>t:<^L5q[4HmA^aA$+`n]JT]IEV'Y>i1s@^B:5`RN1OF),QRIHXl<Kr2#uQSoF(`XUeQUs1/kkIC7OgV!76e7MJ)J1!.`,;1B;rhG+Fe,VA_:#XRVDQd#YSlBCXOQJB-%n!.^9OB:b<TlBPe])]o@drE-+F(2jW^GT8jK!''5iom)t)?@HaUnW<guO0sjXn^[\ja3c[CJ<Q#>p5k^-V,p/(*shrG=K?Z^D[c\k*'FB(39f5#QcrG-"q<@P&chd5<q.`t)?B7dH3O@gdcL;]1/mjojYc'C!MCNM(!kmA!<A1UB)hoZ8Nlpm9\"L*X2[X25X3gLT#Fn9!$4YV!!#ccmF>!EWY\t[A:,X&oOG#_=hHTli,SAt!8sYWn!@R^lIkV@j!+St+);V;iiN4]O/$=f!%6V"%Zm)NrbHm,!;'d'i`WoO!8qkh$io4]B>7MYVWub0-0$3NTH@qacf2&-!0<mf!!"B"]JN/kWb6\O1HlEOqQX)k/D_9Fn2P^u!-$A5^oK4h-2$J;HmA^aA$+`n]JT]IEV'Y>i2#hWf4:cDd_3-[OT<ah[>JVeec:6@d5(cQPCA.=a\:6q>;,"]!MCNM(!kmA!<A1UB)hoZ0>0D5Au^m;p+SZC!;`s$!<=6bkSXB9aiglIP*r=;fB8-S"Fts&<<*"i*I7niE:V/Uf4CgOI-*HL,6=GZCD?gL;MUhE!1XH90ihndG+FeTNs'u^XAo6#80*!\!-%MoW,XRk[HZ&WpdbDKa'&WHJCL9*!!"CM]fn_oWn'si2Eh`RqQX'%!$HFJ)$%Iod'8dFVJ=euU[aHHd*E5<Pr"c1/q7edf,f?4Q78l+Dk;@PlSWK6C"@m^^A?7U^1XWS>ISJ,F"d0lmX+F$3U8S:4CQ7B:X4@RFKb5`kGfJ^S!JHiLL6Ti-DOHtP<[.gaob\C;EZAnZtS(Mj>[+G5L'^:YXl$9qi@_K^38gKGqS[,VqNE-]FG0A?E>2T:N"a^=j'SoHuD0U0Vb3X!+\W8U8)?$J7-:89p(jDH/#6VNs'u^)1/J0qtM["mYEG2kHa!YB[qH)<PZ4.pK+I7mr[HgG@VXHFL9cN%q+d`bN!O:n;,Q_bk;J9XN+%.<aQq.Hq_TtiQUDa8Nlsn%8)kF<DS:>!<=ZcU8)?$J7'VB^F:s=Ze"N'Ns'u^)0i8-43eLObfc5"ZTQ(VEcKPE/<q6$[5WO#r8fqs=$9fo[!YMa+?'\\bEi1!]6'&/kPdU>ndcf;`r6Y7c<e%.hi_:BeaMsEe?#Kmko)HsETkp(!C,;P1[]:j5X<Y7lFWZhDVDLCm:Nu^`_;U9jN<Z^*])_Yn*]!2jnHOB+%L2gE16jNhVEAQiY?5/19f>dSR\fEU_-i;=>-=LY^F.\igqBm!Zk:S<MN<@HD\MCnaPd]N;lTPJ94-(!!#b`:Rj$n<R[7NNK43mIMmC4,5]-TAE_IT[sdGnEobF4ACjq$O=u*7N?9.EIr!0;pJo>^Y\B#V5JIbWhm6Cebuq\Oh*uS<".FmnJ+Rs]oL(sj&<aVarA]J[4cY^H#EG-!*@pld*aeBOac#k2=Wa_iET#2"Q`iG5_T?`qfqMaW\QR7-"-(([!2'ug!rt:u1O5kA<)5DjD1!T/oZO1KQ2R>GO/lC%rGVhCjhi=K$SOI)R+2)aG<`&[*]it:c+<R8mX!X@O-^\JIBNNQWb7D`<ZeqmqXfFWHA;%"6Ddia5usUcSX,sErC0<'??3S<4Tb]AU1XH+-Y'("Nk'Uj0B48XTO1/oX/J2[]<g[&rVg]$Rsk,20AZL8OBlRg$*Be-gAE8^^.['rEW7K=/p>LNp$Fj$lDI^^;Z3-q>Lh+&+mTW!oF,@b?[ZqP;"YD5p%\l=.68euO0P7A+e0@"ScOB!cnbZP'6PA#-^lkN4q[klA]V9:[HAL$d.#]`bNX?1=`5lnHg(0OI&gm>I/4fJR"sTq:O&[J3,^m)TleuY*umIYSX*^H_I_]@@e:'/r.^dD!1_,V;J)p5:Hi?;,QRJ[ODC-[-dJ!8X!#`hHf(/q/h7g%qsHRkU1j([Er,l)7pB?-HA55@Hu#9g1&032hWYp'gWmf84hdLK#/gDH$l4-n!5:nJ!!#b@buu5G<C3IX`^^(q^C7YRO^3!MeqLA-BA`'([siG+5bTC<Vd+1M?&\@=0&990qH86ohD:\:IMN3skME.?b>0d=Dr!A34i7`hntaS0nEYmM;ls9\n?`T>H3OA`7F(r6:+";494k38:HW?=,QRJ[OD>SH^H9ZB+>*>qp9Nepnn7X7J=aT+`^ndL[gnVk<6l\ISbp$8$e-ck/mT.Q.n7hb^piMF!5Q_+\SoYb'jn_<nW<gu012mB<c6V+nhLd88<9?.=J)1h?UHX/4i;&F-8&W:fu9O-VjngH?A?DRkZSoK?NGHW!.I;]!!#dDRFQ*)Hc#PK!9famf.(M1gr.2C%ckcr0DqCbSBjnX_4R=geG0u`973%`X.\1$Un2up56CnqTP"6)-SlON,;W?E3q\Jn"Ftq=EijBGeCS[TX2Lh$4HOsq$jl+j2`qVHou5ib:O&dMYc]o^V+0j#a3Gt'll1$E+rZYW/\'bfknsKr(-Ma"3)LK'X'WE0nW<gu012mB:1*knkq:e$_Rh_&m$h(Z?L*kbYO=W#>5n9GG<`M$PU-!?fX/WfMcXfkZPK^r&EA.D97,!(53UH/*pFQf>e^'o^nGfCHgf:kADR.GD7)`fd]ii)a9Y8]!5Q)-)$%Iom'g'=9NAK$*TJ@FTO1/oX/H6qmd)r7^VAObAm^#e9=NdVeW0[l]nb,SB.dGT.8sihn'^l5gjb3hMd<Z,IJ_P4S9bCEj1o[#dhBhr<dUNQQo&T03m+2Si8O6YW%Tc+pV+5_j\p"/5Ps`dE*`Zn"os*>cN!r?e3^W:NS;BB!^OMZ\lLid`E1T)f=g-\Z?9&sN_/&&IJ8s%imG*!lI9_dF/*e"g-5fSE&%ZbT&I>!^Kr6nj#r$;eqehmlHAXGkr3jsHJ!eda1-NpKUr3pDp^?@J<P9IXHf3R;RMt57fkrj%(oVDY^F.<SaYG0jcEK[8&rrU:C"sII))W^A;=IhCOX0u/O'136L]EL?F_s?H',[4lbq'LO71p]aGtP8%UEO[1"A'"3q[X?](MUX+7\TLmi+-"C&^:a8G!;jI#FQs!1_,.>cid@Ns'u^)0i9(k47&(7u^GI6Ys<CkmNg"?N7PXIMMF/f-ehaP:s])M4QVT8\i*mbPs2$]33rTr]>Ac)uEF$4+$)Cq<PZCX5Dg:G/.)i+a`MU5MEe`3,e]d6tCY!)d_,o=FGdD=pC>b4^,mQ<2i_VAD_F!ScOA&d5(cQPD(OEQ'ppB8l^k3"Ftq=H`_>^b-e3ihc=kca?3_5oSSViS3@Xkqi`\74s;mgn&RCpkie*u9&-X`3,e]d6j.jkE+63Ul804GQ!XCo3F0DJrn.k[7n`44)$'FI4Tb[D=gWLMbZ&Qs.N9H9!<)i"<r)C)pJ[4k4k[JjiF9dVo?EIP^\mPPjm-J"g&8WtY?]hhkKn9'oSY:;VfoQ2^@`C&R5A]14KR#F_W_s)T:XEe1K^PdE'FS]I@Tm#-d7qogr[o!!:VRd"orVJGg0igWQIG+dJ-64kf6j1!.`RmB)hoZ9@n$CRHfpEa,Q,_J:=S"!!#P1H3O@gZ>@E:RAjZ=`u,s*!<$$#!!&*AoF(`XAGLR6A>UjJ89s5?!MCNM'`\53LRnMHS?1MQ94k2%Z&]_D#lsp+WrN-]3qNg\i+2NX+37,UU3*L,OT<ah[0cm6WC+u3!)D*_h%TDKMo_5>4q[klYuUl*+Eclc!5Q^fmJCFk.TX3HnW<guO0o;p!3&?3!!#bPm.a+`WZht?0Kp*LqQX'%!$HFJ)$%IoHb2J-RAs*2LQ.>tJ:=S"!!#P1H3O@gZ>'&!RAgN-/o#bZ!;'d'!WYLNcnbZPPKeFbb=qS*_8=2^!^K!$.KBIE%Qsmo38*l]&XfU>I&N_.OT<ah[0cm6WC+u3!)Bui5:/0dh?P,X4q[klYuUl*+Eclc!5Q^:"34uMb+88mj!+St+)@.*hu%Q3o(>d:Dk/7_Ie@Fi/ll6V=2$*?ZJY6"WNY>3<fn>Cn,)[d++=ZJW+5!Da!W]C%l/V1glOa<g\t[dM\M?o9V/poI:`5$gXTTj&*bZchjBmiF[s&r?[O_G_R-l`)W,mk::X)r9UTD6`BEr^^F^NK#p-`Adh_=3aN`e\!REelc[GuXAeh=Fs5_D5`nriX0T2M'!1`C<oU3p&&*2#OHmA^aoD)R$jec;oQRqO2s"<24Z#PQ,=+:"ocVJcL-=:]D[)MQn=+VN2h6q`UB@!:>/%:bt#N'.PM@K.4>^>mWr8<,%9#Q&\)-aT,rNk@Cc0=qmT'^OYbO=eATk=@U<1mk(!%/j.4t/9fc<Ro>Ns'u^IU9'kq=$q3d]r)pq@ac)SM4R1ijG8pW!Ur6J)uUZXaBN_C#=hM%7&>#-$LCm&c@0s`_Migk/itimd)r+PqBK.aJj\/SGV9s?Mt,ND;l3I*]njSI5/6EO?9J)=;EGp?_^AJgubRoM#lKHLJND0rJ1P'034.;-b%<G8%*'%Ippft6`TQ6F8>+H6_ALI[YK08EZ;QcFYA%F!([9>"orTd$X/stm`YEVnW<gucaR\T;r@Q'Y#CKGpCa<4f597YnD/.Mr$m'll2qMl2K/QI=$N^gDuANYXuuO@M[NU&#e5f#X$6H@.2Ao7#^Mp"(U#Z3g-WO(X8a=.0T"_Z+dhr\ZCC=RUcuK]IA:C+j^p8gH*lMU8'"co/mY598WhN/n!V@#"!4)+!<Bu,cN!r?p)Q4>1Y"Y_h/@Zd!;,mM>%R_jF62C2aE&F]G-]S67ST6s2n1qr%]bDicG2,AkidO9ml>Eg<7u9q$5M7$k>9bOI0.Oo`B$#3]n2&JcX73,dHZ]d[lJO*W]I$:hYVAsh7>Q'n`^nk+FNei!8uqUj(Dr#b&Pb@`^^(q5MrVDXBkg>o9VGmB'VrW$PY'gZ:rr\<kbWKEpe]i]D$_6jSlYMnUgU&`2pG6#CJMJI[bkK<(*a!3.1QAFW<i^:._@tqoRs1Dr,iNr*pJRp?8jE_]o2C:X9"@iM1#c!%7Y.4"iBip)JQ<4q[klq0&lL*LZD=QYu5<ecAa*:bJofrY+Ir03T`0:rb8g'#T1(8#=O^+i4'HOm3hFmcrR81;]N/2<YnX+;O)X!5Q^-P8@f-]'JeN`^^(q5MrVDcMd7uLiHADdnaZ,FP4:\6=(]WR-G5nO+-2f?.Kgoej=d-_E&3[rT]^"(BZk#&ZM?fSV=@7Td!]*3dS-9#!E%gU]N[]!&uu\l>)femelBV`^^(q5<l>OA;@`ts$>oeJ=,Y(SZ#Yu`[er5?ajmEbJ&/@\j2f.dXI:qJ>&`JrqG]D3tIo2>.g[0C_'.6H3Vn"`)Wl_Z[+*-$MF1&L7SDGcI4QLJ?r$HIk*<T[QEq74q[klq0];bp<'ePf5.Hj1Hp%b>.ut5rfW@s6Z@gRY'4U[MY\$>]m3F%B;eq?LA`llk9JJ4=>rcV"$k04!3&60!!#cSI!J:qW]RLt1HlEOqQX'uNh3qk@/9Z%4o,jF<ntDV?+OkJp"M\>\8acDE;J#/:Nu%=o=po\:tN%pPUWrh*iO6KI`.T1s'gJbM"D*_I/C+uM4N,P1Xr@e+Kr]B[@<^LeL$EM!<<g["orU_m+c0?WNp'J_tZb&kf6jQfWk%7AV[ioZ^0l$'dZJm>1[=^e0QZJdlaX&+lKG_<r&DkJ8'Gc,5<FCT).4Fk@XdFnBj#lJ<T"0^6b6;o:N?+*shrG=K=DApVX1m<c>YFrg`QUFR.c?ILq+==$Cp'_Xmg'Ld^`4/CfM))E)GPr8JGk9b]-VCtnr!!C%u14i>pOZXYs*,QMLGcN!r?55XUMRAk)MPhGh&!9iUl[E9<Crp.*2q@tV`]R/P&ci*@6e'6rX0>BCpjDMB:\:_B)\ltrAU8@fHlK"&'b*Le'jODWN>HH*ni28uCB3;W[hqct,KKNchpsB_HH*2:!kP<<PSc8Nd4&=0&!3&<2!!#bXs5kCY;r)WOmD_Wt5X0b$<NH]ge>umSkh/T][oCBn"RfBpgpB]p_slW_?`FW)W%2'*WJb&^.q#B@1T8Vr"Gg%'?sR!C?)OJshu2X,Uc.[)S1f?mqf*PH$il@roF(`XjGWL+,r='ns7du%,6=I0Dq?JfjtDS%IP&_L1Zg\<dNEo&ZHjT_3!=A!L8)X[c<7ePri6N4#e7K/Cp3hj@]j&=ZZT_iq`,he,1SK>s%b.cGP3#7<c<)kc'caVeYqoL5Ngb&HNP=]ScJi.8'_/8:/:ifB:5aumiVO:HmA^aoBf`Ci"oa#X'JfoDNC9Q*..a:HtDfg2q4fLm2(p^X<SoM4kmkcpKV!l,,%l_fQ(sT]86%jm28+$n9q'D/RtrU]5l/^4i.*=fdk\8af6`=X8ehKQ`gTU5!8uJKTD]*!1\F^q5VY<s6'-k2a.iSqY>E=Z?6&24SeQK=$Zc3[7?iLMcVK:]35-f^$j,J$5HFqC7X#QZ`efd^:QFN5\8U#aWZ.e3rPhbNRKM-"FC?Xj1t3*.p%p=B"]GD1XEh?C!WL%Q[V,J]boGt_#`(QW$=.cQ_g?f!.\%AB)hoZB<PR(RHf"2qjm8>!79'TCR'*fm]TeM5/nb611a5Gff/]MNJ]dAU\^Lt\o%=2hT"9!GNg:qgG=YH5JPR@A_W]#;Y1@tO:(Ug!8p1UW`sAO`V;+ekf6lgbiPn2KAX(,T@e1(l2q4\ha]1rmPeh3mSCQ9\JiH7Z^7]AW%GK^=LH0-e)*.@9O4('V2L.ScZ&l0J\5^C+h;TH.b1l^OmRm!MOjhK;LtD?!*n<"b:PJPah$!s8-!>C=p4nVe=gLT!#NEIh="m[Z;(Z0^ctr%!!&*AoF(`XirArUpG,mNF+jYa("Oi7!2L)f!s#k+^OQ$29NGMJq_-tS!MC<G'`\53LRnMH>l=+fJ!.q=o5FV:HmA\KA$#e45jH]P!.^!^DS'1$WtSk=@!j4"1h3Wh!'ohr1B;q5FXaf[(VVgl&ceB*<q.`t)?B7dH3O@gOnm=+A?n7>mdJ.c!^JQm.\=U`!rsB4cN!qtZ=LX9-EA@uIV4$R!&S2fi`WoO!8qkh$io5FNbj3-am/B[DiB_[J7bl_4H$ZQ!'H:5!<?C&jj(W`A9IC"YDeMFJ7bl_4H$ZQ!'H:5!<?C&orbo<Z9%LN"lgg.TG_M[cf2&-!0<mf!!!gZA^;N`ec*n?)'9.bbuh#k(2jW^GT8jK!4^,L[sMYkqXF8_j!+St)/Bu5iiN4]O/$=f!#L-sk<><8p)Z;*HmA\KA$+`n]JT]IEV'Y>i8WVjElqq#kK#+4,6=GTCDG1TXT8E_ULsQ,(\d%8-'QjaLJJg1#lr4PX*>Cu%01Vm4Tb\oaI+Q>9NF4cIV*sQ!&S2fi`WoO!8qkh$io30=.Xdp=`+36\FG[]d#>AiBCXOQJB.JfB8@^a&4-XGKFgIt'7'k/#!rS=KFgHU+XBsZB@-6t5Il"U!5ajWs1cn+Y^FVLj!+St)/BH&iiN630[V]'1B?p;Hk62Qr!`%1I`M4S!,0B@_6\B%!$Fu-%.jr.4=G]qr%_t;h71Du8-!>CR_c=TCB,JNoF1@#!'KJ=_@ObaZ2!.aNK43mAulk4Mmilj_F2^8cN(b5$5P3APK'=+Mi<]"J7bl#4H$ZQ!5_.M5gKGGK*jhJ==0$:eh&^B&ceB*B(.A.)?:$V4TdhL!"UPW]SK6"$eEN\4q[jaZ"EJVhAQA"'0QF\!rri]<jJ)d)Y7%T1HlEOR^$Jo/D_9F#ST?'4TbZp.UMs[R5F'/9K#'I!1L0)n1<E7!!j6$"$H_d%k8/q67.[PbNB]a#lr4P1RRjo(]2eP=Wd3=/oT"g?#/M]`Wm"S*^S+;cN(b58j-'E-B6^IbVD?p!1L0)0^b(D*i[tgp8T.6!ko`HXc]+'WaAEe@XQf.i#VFuoF(^^W(abM124s;1;ilX!,0B@_77$+P1@0@UMc(Q>F&E!%sVmHfsJ,4Sa,KuEYmcR"p"+bB:rl;i'FW/`lb)3rU&jh7fkq3edPlX-=N/h[48qtq41;tDiO[5jdMI:)jH=4COEnti$n:,oF(^^k`Nn,O\'':U,S'm"Ft*c)8*aGUqo[Bl4qhk*j>Eb^pc:j!<<2J1XIoXn=]=eb/pG6Fl=%p,6=GTCBfhJ)ctU*&oP8A(43;os'H7J!.\JL%.jr.4Qt0bO347QAc?6#,6=GTCBfieZ[?r3E=96\%gOlj^^\[Icnb[kTZ8NH-BlHF\J's`"Ft*c)8)_Tfoe(miEuii#`5.(ScO?H<Oi&(h[.C<N/n*lAull_A(K(rmQJJcean_1&cb%MSq3I6J-W%eNfBYocM0p1BZ?LW;i6hkk#=+S4rS3aGQ?YroF1@#!'EeX1$ssg@uZNPJ7bl#4D!Z<)'$j#!&oh-JXumm#?@m374+!Ke&N:I#lr4P1O)X86Q4+304TB;!8q#P%.jr.4K)G2246:-Iri!eOT<ae21sN)=?N.,)$&Tlcnj$)!:ZX"FfW]]0l#uEj!+St)/BEe$94i4K,F[)*BaKf!rrk3R8?g/N=h@E(`s%abqedW@F9fuh>9ED/\YEFr-:*u3V+i3h@b4+!$R#?5;IZ/,UQHX9P?2`alI&]K(U&T6I@U91B?p/g'qf?UbR8V0]OAYTNT9=1[I988(QY)+P41D5R8MO,?(++F>DYiT5m(]]e&daoF(^^V,"pQR5BYY+)60K!&Vl,CBdpdBDusaoq_$"Sul&B8j,[gS@E1PiWE-2SXd=ke3!_e3\l-*,UQHX9P?2`alK=23LT;GdPF)WH3$/24TbZpWnXJT9H(*o)e+1?!&VkQCPG7s(0ROm..qi4!H1/?I+J>udYUY;1=<'=:Sp<>8O:ZfcN(b5&tVdY8`S@+K8kopJ7][/bqNtN0Qm5GSGDTH@0#4!1>U'J(N]NX%PeJ3T8F)PB:rl;i'@g@esAs<d-H=CNs'uF).:_Yd]i`9=k%1iM%<)Vn.hA`AEm*7TM1*[-Y-0>)<_q<GgI+"4X$$/^eq9P*shqlU4(9?Cr.n!'O#WtA:23(!(P$4W+JBR*n<O%5gKGGK,V/mpZ?2*LmO*^"Ft)]]k1BR@?LDr"=4-MT2SaB9Sra2<s(Sf4TbZpHEq,BIiiPer$CAJ!MERpY8PiH+)<a9A:0(A!61uK:rpRgHudf!Sq3I6J-RrGh*`TLr^6Q#*shqlU3Fl/^&R]h`/gFP!<C\X5?EIu/Yin1G"L"FcN(b5R^Hu^PK&MJ?8OhY!1H@@RUP[,4dl>?q;3:hip%-Vn/jD3b/>^WUJ-ij-Yf49)<_q<GgKCVT9;d@n)-CL7fkr^-s\X-K,I9E?I\bM*WS;k-:T'udQl,DcN(b5=sUP<8Yc$Q(Q=CXJ7_ZiB#pH+0*a955VR=OK1qHJ-Yf49)<_q<GYkFN/S3Aooh$mt,6=H?1p.]3D-/&n^,(*oj6Lsjn0",?AWl]9KdZ(%kSXAF;!UlYA^]f<EY%1T!MERPXr5`E-Fh8&!/..#4Q3?%:=(fD1B?p;[a2>Rg\(o'&rg[]C@TjR?&am4BRDNF!$3E7UJ-h+<>qL4[@q6+B)pjUmCTfj8Yb$uh2IBtJ7d3=Al'jfR(-aan\mTjG`YU[IQKt#4TdhL!"V[q8sDp-\\?B.*shqlU2eGNY%YB@^f9?PGl[=VR3#k@?es0*FKH!8"$H_d&*iZ>dkYV_ohI8+&ce@hj-nqm>AoWYY<+brpgP9E4@l>>R3Z@D1d52\6dJ$D!5O4J4oausnTF*H`V;t(BGQSC"uU#Q.sV-aXD"-Ye%T+\B:rl;i$k4DFI#MYR3%oYNs'uFdC<e]B)hpUd5\V5IChbj5gKGG;nDUK7OF*ih)cJr#lr5EEQpbp!!)G]EGeSLG(H69ScOA>FFBj`9H"q`FYGul!1H@:RXq%2!8L$'gn+6,!^-WK!ru,B[a298Bfu?1U@F?Gcn$*e%.jr.i%>r2p9\`SkS`S%!-h,F(S?m_UOCbf`^^(qZY3T"cnbZP]4d_he%T+\B:rl;i$m"HIpOI]G$Wf?*shqlU2eFCcN!t5U2b'Hqf[O^JXummVt>55]1a,[3k$h-&ce@hj-kOj!<CnDj4p7"m/fEQ4Tb[[kr#-39H(#o[PC#Z!1H@:RXq%2!8L$'gn+6,!^-WK!ru,B@GhMKBs`9!L%19*cn$*e%.jr.i%>r2p9\`SkS`S%!-h,._7aF.B\pJ6nW<gu//m+KoF(`X/fNpHZu6cE)<_q<GY6jpqoY`)<4cb^7fkr^BO!@?1B;s;BUmi+^0RCETP"8_.K*T=-^.$K2GK-k"Ft+3\7VCH!!%5j34Gf6]0O\-cN(aZ?5hC%-B0BW4_]9h!&TVR2$5uD!4[s,\NT?7"aUB!"ot7cnq`WDdV.F1On"P6cn$*e%.jr.i%>r2p9\`SkS`S%!-lX:UB\f8dBIm`j!+St=Z!9!kSXB9>r9joC#:Pi1XIoXn<?56#KijiTNMBW,6=H?1p._[)$%HX1sYK&h_*83cnb[kPegi6bG8"M8V6Jp!7388f*q9[!8oIJkOu9$([)b#)$"p(O>gL28Y]VPHH&GV5dP-/1XIoXJ@fKbgXElBTP'p1!8o:na1isb7\,9VN/n*lB$n,#TP"6)GL8CZVgZ0BcToeV^f,t^(abG9r"JV?7fkr^BO!@?1B;s;BUmi+^0RCETP"8_.3g/KQV!rQrE@32!^O)*>Vj__!._[pSD2N,?(bi'B)pj=,H$Kb8Y]n2)TG8K5dP-/1XIoXJ@fKbgXElBTP'p1!8o<$h]*r+7eJgmNK43mB$n,#TP"6)GL8CZVgZ0BcToeV^f/6HHX.tXWps)KNs'uFdC<e]B)hpUd5\V5IChbj5gKGG;o[*"/!EGf>*Y)."Ft+3\7VCH!!%5j34Gf6]0O\-cN(aZ`m&fs-B1VT.N'<7!6q6Xbs9ST!:HS$DGU.QJY%Fa!J%(AQnr%qN=+2c(`s%ac(]4&5gKE1m\4]=:]#<dSfrE,L)idnQ`jLT->i#$X%VrW%@]'$ptnm9OI&MO/<*jlrp\EmWICAn-U&A%GsncfR^quOTH6r/+TEs!P]%FhRdc>oF!o%9O2n:`DL<]01lKA]-p9q^>&eB@OQ>9K)EsIr:s-*)Y']SaUhYa!LU;Eo_b':j?2)=nk0GmjF/dj`q1e/4>i%J'Xj=L0($[o%DseV1LWU_"J)uUZ/Np:McVY_#HpML+X"5p<e)RMj53oWBmu-jD$5Ch@WdCL$gW.CYDZ$[I;C<CGp9\`SkS`S%JffuD_(P+<_u;G6om?)F/6T;=]aMCA4>:6mn:P?a(k8j\K$!U2akqucb&PEk!^O)*>`5U:)dgT0I-XPQm5OQ<CH".2RBpMjd(d-7^@8F(VH7[)BUDH;FR9rVYPaf>X_#:C5@'jmml-h@o@]XUI7`%>T%p,_h(W1IQ_%X>`Y#J@MhessT5O[=dq@sf.rY@S%oP^,M8lH/c.`DJ#'u$^8#'_$94Q;Pn)W=@M9Wq`0:qFU3A&9E+N'SP@#Fl1GdLq*j!+St=Z!9MeX2=Lit3Wkj)3bPWU."KE*6)FBuS%5:C6h>o666K>.-\`9?m+p)3uA4;86t-E5p8a\L1WsPI.s$il.m0(r(+\6P&@&^TYhM!\[JjTCM/Lo6,\V+aSKirF\<_^O"b<V)(JRfY!pSd5c:2*&_6(e'1p2>G3*tT#"!%HA4fM%X*?$]<uc0r,CW"1WJkZFJjNPn:a7#RL^GqaSHa-AE`f^no`tg).pSXel;Ig;"!jo`^^(qZY3U%W\GH"`Zn0*`c\OYL3n")kVau3iSFn+JGc7!hAeAIa+M?O>K`11h&D&1&jZ/HZe^mHDK&CSln==^4CV_`(N7#H4?]:Wg<Yu;pM"@O<JLJ#P\s,(9O3/H@i]LVT@//+e+R90HG//arB>Fe]OPcoOq4Q7e9,^LpD7B"RNXH]J4E_ODrN!A9<(KYa-4SCO9*Pj5C))3MKR*F:SceS:"&q.$q+>WcL#?'0$lCBDpR@eg,mSe.0$:fX)<0/HA3BQP,[X_Q>]ol4($/(\l+M[>7YQW^<Of;.uKW@Wbs&2=MJL^nYZf%VS>8gr\B^t.r0MX!&TVR[4"1*'NqYQ6LdPRX1.GhL\$7:!:2e[g$[#Z`q"\s\*5ugX1CTb9#]>`]m`m=%(eam4_bfh?l=.WD<)",7gR0XAoAWP:4jGUc7>p.a]Bb>bkFWbm+p9BT%p3pPA6V3h/hb8\,$9`@)]C=/Y7=+]"tlkK8dJ*8@<-$gXElBTP'p1;!8d7pe'CZcZ&ZrTj@hI>47&ckX_oqMl6UJm_>c+%NIXYpeuoM1D\;u^Bq0+Q8(Q9!1H@:>*PU%MS(eA3NGC^2SZHEc"-Q2GCfYA/Y>Y8+8h2gekU4;Fu<?nR'$CFXSZJpe,>k9A!!Cq*&8[5;]U0-kr((IS]5.S06+DB/3WXfc/*mB[P:f)ddcE7+cj6;Ea\0B[:@a(Sk,rjlM)q/00<&`)X$h$D\qUTkSY(\L)[ji2qp-9E;Y?'n^Z-;'9a%>SNH%Wb<;KbY1on8\n0@A9g1V_=W2[)f$]uW2kb?(d`+cY5dP-/MpaCLMq'1e2eZ8k]jI$D4R-rV62OdoK9',:EHGg;-5G'TPD6G=h-abpqShu1H]77RrXjZ0l\@?GVI&a0$"RCLp?:$DA>m==LrFi*KK:]bY5C-I]BAmgDn$=taU;T>>Fin.9d?3HB%9<6H>Ef66T!*UC#:Pi1XIp+oF*[+-#^5)=M&?CTqV_@I7I$Ml#Otb(CkTUOg9hCgSiDhcZU7WehCd_ZJ"e-Tk)i>`^^(qZY3U%dPF:L,mU<5WK_ETK/UE7FMG)'Q,]P0$d@KkhYsWG+&0%)HnfY=s&=qFG0KiBl]O8DVE`o9a)8d-SZ7Dnl\DHhjd0C'mhfj?f$*kYk:;]gNM5h9Y3nNt.KS>ZPuP(+0Cl^1m+q(-O8C4Vm:Uten7MEN57s]`BUmi+^0RCETP%)QH\R/c&'S=Ah!h9je;4NNcZFNe\?aHTJ,[+lh[TAeZ4AR7ip%-:Nebn%S@N0"jdMIrNdn\8D`-h2R'L,jr\GW"ge7U1k3\cj<jJ+(YPbn6#rP4H*jPU\#N7dDq73htc:go(Pl3B5=k85HO7#6>s/,aa_Kgen(J[\L1-n(P/6T;YY>]l9oJ*@G89N7_IeUEcD4?fk:ei'4StjI\ko!lq]OHp!9dil9K^k0)cn$*eU@\lAiiN_=aW>ZJ\0?2+4n-=UcL*W7knthOHgRD0fjdp,/cmb?qj9^H;YHHJWWoM7L^A2RM-4%iYM6(G4I:D9k8:o-AXB$cTkCU4^*1g6bWE#`m+q'B9o&_m?#F@@2FF'8qOQ1M&JpFJHePq:oF1@#8jL]FqoDcP<K7A#fa[EEg5Ee,J\>]`p!0WTL\/"JqGT:Ps*Knrft!]`Ec0ik$]"X/W[eoMEEM]@Z5buR@)Sl"p?OR=8&k&jZ\_G(md=R5?DdMPmk.5mFY1MIk9aRqDq/+gS+(BrLQ.>tJ7b\0$u$finRXg,aSg/nY9ipDhbrV]8Da/3]A?8?QS5.0KUB6q!srhEO'+MOh+>)h@!dkE>VuYK%-(D!:A&[JqV9#H@l%mZ$bao0:[gjnXQ$'aaTn#RN.$'QP\5cYMlg5HF4O#>f.ZDdXl3d\U,ecA5p"93)i"5e$MO55rQ#4g9f1/_C#:Pi1XIp+p7@sXa&^b+&=h0q;"&ob0\Ul.et#tLPRN_8cZcbA;/kas_;Q&_AblAmh$LS2AXP7=^d$Fuj2e6pJ-ZD]6jAa$P<]EN&mt^mO]>rLL7LS3"MuKYJ?T7a(rD:u&e%EhZ3DMRC^*95ilq2.rSKh\c04o:>$08Gl)OA9Vn23]Wr'?pM^t=HVn0J)4O77)S>s%6>&^Y;r&[Ch1irB^I964*%ph<jZt&7pj6?F4m8nu6^Mqt^q<JU#_`'OMA9dBET4-a?+/JKnSoMU2h>_=8.R/1Ap:pOnXg(L_CBAT\1(]\a)?X+)dLY@e:uep9I4$!oGgp'A\$k+.dfWA!4ZT#")k69&iIn*^cZtkY<^Yp!_b'^?DTt^XIfER84HPQ/8JKfi(k(3f:GC[6M_u#0Hf)huBf<sl,?DGAiH+n!i?`]=OhN1Bg5KF3@m>6TrL1W)\T:gCZkYtZfk[FNlRn5+q@*3/M8h_H&mnpfku5<?o(89@#j:56pd[<I:V-kT/@Wk%e*h'W6=ZW2M>[q?pPG4X&)Wg9qtY6@?[_D'pSKSR-hr\q31P-5=c`UTYug)#S1Njcqo3Q]fgb4H_Y_(F_+RKQgpi%,iZ%<urgC5Z\^095^RR1Wl%d0gV_8<gn_m`eBaL!#hQchgM^L/[E1mGr48l\M_hQ]doYkN7S9RG#$_g":L9Slbp>7*1X&;=DG;]:RXM!90V6:3PA\E=>R]LSpL[c'io$;5;nDrDhh&9&gcbJjGO/;X1S)_!4HaB%$d=#N-QQl'=22!dUoIDMcnCTB)]Q)EADgsMepQ@nYI-i.g)S]9OT-8XZ``sa9U3">Hcud#iH@8?`,`mk)`lQ]Eq+m2\]Xmam(>>#>[F36@QcB8X#(;4o;kILsNRr[TWJ?pK'@+G?++&J5R\o<nS,*Qj*5#(u=ns;g:L.i):M(dh\]]0Tm(Vq(B"e6(dAItL]Om9Z/TUH2iu>c1oUAXQ[rlMmjX*d;1;3,h_V/=8eX3_oE8m95A?G7Y9.YPP>rOTGSe:r\HnfJ+%-^HXTkPgj8'ZB2"Z8#Kl5eiM@AQt*.Xb$A0'gJdd:Ae@5E)KgiRC&]%O\lrn&>*^P=^LrJ"cZJ4F-\UT,jEV-#q6]f7ih[22D.V26gNc`m>Zs\2`[=)I!Yl4XKQ`n?XKJG$&cDa,n&2IG&jR7el^X&"e4-`7+SKi]BqSSE-BCnIj\rkO34CIekA4[2EE=L"?hW\UNT%C:\)Pc%f"%i5NX0(Mip+`s$kqI>1."T:t_!IHlZU*a`j<HHF>?rKfkjccmETgfn)LO9e'k_W^$DQ`[^iC6(JA2/AIhc@16*]frthCp*s8CqT;sL-)S7cHX7V_nWODd+F?a)l3".P9--VhPtPW7AH?@%-acMp/O0$B,H-epp?<kdAFfb[Toc#4+D?bpjMr6at&dl-:!pjij!1&cD;W&;i'b:?'(ZNLGRV\fb];,+2.0E?i*IL6b$anR(`q7-eE\e]i07P[*q<FB2)*^khBhXBBppNG1[r#3G`N!XM)_j';*%F'3hPX(<>of@r=N-mqP)bc7R(q3@O9>%,5Bb`[NS5)=!k2C]!&1"apT'L.#OD+m4sm5Q0]FI1G,3j`u&[T-9^[LNEBZ96fU$B/\Z@PAAfG(k$eT'E$A4S$,@hq2MernY;M5UgG3ncV=9Y]&.hOf%YMkXg?l_BpHPMLQtZMFlJf:,[XnorO!^HC$%3#)Z)"<pDFm=%,i;eJ%P`-6A4cuG1U)]hu;kUV6:3PA\E=>Wm=KZND5//1]88b\9PX!2[a9L?iA\[Y'AmkX@:tBlLgY7Zsg8=VAg:S3rcWe(Adq1BqJh[U]1(_N/(]IWNjQ!q"l^b9RQi^4ceB<N=Ar!+*7'sa(E$OiHK1mrNP\<D;0:oMEXBJoO;YZr4&EGT[/^5ln^Ksks&t*3IQXPLF1gRfKDkZZW-M$XK*[G&,u?ZbHJE\RkO31EKqHo2Q-T%jHU6_53U(?$L]c-h38NN1%+b9o33is8'$h^>I"+XQS3b]J1g0,@o7Z/C<1l)_uPHhl1?Y(q2]<-Gs0&q=('1_'?8gV8n4&nOS<)rjk<5E/33@Ga]eZ7!F%_Zp<C_2obm%f(Mip+`s$kqI>1/=F"Q-LE_`5MVc.Tk*S1`<:unf[US%O+f$rl[??"G^Oh5FrcK3]g[Z)B;C#4TY_Y^e>]E@lMS<kn>mUAlpZJ>2m^#9c;\Z[SdqO.Cier.SCaZ>c;(sd_dF7;ij3[9'[@NeI#WIMIP@,.1iXdUfInUZitZK>d:fP4*J4lOm@O,U<b0_NmN:GtBg<1fioHEjmhIU(64ct>mkXj<*#[eD_d*r$T/p[2a>?#\>]n>7G=)R8;E/%5BG`jPcmbX]CPei2=YYeeTYNGnW<#A2Qa0:qaJPLG@1>>@IUbrtRWrS_s1g#\PPI8,5Elc!A]A=Z@XN+ZOe:<^W/r<_@G,am/%OKqW^)`:nhERJERNLOtfJ1msJn?)59Nnu.sLa$WCKG(+WV-Ip"YMSoi--6rVRPZMiU?>6M=>/8!_2f!#%/LBhq"kJJ00FL?q5HID[UXX/Sf`r-)`C7>/F@i;@)<#T[f!c?nD$+O*dGVSkphC0\F%,e])TB.j<"6h&&YTk=,274oJHZ\XK5od_67qEL[bd<h\5V1`uSI8M>?5)hn%R9,EjFW3GasBB3j!YK"as6jK/Z1#KM7rh6?2g,L]#]E6`ps4em()?f5uWgNV_hqtFC;-$PoB0"gFG'RcgKMO'`rB_>hO+8iXAc_/UGk^K.tbnY$YeW4%IE86034V:DnilWe>^@,qU>W(Z!1EP1oc^jp8D835d.&tV_fW<-%fPZUh-!NPn'S;*hnmM5%=aJbt94&@*bBi\\1g0"i&*)oXE+6Q[^Ai7V1=m32rlW!I+fi`3o"/s[2;IoLfO<O9PCAfT2I&9B@@C+fl8,f[SfoX:]kQT@>>NE;n]'-Sha`\>ZX0a#K-(p%)>"dZ?0a;BO-!K)98cJiACA7W?/q+e5!.Y7\)),j$a(ChpU%Q(Ie0P*5Bs0h.V6lNE:bSLjhKD9f3HhroCgAF:Hc)a`rGZ&jH7&j2rh:`h>aUM-VT!ciUBLGjB%[!I8,5Elc!A]A=Z@XN2L#0]m04+J,X&+=OPKOH"+q.'CL/-\iXP11Y4jghtPh6l!$!8'T\l8abm.DjhV^,XbQ<#HpZC'Kf'D,T73*qVX</8:gfn=I*uPX9`Fji3U`>XJ]HS"?+]eWX!M+;o%a2ugnafe]6!5O7C967C]!&1"apT'L.'Yi%$Ma#[)eRLC$1J]baeY0%_M/u8[VoCR9T-p-#7s^(Z(_9np6$,J+:DDqsN&+;tQ>=!HZ&)L9UVX>C3c"K_itk#DJ5crEfkW`KY#5K\qus/@@n1CBAT\0-6#ulWj9p4RJUto;]gFrjR/^55!B;`*;Uer.1L%rB:,A)4.4[Ju7^*9R1j!8XCIkREtk"<g+\h[Mj>EJ'7^r^Tlm9_C>LWCG)6.QJE)+53nJ._HHn=&"e4-`7+SKi]BpHkPN@fIe`(#mIoBfH0`"9Qk6^_#$\0s]X[KW'B(%lJ,=].jbHR6Hl.:fEM`[ZdCrqgm=QJsoGR9=&mafZ4Rpk[lO@&OH.hoK)YraSch-t,9n)rtPud_W-Z=+d&NQ%'2VoP'['jUPE-h*J<E<I<l>on1QLOO9:Mm]9Lr&^$SpY,G-<kAN/E*r,IJ2;ja3K#2`U<aicpJk"IVSXpq=7V$>l'lh?.OqSUA>;3-(K^fVoF3H'&.VgoW3>@)UF5Sp5Pb)caYgp`Q*r5jK[X8qr0r/hg\\UGQ6*+\GWQRIl`C$VN0?qk^Ulm*DDuKeU!^eOhAkM55PiqS@&0GDmb%o7HYXQC9O.gfr4F,T;R`3]('"hm#LmG2>gGE1(Tl<3PAPL#<sj)1[$V?]%1M=jhmG"HgGt*oBm!h)O&Vu\75Bt9.[KhHGe=g@FlOfIJhs_MiG&&Aj(h,[D1#GE99Taduh"OD==*Gh_NA,P;Xp0n$ZnOh8F*XGpWdCB:(^Vq=MO\YaeY<4XKER+>n#uO2<Qo@S87QqO.Cier.SCq@#OJiHK0"i5FI"6_jATqO^AUF[I-no'TY)$JbEp`Tb>MS*mZB]rtaLph+;WR"Y)*_p82Ri1ItK!12Smf&scW:pLua^V+pDS-bBc]K3`n@Fb%bIbQYg)o(-Pm75`.D-XpfqeaaZNXCEdMm\!&j+9II5!u&[I>6?;I?'rk@)q"C]IiLu%,YOhN)uWF^>=+"_WKTjrmVlOl2.gGFT1(=^XkGBACK7e(OYDEK@17Fq.%a#A^8In$^pY.UfCH&-#3g.'g>T!D#324Sp$&>"7:@*`G+9IB$nR6/U^?D0'gJd;140?1?S:/dZ`[0P2>(C6ZC'R=0K*dlH'[QpuO0!1]E'A(F4Ztkk$W_n93bb$i_@.9i(Q`+mC0$!@R;98s<]KVrr?HR^2Luf5B5aY>*KRrQCBl5J>Gks8:IH:=qG[WdUN9&ba`BLM`Z$dYfH3.cnQ'@(f[s#<sj)1[$V?]%L^%-f>eG2($"3+T,`a6hd/BbiIhAr27<"2>QKl%mU&tZqCs:E5hUqdiY4Trel+D\7]!J\(GSV8Q5'`5F!c[I#tTl?a8!j)\)Ubm(DLV0>'BQEA\f,p"7t;XI[)E*rGErcqb\klOXgerT,De48l[dk?7Gdcg]$I;q#FuL9<6&U2)A"J'Ui1Fo+P8\Zqmk*rkJ7IlYqZoS]QL$.*7sGV#;bF6SJMbgkN&?(4U4YgDPL3:bl'q`>faikdcP$g5CkRJ"k_fk1/Ghk)ZN6Lkm>?$=lkX"Mlc%_sY\^,2CH@B&@T3+_Fgm<k3mmldujQN:>Mm=OtFKHYiYIUh/to92sus6DV81]E%bL],O@Xg6YB[llNjeb-YJDUkuI-9cq@P]nL.jb0H>+8J-BM1>E4?-6o^0OVRrgBTqqkVMEY,eDZAGjV]$'8.%p[+16OiAG7RE`UYS!;A[#:O5Gt:2I;j7L(%6S`J\edtQ-#Zl8[%EGskP$SC7a]:HEJq0D-QXS,oNY]$mR:MOJ;b>3fKKJ.`C$`1$5ct1<a;#4o8@%BqTN+]:3k6GZbqG%2*:4?!Qipca[RW#>n4+R2`g6>A3d'%,1b!WEdRP\c9AJUd$$KP!ng!2pmg3ra%5OHN^TVI\+=*hFFo!k@=T[/_`Eh=M"A^8KN:V,td^@=uZjYV?Dl`Q-"+1a&eB>;%Ed\iX[lHIr-ViS;hC71pdII*Q>bB`a!C"n,QABTZX\Boij?N.Y.pPs1fH1NmWd\:*BcbPaJ:(P)GTDudk94&@*bE@FLo[Oeo3gY:4cWm;Jk4^B0:,t;qh$MuRqi&P\(7HG;0;!@^@3,3NHfJ$GqA#Re1Bc;oHJpn0<m,gTq%oLgi)+i4c/+PnlJZfj(@mm>rkn/ZD;Y>gSO=dWM5?R)/rpD:%/LBhme7UIT,N4*9m[njkGi=!Rf)MbkPOTal`P6SOU"U*i7@f4%;*n7rk`XkDE2a\`Ks[hq:QKa??(a+GIVD)<U#,\J,K/%Df5-fZ\D6mI=05(`@H"9^?rbk_E*>l:KClZ%G*ade?RJ/pegg(=H/W=\,G^IYL$q?a03_n^Bk9tIc8`,"R*-t4;LZB\b*danhj/ed'(N9[)%B5NPBGlBfk[j`JU^EEnA)>b:L*lG3b]H`SmATpb?pSXD8aC6teeGg1L\gbapN^LZe#D`")gSp'Sp<,@CB>(Y7>WoqTeqi/SW-H?*])<R8;MUs4*)Q<r;W2K)^[FjhtaIl7Ndlc%RApi/TlTrNMFTLV0<Z_)oFZ-^>qQG+\2QhB>m6aG"6+3"CNWu#RKi5Z"L#(6[u.SmhT<%&Xm/@[t0CBAT\0-2q51B?M%`S*NNEC$3_T)jbjZYr&AMT1&8cWBt3!+"06`sheQ!;UrG[L[glctC^<!2B&>43nE4lT?>eY6iQe]m.bocN''1(Mip+`s$kqI0LfD1M8ooMT0<.nM@#F$.*7sGg)i,!0FB#C]!&1"apT'"s>BK^@srB)ZT+Fr`A?"!d%Qu*]*"9!9EIbg-5:O6(^H8!Jnn"pKn=tj7!$Imn7"$TZ_ZOQpI>F+C?eQp;)dtq@*3/5ZD(di2<8^r8$9/?0Q,+FBL7<1[$UpjQje=559+`T0](MLrq4i^)W$M]`6<jV6:3PA\E?4T[*V"Y8;!Oi5Z"L#(6[u.^+<n8gkVLbVN&ZCBAT\0-2q51B?M%`S*NNEC$3_T)jb-\cMKRMn-%;!0FB#C]!&1"apT'"s>hh#1QR)k.X"]5e^R+m=QJsoGR9=JCpe>:f"clqt^^$q0K<S%t7d1B@(8k@\[g+4nW:PlSAP%lc%RApi/Tl6(\16NOf/`e;Ll@cN''1(Mip+`s$kqI0LfPl3>a:0BTu4"$jS,XR1W^(\AU;)1^A<)c0>DR/?^g!;UrG[L[glctC^<!+M^@5X"dLmcuY/jQje=559+`T0](MLlJtHp!eo1YKm31Y8;!Oi5Z"L#(6[u2X1Lr;_R:I4p+'a?EEOH*uFPeoGN23W#JQ/]pS]n$ip*LZ*k0l>gR-1B)lD9DEpAX@d`P<!9EIbg-5:O6(^H8!Jl`H!VOs#\Za<ZOKTI9qr#KuI0P*(+?&Khe5J$_^-2Wa^0[o.K-(p%)>"esfVf`c:VE.mq@!B"HEjmhIU(64ct<>fUM`=[oj[@T1B?M%`S*NNEC$3_T)jb-\cMKRMn-%;!0FB#C]!&1"apT'"s>hh#1QR)k5IL7c4ecSb3TG2+3=UQ.$VbK,X\O^]j,c@5(c$$&1;T&lDYS@J,TW6&*nVp9@oJY0Fn_g:`_ud%&L9%EnrVL%/LAtSCA"HVd@UGTdpN\l[77#kE^QN%hPF2*^c%uV6]`6h)5$;q@#WZe.&@S?HiAm\(s0JoC8/p\+G;uJ-^l"(lDiPQ)0i5Y0gn/B)pqeDEpAX@dY<slI`>d>OT9tkm-e[&IRVS'Zj0$9/"n&UX,UZ!5qIbJ9pM"gn45[Up/-O=S-[2+3XgT.$VbK,X\O^]j,c@5(c$$&1;T&lD[9p5FJ6SoQA3?IQS,PPu&=`2EAZjq@*3/5ciHEW2C]]rT)Od2)e^8oL!qTW.`#i\!n^Ndq@$?!+MdB5X"dRmQWr5\`E"@/nk;V,o8@jned6pl%Q^<oGR9=J2jMI:f"coqoL,n9.fo".C1CdIV]Nk\kif&8Z^mi%'SnOkVE4D;E(8?H91e%?";D.*]sJm=34r!6=DFY3-UuYK0BAK-ZoOVWMafedNat<R<P7,rnfnWQdUra!D4'K?mpc',hD68'.J>6I0Lfhl3>a:YNPnP/&rnW6)t$bXea&M,*^$obAo'()>"es32min:DLtLe&RD>5/l*bDdojRTN4D,95^(%&W1#]"h?2\%/LAtSCA"HVeY;lQn-3&2c)'5gm:0T!iUrPmZNDK6NO:UPmdtI#(6[u:?i&5;e:!!dNas=Bd#jF\^;n<%7#W$&f1m\;Xm*<X65u]NV"+\)1X]G)c0<FbPgHj*BX9&o-YXF$]BIOleOK[rfZ_Vp$fM9]l^A\.Y&QTb#^!#Tp17_(<Tf/DFp*$jfX?!Y\Zn'6(\16PI^ef<5%(:IeIjA^jG8P6\bpj6q&>b\5;BU\LYAS7O$M:q@*3/5]"pZW2C!crhN%2L#_[I\(s.dOO(\Wr5f'O63tt[&^"0'@\K$?JelLt]-R5F2O$CX4p)?8FT^o#mRQK/\"9"+JbbI7ZfpD,^@L7+V6:N]R5u3MI0P*(+AV2+e<A[Kd%UJ[B]G^?ca_p*dT6b?9V%-75(c$$&1;T&l:LEaVX\,M,eice0DtI/ZV"RZW%E-IIejKL$p^?4%B(Yb+.K-c)3QuH]MhI10rQ[H14K'.q@#WZe.&?(\K@*N(GiRs!D97b`_W3mT)jb3\cMILpS61-@YQ.'53M"T<tFRfSW'1)K0BAK-ZoOV8aaVDlXGV@P(jd&nNuIj#rSMR`_W3mT)jb3\cMILpZ%BW0gcR$Sp<Ze.g\)/:<$)%6(\16PI^ef,kiPRbaVDk>g/;Jk83s,9,aK#eB.LM1[$UpEDe`gT&b>GRP&3>B:aC;rfP,*UQ7'V<M=<[anY*VkVE3Y;E(8?jF.LU04nm4/2VcpiQj1T_L!nLJ?Dctj/:4rcN(mTh10g7q_;cqQsob*_sdHLS]SXa5;qAGj2UO/46kJH<u>[@SW'1)K0BAK-ZoOV8a_r509;Ngs-&?Y2VE,7HQTl_[6D4bmV-m!DgcXt_rhearo_Um^=lC*l=Bhb)>"es32min:NF3lL]5Jjo?9#:eiRdJ^m"LOI_G3Q\UXI(iFUu+8"Xg$l)P9dTh`U'T0](MLm,CNod':Tp&*..gLL7H-9qHJhf!)nRKn?5i,8G[C6f(f)Kdfaq@*3/5b-=5W$f+t/\;32+W9=<c_/Sa`(Ad8HBS0QZ>1QqOthF^%/LAtSCA"H-b1<N]*9H&)<7X@T[*VV8_noCP5EY4CEO7Q0n/s-q@#WZe.&?(\K<E8"sP3.j/:4rcN(mTh10g7qpD]b+;0hlIejKL$p^?4%B(Yb+"b)/+s@iaVpD$^!5qIbJ9mCUdB[O1&s=tuq@)3X]KulIKFgHU+[d>;T0])8#U+j463n`f-n=j,!+M^05s<?gB\>6S$->^RI0P4Ll4qg4glIb,"-J\(AC5#iaJW?14j!Y9fej<Ia[d1q#(V*d("AH&O-X&ROcYN4d:WI#Vd;YPao,o+2%U)98/?UXJ:-Vse<A[KQ<aTTOGm_tB)p#N?9p`rrFjkA&.-HL(4?C;I-MHrPMD4b>m$4NN+C=K!6D'E5s<?gB\>6S$->^RI0P4Ll4qg4glIb,"-J\(AC5#iaJW?14j!Y9fej<Ia[d1q#(V*d("AH&O-X&ROcYN4d:WI#Vd;YPao,o+2%U)98/?UXJ:-Vse<A[KQ<aTTOGm_tB)p#N?9p`rrFjkA&.-HL(4?C;I-MHrPMD4b>m$4NN+C=K!6D'E5s<?gB\>6S$->^RI0P4Ll4qg4glIb,"-J\(AC5#iaJW?14j!Y9fej<Ia[d1q#(V*d("AH&O-X&ROcYN4d:WI#Vd;YPao,o+2%U)98/?UXJ:-Vse<A[KQ<aTTOGm_tB)p#N?9p`rrFjkA&.-HL(4?C;I-MHrPMD4b>m$4NN+C=K!6D'E5s<?gB\>6S$->^RI0P4Ll4qg4glIb,"-J\(AC5#iaJW?14j!Y9fej<Ia[d1q#(V*d("AH&O-X&ROcYN4d:WI#Vd;YPao,o+2%U)98/?UXJ:-Vse<A[KQ<aTTOGm_tB)p#N?9p`rrFjkA&.-HL(4?C;I-MHrPMD4b>m$4NN+C=K!6D'E5s<?gB\>6S$->^RI0P4Ll4qg4glIb,"-J\(AC5#iaJW?14j!Y9fej<Ia[d1q#(V*d("AH&O-X&ROcYN4d:WI#Vd;YPao,o+2%U)98/?UXJ:-Vse<A[KQ<aTTOGm_tB)p#N?9p`rrFjkA&.-HL(4?C;I-MHrPMD4b>m$4NN+C=K!6D'E5s<?gB\>6S$->^RI0KZOHAKI0LkK:aM`q4C!'S8/,XasSP!tuD!.Z-M0G5QQ)9JW!!!#7pE>T"EOGm_tB)hq)LH(6G84Z4UkVE2=cpJdB66mg$=nES^B[)q;`n+9uF\!IVluFUm]&bijT6AeM))FMPrLX;)[&+[e_h>S'lD+Z_br=PXam5!JC"+ecpYU[P\i&&FGPdqT)fs]BR;]b<i?/&(qAt3=)1T^*afk@5)f@e(m148Eq:t<)Xh!lrac!p@k[G^1F'edN%t50)5C%6nMr]f8er:fb+F3qB#95l'?iNoOhkao>5OHLD>Y[A'WPXgX;#4o,O<l@*q@#WB#'L-`__/QVZgsiVf$<g`07W`Ra.+t9IJrGHXn0c;ZO?eT]BlfKZ`h&HqG)SB8:TCWg,bVr^a"iRp1#]oQh03,T6]\%b:XT;()@tJU?TAf'j5ZhN]ogpP)W<7C&j>A.Fe2&5_L'%9b'>KKN$2X^SPlbYh<(30!t-2dNe65[b^qZftY[5>2dNncb);cosN@Behd,aMm'e-rD2$o/A'[EpIq,aqL4"pHL"YIhg+t0P@*@nY.Zj]AKUp1cR4Z4]CC*Zn^P:VoJ29-nF.48(Q5C7F7^?EP\c$$<s*t(8YO^J!$[XKJN*S51<Z./r@XTMUc0rs4Smj1Rhm!(kL5(]6<o$;h8s-D$7'Ppe]8b\p;(YOq<:*<rL[DCs51\nm^i.Al/u5Zaeal#H0C9MP0*1^&cZller<+:bk^Y747!qnZedW">%?rB_`u^WGQ$]2J$7sl_a;57P%BY;s-!$?`R^#/)1@5ZrH`nTl;G#MN!+s,4p)@uI[r+pn,N*rN]d<*UqH=_4mC>`r&Z##ES%nt9iggT:X'5Z(?+00Zt7[<du+!D+8l+6\(pZ7&kajBXSc*DGC8Mc?^JKNTO6+d+u\7tS#e5IH65O7<DUrl_[j2'ES?W_l.26L`R^#/q@$5A(^Ua6I0LftrB4KnVTbEqhRq3Wd,(JVq=MlZ\T0dF[NXgp[KH;H+9(6F=5J1+qH)8VYIN/jOS"i\K#\U->5?8VJ(F0J@rI`rp(l)j`!N3aDY`$.((qD5[lI9$h3at`&1**o!0P`C!2;?$o7^=cJ%5K4)^cA4gs$L:0!2qLq/H1O`d&@Jb=o(o:?QAZlYM[]rH.N,qgX"faQ&HX)SXmjYQ!Ng9A`%^^2V)_>jX>CiRnd%Idrp-r6F9AUj[m&0<smS423N5[s_VU:<q4.3aZ^ZR%qt=-&7U^RqM@MKfO!r;6o<V)1Vu%i-_5<!,@rXYnP1LZeh+ViUBRZ!l)>5EfWEUd[X+j1S-fMj8_C"6Vfh6r7/4>6?22qUX-\#8WB%&.&86fae<G&QUm=@;<*Ut:!]U`[Vj=:B8D_g8?0ojHC@0mTbf"Z?Cq7SciD?-dd+(5r^\Dsk9iDP/\.3Vf=gm+kMncbI5-40a8p\"oS2u]T:YffH:#]b,W-J^&(1-`l#Cb=8(R3=q>cGf#N<YQNB-hD;0!LF[<Y5;;s6%0U1DI51B8$Pn+jh1cb5LsZOl-.7iqE]^]-gIV%"m;GWm\YJ4#>j(3ofFGGegJfa#:FC?1CBju+1>!7$>9&]JafS<:JE^'>\Tm_A^MV=,XB?[B[XbNTe+WuW,U#3iK$h`:V%?i9%N)diNmbAXSig)<=^h*Y.Xh3at`&1**o<1[ap[%q=-&:Fa*>&B:J@8qR8e_-jk4XPS$6TAkKrkdu(9.Oan8uH.^405@3LECKVOaU#0qXs*A>^#MZac^]lm>!Zt1GB7%F*g7Ma1K@*623tFh]],i:eiYYmX#(CCu(K=Ql.<)BCrR,B(cda"s@(O]/ji)&Y$8"c$j%nbIQ!fi[_3.??==^URKJM*e41>j]5J<Hn5+Rr&ar-orHE#?JrNeVH^_,rkF`4O.]k.>9U:!<G9$e+oU_2h[)m&^\%2i;R4rd0rKrMb_=OmTGfqfV^6bG*g5k:I0Lf\rB15^k/JXK\TLg$+B@duI/<$XQ;]Os:9C-GOb,b!23]/Q2Vn.lraIft>^A>K@ihK"f.qQ-XW)?R)1XJe7Sc\R$p>lh:&58`KQ?3%$DUKY4%PFDO#pqF)^#(J2O@IcnU12sLTJT=YJ:&(A-lBlctB#+>2BUK*\I,7Zp]4?E9"$2l/?a-q':m#)ftWhJ<G.H:]=Sa1INkK:&58`K_!0t%t=PVM%;_3%QE@*j-B@fh9OFQ5;qV^f;\D)QW^X\l8)7(l)bMVo0&s@bC0C!QekQoQmUdr2T^Q78"\Q1/W-YLEuZt<-1Qqc^=:@JU<`g-X.?NamO:r-e$rsP@]='UK--T2*^Z@DE]2!iobl2mDId#i$'FP#MaVluh"P`1NBOuIb2G/b>#'9BCu(K=Ql.</BCthmB(cda"s@+:N.'YAjN8E[9-:FGhnb)W1I&c"a/8L#Lc2$iCleb_1GhkYhtJN#H9up.7/Ej<r4YHX\_1u#S.Y<T]f%k9nSQ7rNB*#e1Y+HKQ<eB^9t/n)Cl32ko>0nq1ruLN76@u<9R:Y]\psTPeN;^^=_$iA\)2J?0pdlhq8W:`VqQb)Gt(S:]i?k(0%itq$p]L"*;eUgplG:nFD+QP_L^h!j+!0*ZpB^Hn,<-5*,ru]kqV?j,<!lRiUBRjiV8B'/oE]u*C-5?4bOZ8ID5tS0"huD\L&[e>0cCP1ehl=FA$Z3f,%XMju?tu=PNOZLL#'6BB;Q6D+GUoL2\&RbXnSXf8$]+E.1d]VqYdDI@blSh9pKSe`I`4KrhC:D+]q,I!l2A6LCD%:Oh?rFPL#7h$mO/q\=69T0BTeSc1m#KWsG)9kV-qB4.>aQ2ZK?n,8Nu.mEmKT8u(qN$3[t=BjKKa?%13047mn[5FP%q<bo*,W@0\DTpL@BXP9skLaU>Df`7e[U!S*c_UmB/T4DK>bBuC=(`o4Ff1;W]D0P7g])B_a0Nmjd!$*b.$/*6%!$2hDC)k=g%bCP5_RiU?O19s(LD)u3hVuslKn7pqd3K!)`"q`q6Y:kEn5pkBi?4oos`gAYYUU!]T0ki%.pq!89j+rO/.t#k$4XE-=+^JjPMu"[USRB*.<PBD;4!nO+%m'7=+RBaeR2,\lu`8c^s"I(02Q'Mlc+@o]stSnG>G`pAVg\<S_fdrR0$"`0*d4^Z4N`T$`b0[f$P]L/K99?_7@T:qr$)?[;+liCG^en=0@:o3"^*bV<ro;GH&FWGg-]j7BGZo>KpkgWA2qCPZ$fb<Pk$9DVCpelV\a]aM$R2EAA:4-`t+KbmWGk3+T0FP@#gs7X3f4T:T+e+LC-VF.!SSWEf\lX'H8/,>s<AgJ0Ola]4^qfEqXr_L#YojE)M>kf&&lVgGa?p(23CMeEmB%EJ9!t_U6*n1,Hri,.Mpb$p[oB&QXCUpggN(rOogMPg:4/_$jCJD-$%euF"mmi#eP$Z)=dr'O"YflJ1I=jNhJ'm"l^Oq]!oUX,U<G^KYj-Y*'gNH=ZO/VLPm*KB`qKm*`JTH9Q#4UlGHG:8&ENNpukn)2)Bt:Z8;);u_T)jaKIue<]n?h)hLF;2[n&0*r+.F23(2Nqi&*`bE6U!XPjBOq*qnN*50U1I8f7ViF\BBuK7Fq+Vcs)Z)ahG"#(R(WUr,][G07%@)S]WK`Cu(K=R!B7tG##ps?:0[`H"*[9HRQ+lbU1M,mS?XAC7&dXGQ@KDIJ:hCP5!+;PegaP7Sh48m>797F8?;1Zj(JC)i!Bp5(jB"%=doM&,Io\^Tm=+>J0\/^WlRr`usP%Vb,nt;WDST"'D17S8A$lWZaM<DDS!7.340@D$%h\<u,"!k!XKunW8L:e4g%t[Z)B5C!+@hS1fNs)p7N/LATO@.rbK(O9>9"%mBH!Ej\Bol2@;(T$c#-D%!EaF@`^,oGN/b%H+2R_a"(pX:$XT&&fK#*ZP%II!Ya.h^;@cCOD:l3jh;hegLCj@E4u'(18VeZ"qrdJiDgbr]I-uer;]d%"m<Ckp>58J#!b@$Ycm%Fg$52Bi3=qo4N[q^o'h$!/GrJH@I?)BCrQ9gB-[F*Kob9I0Lf\"$#QR?@;'k%>G<fMG3'KDM('C:ZiK4d`-^L:"$Ys)ioI2\j#)g@%HsLh"RI/Y9*^rQf%bOo\BNOC7HKUjV6oQ)GfSnhNHZmfX`e-T4&;cp9Ede8a]^en_GFNCO/6AiTCT.&*7Mq/2s-72h*a,JT[oS'>Pc>*]jW2nr00SCKjcoTQ?:PUsB#@5`RbK8&C\21U#(fmHcRl`,R@VQ7;`Z+e=Lan+Gc+rTlPj,9BsBlEY2D:6rQWQJ9XVd?u[BT$c#2D=ne+Vp>>C^g%?8lALWkCu01rNI`Z5ST;KKMm'cWH-J&kNG?&cm.'7G9r?i^HL=SPp$#PM+h]V+PUfG+$.%i"]=(*!)5<Ja-@H'u!-7_@1[rYK7pL-$UoY5b@f$SuM-.qM)&r%nadPadT7NAT7ShLe%aepF?F$'m)#sZXOWNJ2C!jm04m%DrcT49*c4n"'nVHh5k.">Z^[^:_DKBNGoGQ(I5@dL^Qql_3o`BOG@ceOk9l&M@OJ1KsCjCF5!!%'#T9"Bhq`fd5U%B%,kM>mXImd%_J!^*&%t?cOeChs<Z6mUb+*j83)l,Y"1%U?q^7S&j+`dDf!!(5C46Ii4:O+.Trc*j5[sr,cYNEF'_=nhq*^Z@DE]2!iobl0q-M($p@$!LGVeL#F)u:!!QY^qq"onXDZu\DD:1p`Bn[<P.\GZn$]Uej9#2*W[mtk^6>0[=4J?u@br8p5-ao"MZIt[hRI3/JX6D"8YJ@TFd9`1HBs1%M`LF,N;/Z4G@>1t+r%.F/lIiNFKOi_Xp=F8k`7VnZ-_r7)^f34\ahSi3=i>k1U+e@/58G<!#!;3/6!!'f>[=9MerIrkP*l;+HDXd".n)c0<OF;lUR?d13#KC",/pYJHLMo6>SN-fLFK%hB:.qbFpsPmp9pm`BoGn&G%t+W^!9U<[1[u"UnE11_\2M#riIk'@^]3'gb$*LAq[@3)T]N6_:"#n,M!JuoHXNHud<H[caVb)IkVE5";m2jcjF3;ASVb,PhQOC,\RVoSS#2$X>2!B\$pXXI2sIq2oaP)>S4p,#d^agT\u'0ig3IIa>1$s_aJW?14j!XLrV_ZS&+6'YSr)pAa$+EjoXgD^)bckIr*](2X08qV1U#)Ak=<rl,F`:tD#_t4nG>H+En>s.<"FCA)?BUB!;Y+pW$f.5Uq_>4g&Lnup,i'=A2EqM&9@8gL0srJ^Q1Bh<3h2N+8>9[lgLsdmeY%$29lCdf2)/?Du]."ftY,[Xp;GjEL.huMq-E_BDN">QbI58@\_6LOAEQAHBS/""u'!8UX-T;cA/X?Yi.7Log.K3of"ecFGnc-s0k"\mMLntj8Lr$`@l`8hadUfaiR=9c3?:ZoiZ^FF\Mf@d#pQp5X+iJl:LD&)*jhQ_a"(pX:$XT:WuTUI;V$hDd(kFq[D^0&F48EnZ92aD#]-`c\WLe0XX6^egLCj@E4u7b'UlUIA[(`8Y6#+T6^\6,kmc:T[+1^psoZh$lbdSbf0r4#MEa7kMnep]%=[<=-!'BPLK4o4'qm)^CK.;bN*<R6GfJN=eGNPRt%"%2r+/#6a%R2K9tKo\FeSX&2S_=J:-Vse<AYmaJVdr7@sT'T6^\6,kh?1WKUl?B)p#N?9p`rI=Q_1,['aW!:m*j:eu*R+J1\d(4?C;I-MHrPM?DaVbWCDT)g(,H3NsepAsiaP@W'R!6D'E5s<><J:-W-=nER3nu5\e:N@O"T/oOZI0P4Ll4qg4g]tou:6J&<!?e"\"na/8!V34RAC5#iaJW?14j!Y9fej<Ia[d1q#(V*d("AH&O-X&ROcYN4d:WI#Vd;YPao,o+2%U)98/?UXJ:-Vse<A[KQ<aTTOGm_tB)p#N?9p`rrFjkA&.-HL(4?C;I-MHrPMD4b>m$4NN+C=K!6D'E5s<?gB\>6S$->^RI0P4Ll4qg4glIb,"-J\(AC5#iaJW?14j!Y9fej<Ia[d1q#(V*d("AH&O-X&ROcYN4d:WI#Vd;YPao,o+2%U)98/?UXJ:-Vse<A[KQ<aTTOGm_tB)p#N?9p`rrFjkA&.-HL(4?C;I-MHrPMD4b>m$4NN+C=K!6D'E5s<?gB\>6S$->^RI0P4Ll4qg4glIb,"-J\(AC5#iaJW?14j!Y9fej<Ia[d1q#(V*d("AH&O-X&ROcYN4d:WI#Vd;YPao,o+2%U)98/?UXJ:-Vse<A[KQ<aTTOGm_tB)p#N?9p`rrFjkA&.-HL(4?C;I-MHrPMD4b>m$4NN+C=K!6D'E5s<?gB\>6S$->^RI0P4Ll4qg4glIb,"-J\(AC5#iaJW?14j!Y9fej<Ia[d1q#(V*d("AH&O-X&ROcYN4d:WI#Vd;YPao,o+2%U)98/?UXJ:-Vse<A[KQ<aTTOGm_tB)p#N?9p`rrFjkA&.-HL(4?C;I-MHrPMD4b>m$4NN+C=K!6D'E5s<?gB\>6S$->^RI0P4Ll4qg4glIb,"-J\(AC5#iaJW?14j!Y9fej<Ia[d1q#(V*d("AH&O-X&ROcYN4d:WI#Vd;YPao,o+2%U)98/?UXJ:-Vse<A[KQ<aTTOGm_tB)p#N?9p`rrFjkA&.-HL(4?C;I-MHrPMD4b>m$4NN+C=K!6D'E5s<?gB\>6S$->^RI0P4Ll4qg4glIb,"-J\(AC5#iaJW?14j!Y9fej<Ia[d1q#(V*d("AH&O-X&ROcYN4d:WI#Vd;YPao,o+2%U)98/?UXJ:-Vse<A[KQ<aTTOGm_tB)p#N?9p`rrFjkA&.-HL(4?C;I-MHrPMD4b>m$4NN+C=K!6D'E5s<?gB\>6S$->^RI0P4Ll4qg4glIb,"-J\(AC5#iaJW?14j!Y9fej<Ia[d1q#(V*d("AH&O-X&ROcYN4d:WI#Vd;YPao,o+2%U)98/?UXJ:-Vse<A[KQ<aTTOGm_tB)p#N?9p`rrFjkA&.-HL(4?C;I-MHrPMD4b>m$4NN+C=K!6D'E5s<?gB\>6S$->^RI0P4Ll4qg4glIb,"-J\(AC5#iaJW?1L&Lr$s6hbIc>NH[SD8VZjgW,<QG2ptV(=tmWKRa@4p+&6oa7^9_r7*QpoQ\kb^-&KlRd0B]PN@/Fq6f8qJ+WMZ4($9:=<MG$ip+Q/#]oRVu8SHo9'(NXiI&`2>qi"mQ^Ql9AAjD9Cg'k,GhSeSLMb/Aa1Q>V9].':VDA&qrYmCLAWX3)S+mhSshO7+nm)SabsA@[mU"DnD_kt\E9#ekWX-PIaMd.aJW?1jo+\RVh]X\2VW!$j<#VTfXg<OiPhXsE6TiTd!b1)rM%U<OAEQA3b\Fi>u(/>>mus/."s]Rqt(a+nu5\e#PUo_hTkZ_"-<GWoMn=_L/Ot6Zqm:p+J3r`26kI')u:db:Jd@N/F"KtdUrR$Vd;Y`gbnotr8VF6*(N=uL9dbAZq6kj+J3r`os)NjlXp-YDPKou?Tf%E16b>#U`K:?!;Y+pW/j"^I`rnuihn=pM:>,NU!E_#:VD?`C&+[<%>G<FIDn`+b>9g6P.B"R!6D'E6*3h,kYZi*Mk%']j\dIo.t%VPI-MHr:",a"r/iTiatf2VSKsgk"$f'C$L4MQmUORpO,^FRV,Jb`Vp>@):VD>u9)hl"re;AY^+qNBQ6?It,WYK7!:m*j:d]I)n4-(<h`pMKV6:;%P\#Z%3_9g0#(V*d("C]9lYbW`n8V?l+VO&c=nES^#Yg^Ao<`QkfOfo0='0I="Vt?^hKe9);WA$)5AZ"W.Dc8qRjDm@dWZ7ELtig&%lK[0U/!V$r/Fa_KCg%3(qfJ1+2\p-#)i&lX58Z:M8FuSS#c0e#)/09,-"ILM3'dOB#rk#,eHF9!@V4j'Gaei_5'&<DNVn-N84<7e#j[3e)NA\IXC(5O72l6^XcH\pgGD#9bB9SfIUIk,[2^6Y-?;Ghf1>@Eh@BOZ,BG/PeT@OT)g@rPSl:/=F7`W/?HG.-HDa.C[&`;jME5N)_0NM@FMbZO<,_BM3AiN4OcsugS=BYJ9$X_@7#!Mi=\ee@.`gS8/aD?OMBYB(cGmg]+Xs/mLqT<QI;aro!`i-1B8^^s3ds3C+s,XhDN(;Dd^FO$_&d%L1+SX^-eSgEhAqr`_n"';Z?AHI0Q>q@rI`rP_*0O3k=n!W2G=YQu#>7H[:;!VmiV0FItTCIs[_M"&Ok(1M.u#!ZF<3*(IgmFWVfiPPatr23r,X-fo7MkVE4881$240lla28"[pp/e/:/[e-*u3TN@e8r]Z_e4KI?!W!3ipRQKQ"j*Q0mPc[nfU0dF7ip_Z[,aEa99#c0e4KI?%JgJuQbE"\+-U>&RlS#u@?V2slSG<R7P9*Z6PI"+Y>\rq1j)^q<e`d?ct,eDIarR!.=K.6Uu[rkg@[j)mSa.$/01Q^b2:@gB)oMZKb[\;W:-7P>ottFkrTfPaF,O'NMWE"8blR.q@#VJ9pm^ljSn<X=fh8#VS^44%3*urb!\\d;]0=$*MQ<Oh^[#d!4jVi+OChF*L0<um'8mN,58&F23n_L-fo93kVE4p[*9(BLYP,\Zn"ckBIYQLhQW-[VCm:@6V?cF)/:]CU/&kg.a_l/\gb2[E6M%;QTibq=P19(59r.-T?9u?kn%u8r`4k>"40cae!b0Ar-%<,9ne;GRln6\o\Bs*\PHe8Z#kd_.=\BdT)n/QH0:_WjSm(8+.#1<<*7ec@3^P%?2EuDPh`/le6"b"SWplhU<`g];j.$SO"uuu`Y'6$:R.l`FFlP&J#bu0!U(k?W%jN_P5A48)G;HVPOc1ToGN0s156]7W@,5PQ)Ls0JiY?1X$iQ\kU'f<0pI!Iqc&Cj9.-[%o!_6`)1ZT[L)NFY-b3$<W3LGr3[oQZ7%XMD-=`u/P^8Mi</DMd-`E7"[n?91J8R,s)FLJO\PJKhZ#kRY.=\BdT)n.&A#M,HHBS/)M&K#7W0?e]9(X!ODDHqb6`DHD:R.l`FFlP&J#bu0!U(k?W%jN_P5A48)G;HVPOc1ToGN0s156]7W@,5PQ)Ls0JiY?1X$iQ\kU'f<0pI!Iqc&Cj9.-[%o!_6`)1ZT[L)NFY-b3$<W3LGr3[oQZ7%XMD-=`u/P^8Mi</DMd-`E7"[n?91J8R,s)FLJO\PJKhZ#kRY.=\BdT)n.&A#M,HHBS/)M&K#7W0?e]9(X!ODDHqb6`DHD:R.l`FFlP&J#bu0!U(k?W%jN_P5A48)G;HVPOc1ToGN0s156]7W@,5PQ)Ls0JiY?1X$iQ\kU'f<0pI!Iqc&Cj9.-[%o!_6`)1ZT[L)NFY-b3$<W3LGr3[oQZ7%XMD-=`u/P^8Mi</DMd-`E7"[n?91J8R,s)FLJO\PJKhZ#kRY.=\BdT)n.&A#M,HHBS/)M&K#7W0?e]9(X!ODDHqb6`DHD:R.l`FFlP&J#bu0!U(k?W%jN_P5A48)G;HVPOc1ToGN0s156]7W@,5PQ)Ls0JiY?1X$iQ\kU'f<0pI!Iqc&Cj9.-[%o!_6`)1ZU^Hjm^V_)GD$F/'oG`E?8,<;Hq@6g5>JkC0eX:Rup`k\Jf-FN;@e*1C]]n;m(RiJZZ!q*/)OJefLeQ;/j;:0qtq;bJaT@QW[\WM(hjs7W@sQ8A'QO3\mAn5d.@[.No>-a+'\fQO_k0"U/dn?(-&=8mC=pK=*hk`3a12(lOeqI3)K;h;i,23ul_T)0+gnG%e9+++!7$S7fJJeh^6k`MXD\UF<E=\G\e6&UgC9.,s.-Vs^?SSa[NS3FhJ&%jfJRm"'+0RPC`5lT>&ZCUY+JF4h0$nZF[NVp"cN?pKFkC.5bRJ)Q@GPOuqKkQhO:Up)F?aa31AI;Uoe6"c*gcB`-nJAT90!b<^A++_`p%:8es4Qmnn1sfD#K_/?B)oN<gbEoRp,V.!A.@/EE9gFUR<6F`pZ8paTf5VO@:L_!,4aNMaq(*AeXhPfOWKfA]AdSGSNHhja_urQ9q:b>:jEO2q==/9M@bQ(\gi*@mrBmVcm#:*dKq5NakIm:E1:.JS#jD]OaH8XM_hP_E;UsL2D*mRBtr;Ja8M2JI-)O6gO@HnYI`np';,1^\9u`KFQ"C[bJK2!Drp4>!8S@\\]0<C5"LIMh%)]Wo^sqn;C+'\IV^XNFiKc7?9[%OCMpZ4[1Bq,pGJ:2prUmdYE?IEr8WYr?YFaOPmU]Je6"c*`&`2(jL<T2&WSpD\cFA@LsrP&Rg_fW0s7MOH2I5p%R0.*n?(aTa.IR6r2i)0#,%Gp51aHfA</tTf$`0j(eU(3SGQ.i#NpFUITEbbQ5[?_,nk`jou^-uh6ZV6^QcAd*5FL][n6fU6>A'B:h$!.CuTNZXKZGapJ=l8]4"lmIlnF8[>/U_XT,`@*BN0L&,X'fHng"!H-Nq<7jci$akmHSB)oLlk&ZN(VWGd_=Q[JiVjG+]`_`Z\k1l$?9iHMTmdTV,c*bIG8,qMh?Y-okr$1Y?gYuGZ.lZ@*rs=a7d.lEH'sn7GZ#i<hF`R-,#Ej<2qJ$t.]C2$arqKVt5EoKTO>GS5pTC!SF@X5u_nY;O[HTIIh%]Ik7QSVn]]M]84nqM2lXL@"8n-*EW2+oC*&>"(QRC)Rp!3FVT=f3s(>il<?+NW3/OF2'SPWdd4RBG[ah)Jsh-RQaHb[<[T$@Q3NHI/$RI$cTNuEI8r`5LP"40asT515Y/bf4e@*_\[M+u4)+-k"sc.m?;"'8WPpu4pVc$opcI\3<+"YE&U/=fU<Sc$<f^Y3,bUQ]mD^iV3<9RD8QmIj/$I%+EVHX!P?-MkI(^`"-^[tj0'!8S@V\OPW3\'GY!:OM`nZc>5AeLh(Y^&6#?rd#UC5HQq^cU1IBo'TYWYGs=A?5.8EpTC%`-7W'C,,E6,$"_Z/`aWudq6s+Dr52IJJ*4gUn!6)fB"eEa?@Dds%m&\/X:#c[f2l6jGahb`Ub0s_,@s%#7fIT&pK=*hk`0?&2&`[[g],ptLMaTfOB)r_gG"@o4fpmhC+QWH2YVQ"HDbh?E9Q0RXbmk##cY(N6<SGOls27s^[bReXhV7<;?rihrRKNW]Of&aI*&'PNkXZLkoVe]q"J]VHE!Sg-*K>goW.T@.t&s;plY&uo!cL.)1ZU^p0=B_T'3`)Llm&AnF0YYYHosJ*YN>XpS_:<rT0>,*LLZn0/($:`OF-+r,0I\>(kC-3h`W9H-S:2P?Am[M-]g>TrC%tiQ]gf>@O#]]D6Yth=9)7,El1]\a53?h"I!1Xfu=tlSAOs&ad+udic9hMQ<:m_<j0Uq0Dbd`$[bjGMaqJ*IV77!FZW"#X@H9!iiND-JI8D72'>3qM6rIV'TpOK26?1/4IMb>(kC-3h`W9H.88620KU5?[q[p@in6V_X5f:])7TOG<+U"q%d'lIDMM1T$^Y]dag_!q@)c(=T8"NI0Q@6U-7+!B3HAIQTLc4CRS*P1%qade*#,6A,,*1];>/M2MTX1U<WXCFN2u1(KpA\Ilen-m$\/cCO/:c$<i,4=?<.?3nZKfCsoe_ctXcFo59pRo]p9<Y6jmb]^('3IS6;aSDRt-#,"&P4kD[mr*.e1FN:Se]'fD>G.;P_gK?2AnE/tB?@)G.;f',>DRW=:7HnT*%&G=>S,5@HZ,mRV&cT9.CFWB3,,E6,$)Q.ngE-Cacr7,MCW!9@>A;?!G<<0CP9Fr2-'QabV0:Se\FbpgI0O_@TCj(Pmca=bNA.AeYr2=k$\/.KkM7hooMmZ$dM$pipL>ms`ihm<G#)V3iT,nDL+a$]J\=t.,,E6,$'Ei]>Gh@.j/mMu<c\#$f,B"fMojTD)9DW%en4uo,P!Rr*FW&DqtWaQH!T\#@go1]<$:qY2=\eLO#d)l!h0UTSg\7a;IesEq!2Je["qO;cFIP-njRs2EdjYR)1_.2IghmK`of;JIdj>5YE(E&Skt!n0@>Hn5MY_ko?rB/,)^n]e7J@_^<(=aNter,WNgP3r,o<M99=<D0=gJL-'qoB^O6=4S#AGt#,%IF+%,4+gjQARIC0NI&+Zh):F^d@N1ols$KQY=`]s%^%XT4]*nr>*FJZ=a4^?LRH_R0%8<'GZiieQ*O0Cb+oW+0/2RY-b04meZL^63XISg#EQp(W!:%=:<F4CqRr_m<`9a,RP'Na2ho")_/VG2eFefK;)`+KH_ISUZb#cY(N6Mtu3jn0&65P4*<lO6S'GgPssjY%di+F.PnOmn"o\&.bTJ8U6f%)%)c7lO1lqmm$iR-T^s/XuR@;.GGW[(.9b9.)p8b1ab^U\\D'Hn3^FG(-Z)"YE&U/=fU<S\4@[&&TiGE9j:6b^\`RhnLtL8Eh]='-@$Yo,[R$^:;);8#O\,kUV$2]HDL]VV?TIY&>\;H^[,#cqSMOCRfIjjRgIT_bM/?s5N(QG>n(TR&=Ru@u3pM\KA0Hhu<6T/$GKbddO]ld;;'kZ?c[+6>A'B:eI9@lHJSB3\u*K"$*QT39/V;++@8]b/WU="T'0YG4P<KLMqCcPb2S?iVJ>dr5Lde,d.V@,(HXfT)n/Q36sJ!=;aTPADO]Jje/-!7lNW]C$f?`j?/gD>\YgpM)4n$FmT:7YIWUma[Z0O5L-b$+fFMQV'a_CBG"-Pl%Dt"jEW[X>PRes9&=m__p?Jn@!:?(YHGP#7P/CKqW+*LW:+"N2/<NW>KM5G(ROg!$2N?;he.?ATKD-qf*Gkt(bq4s>@c-bjG\LWNP7=L6fE5a\>55^hMn5Y6(GJ-Vf;L)?A':*c@3g(GPh#ngAg^.'sn7GZ#i;]Fn3PoDm)<?S)g],IXR3W).7p_jKJ8>oSg.0SU/DRXG(K$dt')hL^7>rhhn,4.=\u*qlJ*DF@W_$)Pb>:OS89I?[oE%WrWmm#^k-5pS8>'&$NP+J_*M$D.>!-,21h59dhlSO1K)IhdVX67eNh(OJl8IMi\iM-^7UYdq:q!(bp(")]jI/klh`mr&E3&Zn3/%e+Yc'F<N6JUZ$^?(Xj[p3ua.VmH3lD4p0.Pd@P-,&MP3NVrR.'9+F,GjNEa!HPg'BT/:VU"&>A)JVB<VL4f(R`nk)!3ZCHN+joG$CrY?-@QH*Y=2+O=UX$O?N%==cX)kG3gis9L`<oe%e6"c*X?,$Z%983q='Y.2$Z8a$$)*_kGk7,'mW;jj+rL1L2(k<dPJ.DB5BZ\(/U'o*ZH]Q0%AbBcS>>;#s(uR`ZoQm"r9\4p$pZbjI'+&N]rcMScB,S*3$plXHT+BBJ[$+dCgt]gW#U35V/rb*IA?6Eii5u),,E6,#pn0ECEIf7nI`?8Z..-cc5u_!ej>g;YAG./YHX2)Q'?)tI0Q?+8fU4Q1#_X5pHSBLoZqoe`lH?Eh"5jUlY-d(k<tp=O_B,)>ed#pPNXMqcm#:*dL#$damkG)]Al(FVq3NmNF?&ZHIY/Cc!O"d6/trS9eh$b4^toi9E',+pK=*hk`0](co-Tqocqa!\,N6d0#$DnA;-@SC!Ec'3U!QF*u_qSd`,+Ndj)D1\kmcT?"\Cg6Qm[Xp)2:ip3K#_O;^b>`)%hb^A$^kNk8]DDf1ueht!1bSF:6oY5?Q&55(^TSt,T:a6bE$]^5!)%u2@8o^XL[T.'U^r,;@>RnJjXeY(4gFAiTXBH=%V`('/n-#,!%TMEYe.a_l/]#be(%&KQV5#n>sdL#37r2gT[#,%HETuKpo8a]M'C+PpK:<MHDd:WHjaV\b$V4Qa3<MIL]$0n>aXV-$dTUUn6`_bqlmSbEH/=iG/b24\rB)oNb(hsJUT&`(8U;kUflD4?[&q'tWRuF&\;!LX?;^H00SY/a#h^[#d!4p8hC(-r1j??S<`mP1YV#7>-I0Q@6N1n6fl:LDB-#,!%TMEYe.a_l/]#be(%&KQV5#n>sdL#37r2gT[#,%HETuKpo8a]M'C+PpK:<MHDd:WHjaV\b$V4Qa3<MIL]$0n>aXV-$dTUUn6`_bqlmSbEH/=iG/b24\rB)oNb(hsJUT&`(8U;kUflD4?[&q'tWRuF&\;!LX?;^H00SY/a#h^[#d!4p8hC(-r1j??S<`mP1YV#7>-I0Q@6N1n6fl:LDB-#,!%TMEYe.a_l/]#be(%&KQV5#n>sdL#37r2gT[#,%HETuKpo8a]M'C+PpK:<MHDd:WHjaV\b$V4Qa3<MIL]$0n>aXV-$dTUUn6`_bqlmSbEH/=iG/b24\rB)oNb(hsJUT&`(8U;kUflD4?[&q'tWRuF&\;!LX?;^H00SY/a#h^[#d!4p8hC(-r1j??S<`mP1YV#7>-I0Q@6N1n6fl:LDB-#,!%TMEYe.a_l/]#be(%&KQV5#n>sdL#37r2gT[#,%HETuKpo8a]M'C+PpK:<MHDd:WHjC#4-u%Cn]C`lFp:1)1Q_DqN->;jY51+XQl^$oO=\;((IDQ0:"(h6atL$\mHO@Ii0L%l>":2K.6h@8iN,]-/KpW=1YM%T+V8DjBNB!8Y$!MCXD9+*5okV%5Bt(,g*`aC/#6^:PO7pSeQYQ4?b>j_pFJ1B?7<bmlgjgct/4.n^st.P,DmY`Zi#/q%q29(#UqC+LC":<MHDd:WHjl*PLa#e<0/jPH^D1_gcaDqN->;jY51+XQl^$oO=\;((IDQ0:"(h)&]_b`M^o>@b"e#FYu-Rl>0EYc1:Qh2mfs</);aLT$F-[n?91J1aK45<SrC>>$&R.Of192]`SZ\PEC-Z#l3k.=Wj8T)n/]jKcR$f@ctliMMdTL35d)EK^2uJ/V'NWKZn^1@uH7/pldA5:00Dd]P6.d\m\G2f.R'G;M.=qt)p,Q;1@+j_n_o1B?6t[-O&\HA.234t_9=WJn&9_^<p4-Y@CkhPJ6?*U9HuXTj1XTG21C]q.f\Mj6u0*&_Wt3u;qYI<q+r9@p,+o!\\m)1YUYR5&d>H05WZ@+U$+/q*AkJ?Tp/`XJ?d'Zrg=maI*D=Lq(pPeRs+cN'2@ljXVk;IC=nA,m&N2JMEf($8-Vdp(=(\kel]^V*C7!@Z@kQX64^K+T@&Fs#]DKT2:&$5at'bgL\`Zq9]7'@^,VUe](iSu0g6P\]Up'9\7UQWSP;ZRbcCfNcOo7UZDadaN9u5*8cR.@iLKIs[MG"&QQX1M.t4*Y%r21S]r*m>RXY1SBq'NSJGCO-9CY8W>#;lD4@F;>L\d,YgGaK&i?I+[3BV@O"A1IFr78Nk+EE)^`=*o?.<T`t'+4Cl5G__Ia)n-eV+#F*Tk]'d36"QPrNpe4KJjF7^?#GeEY<+2abU_MTiQ&\/K3;:n]RF-XJ_TFc-N6ksGf&Q1"2%/Cj!A9[5n!)].>@qHQ&[b5*P0N]m1i.B(qM7&?4n\[g%Rj)[1YZY338;506dJZmOkq212A'!P@,s+Yi!<<*"(d*3N!!!"l./F>P!!#8]oGIW/!.^g-1B7CT!(G:JzMPADs!!!!57@sS\!!"F)4p(cb!)OAX"onW'TIBXF!!!!a;=k_+!!%PDkVE2=!!#I8B)ho3!/dMsz'LeVp!!!!IMEV+B!!#h0I0KZO!2(b:$ig8-5Z..k!!!"LU?FB5!!!!fd:WFZ!!%nNcN!qF!#.ko!<<*".#L1j!!!!q'R^/c!!&Z?q@!?(!'jER)#sX:J>26`z7F>`J!!!"VU<`f>!!!^%T)eol!%<^g!rr<$:_\<^!!!"l./F>P!!#8]oGIW/!.^g-1B7CT!(G:JzMPADs!!!!57@sS\!!"F)4p(cb!)OAX"onW'TIBXF!!!!a;=k_+!!%PDkVE2=!!#I8B)ho3!/dMsz'LeVp!!!!IMEV+B!!#h0I0KZO!2(b:$ig8-5Z..k!!!"LU?FB5!!!!fd:WFZ!!%nNcN!qF!#.ko!<<*".#L1j!!!!q'R^/c!!&Z?jn9RF&4-XGKFgHU;8(=h&4-XGKFgHU+[f2TrB>iF63n`f&4-XGKFgHU+bUCn#U+j463n`f&4-XGKFgHU+bUCn#U+j463n`f&4-XGKFgHU+bUCn#U+j463n`f&4-XGKFgHU+bUCn#U+j463n`f&4-XGKFgHU+bUCn#U+j463n`f&4-XGKFgHU+bUCn#U+j463n`f&4-XGKFgHU+bUCn#U+j463n`f&4-XGKFgHU+bUCn#U+j463n`f&4-XGKFgHU+bUCn#U+j46AQnA#U+j463n`f&>GnmcQIlP63n`f&422IU9$PrS3R![!!!"l1@uFa!!%PDkVE2=!!#I8B)ho3!/dMsz'LeVp!!!!IMEV+B!!#h0I0KZO!2(b:$ig8-5Z..k!!!"LU?FB5!!!!fd:WFZ!!%nNcN!qF!#.ko!<<*".#L1j!!!!q'R^/c!!&Z?q@!?(!'jER)#sX:J>26`z7F>`J!!!"VU<`f>!!!^%T)eol!%<^g!rr<$:_\<^!!!"l./F>P!!#8]oGIW/!.^g-1B7CT!(G:JzMPADs!!!!57@sS\!!"F)4p(cb!)OAX"onW'TIBXF!!!!a;=k_+!!%PDkVE2=!!#I8B)ho3!/dMsz'LeVp!!!!I9&9=P6\H";#U+j46AX?K5(c%O&4-XGKFgHU;,la8FQrDrIO5$p!*#=LK0BA;!!!^%T0](M!!!"VU<fLYz7F>bpB)ho3J>26`kVE2=!'jER)>"dH!!&Z?q@*3/!!!!q'R^16"onW'.#L3@4p(cb!#.ko6(\/X!!%nNc_/Sa!!!!fd:^g=!!!"LU?FDs1B7CT5Z..koGIW/!2(b:%/LA4!!#h0I0P*(!!!!IMEZYV!rr<$'LeW[T)eol!/dMsT[*T<!!#I8B@(8k!!%PDkVMEY!!!!a;=kau)#sX:TIBXFq@!A>JB`K4edKbeEp)g[XL-tB$SFEr]^sE)6jOrhaG;NDKY\i@).DG/_abP38fu,8+o/A=%/LA45l:QUd>W$l(_.7lIuGk1&>Dc/L6=6`KOL_LTrgT%8(2+tB)hqc'FkBb>]@DfE<#Kq5'tYc<kN_%n6,MQoUG$XrMQ8.oRGcr%KNjML5@TdKHVQK*+AUJK1IbdKOH/8/u9(t7F>bpB)hqc2"Sgnf3<U`s.@"%J<-G[pHK_4kM1FP&IumiJ=oFHl%E@Gko`\c5^JJ8.OnF0'L@j**2IdEW[PP,Tb@\C!YIa!5lm*Wj^:+3H7kN`O$)b+a.8dG-7&K4A3TU2^O4#VB4mji/Fu!=Dl0IA]h,@'f?\97IEDlsE&AM*A3a!:M[V>nj%Kf##''nJ!"b$ao>dfQ09e#6-OBkT+;;l$,(iNVl3//<\C!M$h'-kDEWuLDOJZ01+/VO!W:hMs3<B2Bl""aq+\%GK1?`Bnphg6q"$$G`!!mK,r%Vq7+7iqfm1W=s5W0qkN>ceAI8g;/"$$G`!!jcgmh0cS"<djI+:M6!+@D3:YLPn`5gB?0!.n#`IZ/#K6Mnt?!8nIS":?#sZk%a+6d@sB!!!#c9Gl5c?20Ot1&q<k7KslU=\+n9m#mliS,iTi"SCa)\6QRba9^)I,ldpR-:<h&5V`bi@&/399J:DjEWuLD&<Jr?Th2B`[Eg`3!$3BfO@p*u+D2g0!!!!"Pq#XuK,FXh\u7t7A2)Fq+Jor8"$$G`!3f)N]0s[,r:f'AI@^`Fn15H3A2&&[N@2dba;FsXJ<`00K%is!!&RS4SoEMb'BBS_$ig:CWpSj>AaE_c^970$-31ifA/LKG8;8DW_d^3=1QXBm!!"NlEJC93:M?A2!WY>UL*8K^U4JhcS,iTi=K+Ac?;'LbI?Fm:n15H3eD2^a%u][=c9TYT!!'*<^\p&.]72gUV1"L5!:VNWL1E!$+\DR8QnIG.j9u"g^reTZl^hMd!'JPd[3Ra73<K6]YTd][!'#NKCIrONEWuLD?q&?@!,quuero)&j9u"g^l"W_!8mutX<kt+a;FsXJ/('H!5Jor=A+f5O>?k:!%W'o!.Y`mZ'HYJ+D1ZS!*8.h!!"Bc@kC9t5gB?0!3F6Z!!#dP``eOqJXc`@!*G@>!!&P)NO:#l"$$G`!3dY[!!#!0)f&#c#''nJ!+87@!!$s>2qF/Q%-.fs!5OJ^!<D$\DQG/+)9<Zq!.YeE!s$+CgfR441QXBm!!"Ni"os/e\?V>FB-:ge!!$'\$ig8TE+:Ikc9TYT!!'+A)#sY3i5Sr`S:R12!!$,`1B7EF^l>`I3<M8D!!'5IB)hokJK&ArEX$Og!!$Cqc2[i`!]S\nj:()X!!'flS,iWJ"E(:eaVi/;!!%Na3<K8s$/AWUOu&1U!!!!LEWuMo'=b<5,\J64!!!""j9u"g-ZEQI8^9TH!!!##a;FsX:>j,qP+7)n!<<+%OYZt;SA:,l,WPre!rr>*,%glU3.W#a8TG#U"onX27Etl5DuquLP2m&4$ig:CMOX\Ihumr!--7%G)#sYe'fc?r^^8du99M)m1B7CT.rki)bYQ?o#PKVt?_5Xu<!r.A^RU1=?hnsHDP\RNhPIr2o#$!LAWo'\Q)?HVbP@\LCKAM,rRnZSAa#U*]<H"12@gNUPZqut[IX'NH(gD&lIXKGIkP!6`Nd0\\;M;A8TG#U"onX27F$FBfs/&4^:XC`HHpJPJ!XJ;'T]J$j=+f9AOC@*lm"Bql:-T;q5LL`S(E'2i.g=*j3PX?7XfioVg#SgZ+jGONZ2b*EX$Og!!$Cqc@?>5['t,4WqWJG:FJ6@KjC7<eHoL))N-G6B&VX5Qj$3\TFSXn:L)AGC:S\CDbF(,LVHRImY,Ltno#;Hiu=&$%uV;B6cg4e)#sYeR;_HC4hZN,I!))df>ide<FhOY_iGo4lIW#2C+NBSd&?LOGB`oF<0[0"H\[r6PVH2bc(o>=[j?Lbj5h?]+/8pPf&g?+n+q;-#?BeH\c-C8Yj1*clLsQ.Rg0QGhq5AIo:j7)`XSpl%qb9IEUn#`DWJf@P+9AU3Q!clFu6@/4[;?&Sn7OEIB@9h3e*+^n#(6J8#/>7VgGiIf9c@jCUHBT*C'&h0'6LA!5Kb*A%1mj-/@M7K^M_)+9'1U.]o4Ll.bli;KUUHp&%S\QND@0S$gdRiT7i?Ai:"N[TNQu+1sN3q./"-!EE+BK(nBZ]qg?hK7=p-2<t!p7YAUZ>A*DAEU7TZ0'+%5F:X9I(dlC_a;M'p,A/^RU7>Z4```-.hA&?%!!(=))nU5g0B!6SG'.QUn3R*M<R@8pg>VJ>9*Y)>qbqNRCE);sP-VH1;HR7geJf\In^dMs)4*KCQJf1H\K)]M>(4UE2$.)/;*$A"&:Ai2a0mu!2[`^YNCUR8`=.^!j:()Xf!UVrQt8_3E9["\]!X'ar<`N)%cJA=F\a[LE5.p#MI"la3%VgDYrdr;KBEY@m2CK%%T<*DqOj+bWhfPoI^V/EEO(Xi_bs;9\H@FG[;/A*nUmnAlWCAYoRHe;f>Ji_N9_>1LqHg&F[TE@\aej0g%NnBmHp@ET%6^qP<rTuq(2KXB\\otqTT(rXK*YRH42*4E,X%ke(=*pG.bG&o:1?*HF-^k?*)*L9BVA@CNf:<#AS,:%!FBhBDCcI[]UX>>,*,=J4#DS+AJKql85G`=eh@$h=/7E>M;<tTgU:h_rP7?)-<#*pO@UqRpEAdM*9QNpAO5\?K1_GNK\c;%'D'#.!T*Z/b9$6%J&G;`Qb5FK`._TIlS5Y\%JPWHNdR2Qkq4uXa@q+9S1d;s$"iN\DVmRH]TZ9_QHX3n#Mc?B/Ru/?]+Poact[6?q/F,c4KuF+ZQ5X/m%2/dmmH:fq+]Wbtg)nEe\KsgM'&@j9u%H9]QTf:5Vjm;NP@2ifIn>IalR=@$$o;T-*ake'<.l#:XJc]X;PNo?!q>:R>-7jX's)j#$oLIF+ur_-H9YJ5LqZA<>pCq@A%[^T7$5:.McPb&I/"G%"=Kf$+^0WQi1=d&fTnr1VW`h]M6">UT-Nk:-Zr!97,Dh3Q:]blVM<%-.iX%,"W-jpW&(2R[L#2r]l+3<K7@%64NB1EqP8FWWTKVN%T46d-F^3Rk2$,6^E5B>s5hCT3Wj&p^2H.DH_905C!'2TT/<<>ht-N$,O:q8"n'F*"\G7k'fUC\,pTjps%L9>FIFoPR<6rFQ'dhftrD=NnPt9$T]ITTCt*q+9F8cLB$MK\5rRjEI:u<N8Gqj(EB:!,rk6fWBLH$-/4WEqBa)[P)B-^9_7(3J4l6?2A`Xi,9>-M?.ltKAY]H/*%.[[=L-=:Cch4q<@S_k$nfdXNfiUU[V(NQBCa+==`^]bo-.k9.'XM!J>;QdQK-n?jn>o+D4Nl):JF.1Rp7KG&l')r`sU-n6L[FFc3gY%t>^;;u]M9!!#dS)nU5g0B"N,jp]9gZo--Q8@+mFMVg0"jZ0_+5W*;9)E,iSZ@,S+j,pA'mQ%g(h.:DY[<_,UVP+gL7V1DK7XjB*K?VRXoPR=aral2M2]h3)(,IY!Ou&1U.+XpI`jJ22@Me\$hPth*K(>S!an=t!)*b^I<6YHq+>pZ+43J"]\Xp$He*L,[lc9GAhOh!"Rtb/!9`=5AGe[=ZGNn"o6ab(NC[]@!F_KNC`PSn;?/?7;QHK*mg,s$#^n.rK6lNJGX@1okk2_j^S_b"%)Ih8ln'S\"g<r*-riKJl#-4(c:oV;`jp^C57CkGJN>I'A,0p*/3<K7@NGn174hZN\KU=QklgNu02"lhGbY-K,pEZnUPC[QWYr5D0+6<S_rqU)(d^gfL/SUe_EQ_R8J$c,K[O'CPZbUM?%-.iM/natOpj27k"OnW,q"2%N=;(dXmC[ehghC[;0rf][?rs?"\`=2hqd7*"]RS\Qaq[MQI$]Z=XC0_52lpq.\8go_nqD"^E56@R4q&O_lh`2Z"0Nel+)4h,G9h'?B&sHGS(*V/aZK?I<oaYhi&&0Q>PIb&m\24Eprt.#OT4.MUd`;3-#Bu7(m$PheU6D>mU7gP@jj>>3J1ed)$W4T\S@th!D@?@R505a.[^b.g3MWJ?2R"n=[ingoCG0Z<9%>g-S/Kk7\2^A(AqHK)*Y"NO'fh.4+-)BTlI8#TB==Vr`Jb!l2QWp@tXMA5)1HoC8da\S287T@f(nJdc#_K'fc?r3/uWVCS+qM>r:[P^STf8n\#6Yp^>LI2f!($[LV@,);#^F#%RnpGbf[gbeP&fc9T[JQu`J>'JEL+lGUM?cc/L=0'!8:l](P07.ESk%]qLi_-B(&APiE0=3a4W;a5^C[q56^is/U'NMXELTAqVTqT-i%DuJdDJm-KlX`KsjWF`/$hUc#.>Lt!WV3&H@Bt&ERhqoD5qpAU=,n]_0^$F%J`I;S^]]Zt[pZGHao%a&M$"Nh4NKnBd4Loa]LhHW0LeP@_V=h/=B)hq0nVuA9VjD?=#9M3!^"HtQa;Hb;/`[>]$GQ%$pTU$90pJ2ZS3c\g)&h&+Fs^p_?Q5u\QcpCc[.1b5UgMF:d^,M2Wq,a/2Ung/:,V@kTrD#cei#a@*C'8*B2tFKH10InFftPnCDV15Vfb,Ym*RIMM7'KPHFn"0)b/=2q5j[@]e+JY^)\/*q&Q%Ms!nTu5sti9!s!S#DsZ%<]nF!WnG3P2NZ,tV19`@k%*/dinOWDYR"6uVS:R1r1$8tr]&%Df9QYou<E-<VL-9+Nc-<Y;^uGY6H-)ke0<&P@X-Gbr@Y7sQIf(BBW^gjTZ@CaAjqAiFDj[L*"So8!CpsUi*8suE-gk7aSQ&D0Sbe4NaC',?S?%`-!.[T7`bsV]9=RWN3Q%humE7VV-b\&DkkCS![A8)`RpDn,>=,F9pFL0DJ_Jn,O+o=ogU:Y\D\c0j)9<]$;pNat6W:T)-iX"4""ugl.:CtKY+;%>IRIrKJ8;ZDBm8<4oi8=i@p]RFi#C7NS?,oFW*8m]b!tF]?(:!cI\Btu\lCf"D/Ar9IU/+S9BV;4-GME'4^P$e`QK?A[9J8D=!;2V!08785R)n/1RQ?l.9D/*1\`'FXW`>.n>#[HoL995f&l5nUV(t$Wb(3\$@Hp9EVHlRokhghh^i1)NCUR8`=.^!j:()XME,;T?MW=2J&,AOpPWe\^L%/Y:W0O5'uc%mTUOOS2.8J0pgKRg771m-AaY_l[mBQi5<o/m@G&Ae!Oqf(O>?lePPN49h:#$,98GT\Pbh9JWb/SEY8)GUd_K&4.Wutfh6Z@')FCOMc-9]62@Zt/T2.ocHb-k.6Ihc_Href//R;#Hk7"i6/Xc:$"jDASOmZX4"(N`>"$)"nG@/Nief5rJ#Z<b)Y+Li-d3QtCRJm#P"6Yh+/6hU5f+(N7CH7i1CYi1.lS_keqZbj4>=$O7!)DYq]6-n&i@Z;9%0([eGJ?ne)er$V.RgCD9=oLN3UhJJ]9#>KM].Hfb]R_hgCUh?`7k.CiU4tUq#5LP]X%P9B[<iB(UJQMcH-rAI9SJm2[c#K`Zs<W@KshKEX$Og-#>So;7<BHR6>,+^_P#h-LG$OCr%(]VQH<=M(D^ji60BY]o]P)7b+f<Col9qF`,"^]bTT:!8qD%Z!6tp'(-BAc6+GEo?Ff!2D0A?Z%lVkY7Gel;X8e^;I8AWm#@3W`XTM)C1k>D5r#*gS9OmV_VhHbOq>)K`7k.H-i1L*UPrq75KNkZZGQ:@)B4`1`LXC(M-WcCVcV[EQ;[05C0NIZ2[c#K`Zs<W@KshKEX$Og`VDNHotZ4O-T:V`daGY#7.A1N>PUPF@gQ^V`P0t.!Oqf(O>?lePPN49h:#$,9B\Bg<4c''9='"is7O_DXmDLu;pmq"8`P=)nr8i]Ue8$&)3eK(5:'>*PZMUQ*]!X/Ec(fFkrJoHbM@5W7n:1'X/@gSc,+rjJoGU#B)Q<BK5Wm#4Y12Q$mfO/B2HI;1PFDcJ:@Ibn;;p0NH6<AQH4*cqaIns[c!./LHk"O]p6"7krPDeS,iW&L7A8^&:2W@m;VgN%3JP$TBfB)i*l6JTKK()87Qp:34C4+g0Eo_WQJ5a$%o8_4B^UC"5Sq'mGG&<:W^;VlaAeQ2[e4\B-:h0B*bbc2Js\#0CN2'H^A8ZlZR37>O_W>C-=Rur3^%h`lf.1OgK'&[>R+b>WWY(96Sp")#N$n_;B%i]48r#!5MOS)3=lmk7#+nrcFb'N^$;Y=juhI"8Q;L;#Orf,(uF%A@g-'F",,L%e/;BX5JCd<_mMpGI>O75O(,=Dkq=>GP>J=/.Hdp75id6L]:uF3og_1%-.g?f$9,!QfQ>:="%utkJo78H?Al:j1%MI6?+aOm;@s[cS,"r4J(M]^P_IreLnf4^pjIn3<K8+"??Q>+C."FG=Qt$CZRX31EuLD!2"/tnB7dZ+[6e[$BQR6rPMOiL3ZuiYKb%_]q+Ii^!A+0`so%hFak4,d&!U'^9MOqk!b8H)=p1kFIg/)`bf_jD\fKCc9TZ?c4FIPI-"%DK=\du\6I!chd,*&hG$*/dFsK>IH1*i&^T*`%);c2r!:'ocCQdr4^PNol#Xrcm+-.Cim-+,lB3q'J>\Jb+9U&W1]3PBs44952^7J6XNgnaG'+/l[\Tr^(OMIV-se<Gn84;nqV),^k6Q`j>FbV\L$SNR,Mg7H#0'J[#''noCcTDZs%!te[#\sf1WNjh/U/L2:p=iVUr!Z)Dc!o8O3T>;+'>K`1ge5LmNrX_V-_&JmaP<srOH9R:E3P<U3IjSe<gioR*W2pMci!p\BZ?[!s!S!DsZ%<]nF"n2eN[<GBYhBmFuRDogJ>Nqn$OpQLrbj,&,jHc0IP)E'n[&n`SkZ,=B+,7/#7Ka8T]03kk,TpTU$90pJ2ZS3[HccLBR1C]&eYkM*7]<ktXWIeuGV:MAFgp6VDkWlN@S.C<qls4bkC>$lX:g7^sA8!u"El.9-R0RQ\MhiNu\Y=n#;roJHXhb"OU/u`$R[+uX<"ZZYb314^Oeig^"]4<$s&AO`mMI61(s)+YX9DZp`Poo(:j["/af=#4_2A\S(pPrP3Zq$U@N8jr=Q+ps"^Bu?t[.h2ZJJYc6RD2n7%QOVO"$&a4[I^TZ*F?24%HBDKq-d,"Y+H\<V[b3OpGW?&I^JhAiD1CAJM^K<@Zp9PT>$?Shm\58rjQ\!i:*?4jAfs>Z6AO8:2\pa<l?)H52BHAo?2REDHo69V/GZm``kS"FSh,[Y)toh9!4bFR4tMQhu,+I)$%Gsa;FsX:-d)ic9T[:Y1d%$Gq%g6W$05+D<=V9l$$IOZ1o'R&J7<pk"TU(1>$ftJo$uoUL,sC&&)sG@Nj[AGBpK._!SfMj9u%HAA5<Qp[f'ui,Q>Ca]fiSaVi/;PVD8/ig8s;gXa]P>bP\i11-W\40.AVNd$,g[Wo'/e))5;itl^Tm4F21H/Mg&$L<!jT%r,'A$^\9a`HY&(<mo.HcoZ7"p"-,EWuMo'9G#31QXD'XEKn2mFj\#J):ad.f4,UP;C6dCXn4\2R)AYfEHGbB2j?X,&YB:Z0g:&/9lY.p"IK-`Hu]EZ0?lins!n\p%duL)UqU0:)a"-^rYN%lO!+9(J5e1jf/FUlVn`d])QCj2p&DS%<;XQn.]mI!.Y`E1QXCP/S>%`!#\/L!!$s>2qF/Q%-.fs!5OJ^!<D$\DQG/+)9<Zq!.YeE!s$+CgfR441QXBm!!"Ni"os/e\?V>FB-:ge!!$'\$ig8TE+:Ikc9TYT!!'+A)#sY3i5Sr`S:R12!!$,`1B7EF^l>`I3<M8D!!'5IB)hokJK&ArEX$Og!!$Cqc2[i`!]S\nj:()X!!'flS,iWJ"E(:eaVi/;!!%Na3<K8s$/AWUOu&1U!!!!LEWuMo'=b<5,\J64!!!""j9u"g-ZEQI8^9TH!!!##a;FsX:>j,qP+7)n!<<+%OYZt;SA:,l,WPre!rr>*,%glU3.W#a8TG#U"onX27Etl5DuquLP2m&4$ig:CMOX\Ihumr!--7%G)#sYe'fc?r^^8du99M)m1B7CT.rkgoJ.oGtQ6^)cB)ho3<oaYh!%2_q/P45Qc2[hEXN27Z!)DIl>*>D,S,iTi=P\H'D)-;7E[j]Y$kiX!=Y^E-?mJ+&p0f[]a;N&:!!%OLY$<ttm(Se4?2Gl\!8q!8%*;m&6^%.O0jVj<a;FsXJ5rQ]Kk9UG>5*^D8L=GQZXao9_+9;+mDEDEO>DtS!!!#"[ZB%,Z$Z$9]%SO"!!(?.@7USI)3V?;Ms3RR5gB?0!3@N+kq?Oj<;R<^-^ar7c]V^-"sY"KZk&)Z6I%jA!!!##')+#@Yri!!GA*UZ!WY>UL*7FnA4Y-4/>`e8"$$G`!!l,$U1+#E`nKUD!!!Om!Q^6:BD@IVJXc`@!8(,G:,Jqm^\4WR!5O4t!-7*k'>KYcO>?k:!#n./NDk&1jH'QG5a\O').XSI_+=HRQsSh^j9u"g^lCIOTk)P4IlS7?IEi-!n-BnRAE\$t_$n)@1QXBm!.^`B="2%H-NF/*Ui%t3"-E4B0Or0Aa;FsX5S/d!Qe[&eD).-4H*NP+R3qtWgQUSc"s"S->^)YD"$$HD!rr<,DX%'RC+(HE!!$OY'f*iS6]^s"0>kjKa;FsX5al<`I@(qtUY;'m=q(I^9IGIN3aG&f)0E4rI(+]tJXc`@!/+hGr%[I>MNUEsj:2k(J4q6+MRr;P$oG+NP!L7(+D1ZS!$Oti]0op?;O/Z;mO)iO!8Jb98n:1a,Dusbm_'s")*%dZ!rr<lQO.0ukK9&W%IX&\]d'P*M8eN@-EVXS>!dF.W;lo$+iAsA(,BFA^`gUN$mKFCO^Z5*\$-9sS:R12!!&hHO&t@P6<L6Ui<U27()@[O>?GDaOT@n*(%"@m-;p=&c9TYT!!"bsEUOO.+1?U1^.]5^jiX8Li5!4H_SX/&E04Qq"q);(ADiR.,C>q,@APlJS:R12!!".7fi*Y&c'/2"VuQPYj<j77"5lo'<mF4\5gB?0!+>!0[6kH=aD:a<gf$AjB^Zl?Dka[\5&pjJ"onW'4*09K5F@!h)?AtiD<60+%-.fs!!!&Q*R*I36Q45qXjPu1^rr[YS<'1kS,iTi+J?8D?a0tV]R37;h:e.&Dj[N;)h;Qu><*cc"$$G`!.`UZCPN8RT.`a\+Nr6I4Ej=`>g.TKnEO#rC@;Je=k$Kt8'XBF!!!",2/h3)i$!_(J,]&3]QQh5rAms.[`>PCTtN742c3d>+#sE`!rr=OTE"f^@).C4DSQ-.0-AV]@)on!L0(E\7XKUbDka[\5&pjJ"onW'5P(e61kuD3gn!X(^)c9i)HFsEqc*GWs7oI1;h+YmIp=uIXhDX2@3!M,+Urrke5jjbc9TYT!!$DMj4^1n"n,BrQTK9OS1pi?^V8L<BBrguhqBq<8;#5`DL/<q)roS*ISoL>pGiZ+#;^<i"/$76Q1L+oO>?k:!1:G]lSY*>jNR/G;8]"%iTabBi83[CWB!>AdHp3iCHJq>+qO\9J,]8lkq1W$S^eY.rPQG[*7=iN6>bh3j:()X!!!"R)qPRb-sl-!!BpGPq(D:!.VG\[,LWcD9#@UZ/a?sFX#*ohB&JaT5Sn/ck9FU^B)ho30O-a[oAumTf#Q>>*$;.d52`J:**W%$GDESM53i>6R"7UC!%k.OS<'1kS,iTi+AK[nL@!1Q?j7*T!48E-E^"LJEWuLDJ2HYO>p,?!RaoPpmn*:3XBRPQc61<=oeX""'(?BG/*A-i+D1ZS!(bT<D'$q>Jfi40QKhJmC@<P.*Rn-88'XBF!!!"\VZ#6bb%.A=<R2E0NU'YA1M>X-"sBG7XdkHBJXc`@!$G#+gV&t1Qk*f=mC&MarK$ug?2f2k?iOSad$mOO!4l!23?L6`3<K6]5ap]A^[&]L"O%*,r7?GskHdsl?bLQ5r;>b'($14lElH:Y1i2'b+Up[r:g5q%3<M8D!!#9Qe6ho4F`2td3u8b@_fJV_^Nqe-*o+G?Y0%V]Rgng^XqY#:2=otT3.ULn[W4QP#''nJ!.ZmHgp+q93CD7b2?366ruCT=[kBt*2'2ZYB;f3U\TQ0HWg-3"j#]3Ef%t6dgS;2t5&pjJ"onXR1oW_-9/Wib-fL2NY\NAph7l.gh='la3J4Vc_p"61qe5FYOR5nL3?L6`3<K6]5ai2M>3r5Y_9VJNWB!>j!'(.3n=[415&uBsDD)A*$O[=M$O[=M$O[?#(D_#qEX!9p()@Z$()@Z$()@[ObZ`(*!!!!1`7DVWAJ/"W6=oOId;)J#*r-eUeZ>md-\,i,e%lMS!rr=OMl</>>_Pf(H_M<:"/$Yl*UJkD!!!#/89EY3l["hU,\J64!&UIJK,nt:!!!!8M;G.NL5O]3U=\+d^%+0_X]\;D:B8_8VLon0"onW'(Q$gh6mbcBb#csH'>;I)!:?`L@#(6Q!!'f'@eLliB+Sig;fd[3j:$Pse9%o^c2[hEi$,G*3CE%OOkP/V(HDSj*Anl(O>?k:!4^+YpnXB>6WnF6EX"cbC-'ujB)ho3E"S?kPU]mDHVa9;)]M;m!9cjG#<UuT!!!!OZMhR/2fj^/jg=bMYB?g)6^8RNB^Z8c=k%Pt6d>Z3!8o'U%j$p+<(V+bD<)+UB%1q,6d>Z3!8o%_<6e=OXS/7Lji\OAP;<3m:t*5j3<K6]J;`bRFBg.i---tF)$&Kkl!T::!<<,87<Y]$Ti;os4je'$[XI3FJ6p`IYX?\9!!(q$3tmcg'(p4cdb9&Bf6UfL:fD^:!7.C:K,nt:!!!!8fp-N.SDhWZ3C@@u#!a8F3nPTg!!!"<O^3`\jp]4%Pg\D%^".*tbo*OD1B?-*e%lMS!rr=OMsO24O\+%ij:()XJ8WkYYX?\9!!(q$^7=0@P1k8W(HDSj*Anl(O>?k:!4^+A,:@%8<UAZWg3]RGqX+/YF+tUeHNJF-2')%F1B7CT^i_Ps1B>!`e%lMS!rr<$>\Cs7RlNh^EX"cNC-'ujB)ho3JEuuNL8s;CJ2Yo!YX?\9!!!#N+_Le^US`YaEWuLD!4^=/*V&2!J6p`IYX?\9!!!#Nq)rAhY.Z35B2R-o%QOUk!:Z"AhuBu<+aNR5d>ueVT-Hj$R>ho*TO=O,/LO5_PB-2_1g_kPAh73<Z;#[kQ(#orXA\H)Td-;l&nT;g?a>.X51O\pa>"L7hlp=+>ghl"A]dTNkmNfW8*#G]oITQ&WeY^81_0%%`d8^u3FB=#9mNO#P@bnbHI]0^T7$HEO/RNUXCgk28'bF4f6bWf[J//5^A_2Gr@0ah1B>"cJ(iVg!=)N[%<;XQ!0HU84aQCuQEBPShuXE'S?[%$>neCbnu-PlF5ND+mc=m"CVDAaane=KB=Km=^/^YHf_%sWc6/p$dR/;aDuYA)^AZ1-_ok:B3cWkYog,^?hOWNtMTGF[@HYn*TcuK!TTArIXh>Zm+SFP5B)ho3fpe5Gl6(`mV92K#0gFphAT\--<5*-Wp,%/u\XK&$14#HJC,l%b\".k8W<TKYF^2C-:=[On#$I"gX[o_VWW8[+I'qJak1:M36U]:r"fs^O_T<0-DV\m4@XUq6(9OBlFN3buET4=.YF'))J8P5*>8SBBXd3gj(Zrf$F4R'#5sE)@e)mZI]^Y;a)g<@m>N]3hAkJOZ7>f3ApcZ#:53_\-Ia5$%W%Ve^6I#RE6VReIj9u"g+PYXjn5usT-"QGk[U[p>Q2\=ts#"cj-rjhO3H'Ah3*AMHlo@^>"[#!nq8-2_LbShZD_U>_&b]j5=EB4ISa>)-Bk]AJ`+Zb@7a;R@N?-[ZFhC4ub#S0U3GErb33be6$Mcr=X@-p/Cl<+,QMsW<mQ<b[!9cjG#<UuT!!"-gPIgP2/j4e.:*AUHBctZ(Zu1*QdP^(T=c6>AaH9EF=LcTD=9Z$@kItWbr,I"-ULl*=TE!>a>h.YaMA0j[Z;$#Nfb7-%)6T>.REdsjN'+pI=t3USGpqd%n25k^B;h,mmfFU;C-'ujB)ho3fpbsTlB75"Q`gnUo'`n#ens(#bt6AZ?iGh,jOC#Al;.>O>[(T1bT:n`"7mHLFn^YqGGu]/@,0_&SDj#L^Work9RU12r!5$'_N]S+C=msgj:$Q/:t*5j3<K6]aMt#L*\qbpbW74RX'r^^6&:JY@aY)=dqjF.b4Xo!gA6L9k.9<W`.@UJ$&@RM=8mH9aO\%[NBWDp0I=g!*9L$J4?:<V?/uEEB%1q,6d>Z3!4&jc?[Ub>@oo(@FR%9:e$&b=hNs:QB6H].V'G^U4V^Td@ACj=AK'^BgUPh/p$<"Jj:#*`=(?K^I\Rghl@a1\#"+c!L'j3f)$"NPl!T::!<<+1@n,9;E;44Br&NV-g<6PX[B^!>:FIkn2l"#EDnbGF7.l@Ch/-E:Tk<]'8'bEq?C9t;6^g[;1I5'CO&6.&7"f_d"p6jfi#U<hYX?\9!!';ZUOLP)htN,A54kA]\@[Fl@"-%!G8k0=oH-3N3.&MV3Q#M0pqOQA#HF).:7`O'LDIn"iF$EG:c1o'"[EXKFKe-X!!!#)Z2!?lb=5NS<6emA4^l'[Au=`"SU3hS\91jagZ"D\s6aO3ob_+.7%i:>VYLO[1B:`H9a<c@$ig8M)nVC,-DV'"IaG<@jU>jp2ka@"SoE3P)2qdI<if1nV%)fQFo1t!GG2[8S,r*hC-'ujB)ho3g"<30rNfF`4qY8I*QYOK(#t@I%AeLBlTgnCqOKe.S=IF*hh:W7G@J_5Blhh3D8[A,JfOeu#[>TYH2#RR+d/>rd"e&"G/tO$!'p69C>@m+d-bZuV=A%I>>'[a1EfmaZ?c2<Hh6B`Q`o0US)tY-pU7<<YGJe7hq8YQaVc`2nEZ$ebG7ctIZXRehr\s%o^4Qf&FQ'^&ig&e%5f0mO>?k:JF"jK/l?0`o9ZWjhK%&'q5Wpk[;!7!jOC#A/R#VVo;[YiR[?7h2[WH,-XZZ6Z'MNBfb<q::<4<K\*>B"SkhR`D"!r?-S&0!.M"FNdd3`)YGSjbE9.L`;KIRB=o'`NJtSun*HD>a!0Fl3ja$>NfsiFrMq78j?+OW1rpIpOk.gB>^"g-Y6DJ-EO.ZI#GW^6,D:J7/+*k4iO^`WX#%J=J+4RA\/(ADgqt;+ViS0uVXG!)En.'1ofHFl-!!(^/Ne>B0'e^/]H5D=s$X[$USGD1AmX:[(QZ-3;H&)2EWU>*srL>og@*Xp8QbNL=qJrRXeJT%OP7)uoh4K2ko8#=P7$n`q3J2T5Xli2Z]RHXUi8Ns/O5P9k3<S1[e9%o^c2[hEZ9>1Fk:^2ENZ9HEWm%7Vo97I+<f+ZW/(`\UE)ZRiPuSFpk+l]h;u=9+bST12lMJ5_]sMP+ES\&_F\[Lh6.R8r.oNIYWmKj5r+b^XlYbbLM9O3^d_)c[fXUO'3]Osc/45*hocB+Q4_.cKgu^A>3PunY#!atZ3nPTg!!!"*+Jn^b*W&j.&9''rXSCSI*s=]25tF-kQ+4sM!\Op(CEBhNM"M;WU"%o<fb9d@1PE%NpZpVGpTWpJkFPPCI/0Pnb)LaYpmkTOhX/Q%>>fNsneK7a!,\\!@#(6Q!!%8!Pj0dMa7P2Q=0Y@T2&h[p\Rh9(ZPK\<q!*';^0KA_bK&@\:k:uo*'((NW:f/s&N^Yhm/i/Al>H4H'B.7TN6<tUW*D4$JI6l)HtDq0l[^-$DJuE)Z6t3n!RQan%X,o2!!!#W3kshdQ*p>hn18<8fHFl-!!%Q8O>?mj;:E>k3<K6]!*k;L!RQjq%X,o2!!!#W3a;<@1B<k@e%lMS!rr<$>\EBZ__RW2=+QkBd"[u!G/tO$!!(q<^ZQ#j[.a^m/8@5u+_LcT!.aBs1B?-+e%lMS!rr<$>_egMd#OP)G/tO$!!(q<>N<dB!6qJ,@#(6Q!!!#%'<Q;089+o")eqFd+_LcT!.aB'a!Jl=Z>=&?m6(J4Mjb-!a;FsX!8op!%"NNNFKe-Xzf-+c,[%jLN*HD>a!!'M=3<Pop2')%F1B7CT=Io?c?Rs^J4P?Q$O^c;[]VT_\8GQV<:nBGO9YU!rXh"t;_8,$5?2ieal`*]e\_au!>IBXY$^M!E]==Zc--MO:#.#,L<0+-<^/)F1ISc*HCEq96(b[^-If@M^1Zl/_e%WU""f4qR*'((NW:f/s&UTP.[!#caZto-.V4%85Dl`gF*\gieeS3Aijl/5Xq#s4U,A.!5US`YaEWuLD!'_EH*[kC#Z<dD]:Mnahhl+[^]Ct]kSpO$MDqhP_R4l:`Xt;[en_UqSe8(nW[(!JH\KP"F/QAOuNe>C%,FP,Z8Dda"H"?>)o@UI#k(Q)K5QB=4&guiN1&I!dbSeQe1B?-*e%lMS!rr=Ofq'E9.o`[Ormou,?,mfjQ[QAdQ^BU>^AP/s-r1S&TV/iQ<s_.FaGTN.cWXC0rgha5Clr2Gn'.?*;RIDL-SP6P\GX7J6Um)u2U,I64alG'HI/*:a9u!D$nKoL1hk?0g2ua#jnG!!n_)O6>9#a!7H<Nk9?Z+7k';-cd%(Kb.djfkrC22*-dTFZ88X^#Od="fS=_U%.:5C<(C'@[C-'ujB)ho30O4DHVr#blQWZq7b#P4s')eE8r55^9orA`GT'XncP:qDbO7,&QXAG$go&.Y"Z$n>\9(`KhkL=A$,[d)t?[Ub>@omqjaN-*U@1q.]_9,ljPkdU'lJnr&[Hl=:RRth:D:\;'jH69S[\tu2q@=WrnbN^0ooh03YbJ"I*HD>a!!#C7ful6feWF"Wpig?)[@&j]^,3>YDa#D%0Wr2FC><@7`X+"G<2ruo7&_q''9\t01s@UH:lL;gQm7D\bSc?LYM-Y,Y0FrO2q0Ps"Wf)%FmibRooh03YbJ"I*HD>a!!%XKo$:[Wg9/]WUSg_K.T<TE[J)Ut;ib2_iR`Xu?OKtsWs^SZ'-\4*^Y\G?#]gs";^sOQB/oG7fBP>QhTti/nEj";[XHcd'/aRWI=BPI4\&9DXe2*aJ/'p^m#X"'!!!jp,86Ypm\Sj,[3(YWe>Q@pl0N!A60#fil50^?@[JhBW!jV&elp70<mDg@=4^c?*iA\\E-0C0s6.^tTc?&pTFEb!m#X"'!!!igs7#?mBlhfmV,b-flaFb9]KLq5aq1AChmi9.nXu"JW"UA6lS+^pDJ;5sGG[iAjUCE(PU/qefmE?jH9Vidk7"W0S09XMD[4(8RLXM^)#sX:bbUmQ13/=7"s>,_XqPps2L0`KhkT3EK@JTUirX@O8Fo+WUW-#gpuC0^j,]fa)d1R9[0J"aEX%d/e>h7Gq8-2NpaFYg6X7L#1R'5!!;)t^K,nt:!!!!`QbNL]K.T/(51\Lm9$;kYQ`gl93*7s>Fh^T@,O-faF7PtVc;:uY'D$&hY@LPV?o5r,!^P$2+:)^CfHFl-!!'6ElI*'TlXQM.1ed1;F$X*B>0WF_8,O;&,mKuIqtF%8]bL"WZR"'!/99gmBqtt`SWL>Ur4ATGCWhs4iVYY7gEW`UXlg*e>-sI=iPVe0lu_Y57EtmX%5f0mO>?k:!/0A(Q0V=E\*MO<SPi=YE`M/6%#VWMV/_nn'e/o`p!F$ee/^6&ZRr6pBlqjM'2H2(6Td@2TG]U-m#X"'!!%]?ndiL<g:X2r!sN6_o?tf,bm,C/<Vc"#/$Jl"MM1XTQKi"<[N2uOq;Q`99p@2-/hZCqh]$--cLB-7`=^eo3frl'2fj_Zj`Ptb!)V.\%QOUk!.]+hS,[nVk_R[K+pSU-mICe&g,5(l?@-Hc^p7/"gd/VYh5sT2dF-f>>o^.J[2K?!0<C#`@q6'umugg66ZcSm]m92Q4Cl=?[]!hGlk.cdq7>e9rpbJ>S=MHP,A.!uUS`YaEWuLD!6$psiN\]N:L1OIUnp+!_-0lXgj).*_f4\scd`=6lAh0Bl=QCJ%[cP@%-ef>5FIcm)#)VJrCm5!hu4=#UNRYA;65!Ko5P\ocP]?;1B@8Je%lMS!rr=O@K,iJ&ZPN1S?[%$h'!5*X\6n[n2LPn9nos9(#Sn-PPeK&[,C\!=m_<5@j4h>JCu0ITD=q;Asno?>kpMt\MnH@<L\3b[CLP\L?_ci#7>A)He<98j9u$iW9I]FS,iTi^i95LQ]7HA<9<h\q+Ido!6?C']KK8#$IX;H$,nkJigCSe"Y%dJSLIaMlWCPaXajQmPt]F?5/-l!]2%0+;QjB:AP[n85IpFb0=%itUP=^IF7K)9^\*dH!3i2pK,nt:!!!#*2)0H8'J$?K.e:LKK8.)6iMI-pmZRS[*<',u;J"?V4ehe$o&Yq`Q`G`De2%#of`Bts?2d^/Yq+ch0kV'pO.CR'INrQpqp%=M%N)c5+o/H[s1XX7N9iNK9Vi<c#S$BB.3+m7*;J`0c;97c!RQRi%X,o2!!!#sCl;)(pfR+nRjCRbSG`['[pHUB;3uQ-k:&g>,mJ0qeF,]/Ls4*]`(-G+mEht:\i.\?3C>fdh\3fcW9I]FS,iTi_!9qP)cGTY5A40L)R\'$"nLP@lI6n1B)J?eo0Me6EU(u[##1OXqmm6+SG;Gd]4U?R'LB$\9[=TZUn/[51Efm>f4iSkpRQTXgaFQ5%,8lA!8XU<@#(6Q!!!#%UN2*Pj:$Q&e9%o^c2[hE!7rB,!48MuK,nt:!!!#/cLun2a;FukW9I]FS,iTi!3YA*)+p7Gh@m]2W9I]FS,iTi!3S]7!,+ks#<UuT!!!"<SK4[i6O@c;5Ta`%fHFl-!!$u#b<PnSPGm5R]1mWJoHIoJ[%jLN*HD>a!!!fYB2HYe!:?`L@#(6Q!!'f?Qq)uRLQ:99)+p1Ah@m]2fGD@63<K6]J@dLr\jF[B2urh"fHFl-!!$sSk##4$)#snL?N`IO$ig8-m_V(YlqGYA*[YM"oO2)046-eM!!)H(4R*86"5j1GMdV=1!<<,8?'n-=SI*E;3C@NJ4TR['I1bh-1B7CT\-qo,.n7f\P+2R"L4'[#O>?k:!4WF.W%6p;J-3#/JfSk9!!!"C@30QFS,mR/p-l2Qc2[hEi%E6K`3.U[Tf>%7TF^oDfHFl-!!$sSk##2tjpWWY)$%A&(VpSA!rr=O].f9Y]+1b$$meM[mg7oTm#,8,S,iTi^g3<t>p3h\*.WGLm#X"'!!'M:o;F2#%"JGa07k3b"onW'G@;P8Kq&0_!;8jcj0bC#Jq\o4KnY57KnY57Kn[K%$TS;L!t,JE$O[=M$O[=M$O]U>/`[?!g"qrH:&k7o\.nNPZ!m*Iq%/EG<()(/!7,+]jF$"sj9u"g!23daP=!Op2urh"k9FU^B)ho3#R0gf'QODn!SA2K+#sE`!rr<d.%&>VO>?kH^qRnca;N&:!!!!c_0dTkB$RV(2.n>=]dJ>CYqL,]EX$Og!!%OG0V8prj)3ufKuk24IFo>r+#sE`!rr<d.%&>V(car<EX"cJp-m7sc9TYT!!!Q;jteII%"JGa0606s#''nJ!.[m"T1L2=!$$N;On4\kO>?k:!/,t"9F<c^huN,%S<'1kS,iTi+;E%4;JtV*)p&rt^"=,]+#sE`!rr<d.%&>::&@o8:e5q/!7,+]jF$"sj9u"g!23daPOa(G:oGd&"/$,#,3L1`+D1ZS!!ic"R1sZG^]E((3?L6`3<K6]5U`#GUl[A4%`#g"q8aGp)#sX:6G\$rKq&0_!;8k,8'XBF!!!!1$Ka,nj:$P@YV1#\EX$Og!!%OG0V8rHpM[X21DG+2HVXXf@UJ2Dj:()X!!!"m?p9eFHd;+'3<Pobq]b2JB-:ge!!!9.o9g;5#/C8l(HEQt"$$G`!'hs"c_QXY!"QfYaSEmpa;FsX!(+ML-A@rjDufT#c:?/Fc2[hE&.7PU.HCnf"0aG!5&pjJ"sA_%Z)\(h*71X0US>_ck58H/gMXbXJq\o4Kn[KXO^UQ\$Q1^1i/lnb"qg5)=f0pn^KJ#;_86A`pB9t:[DUDK%0WAR8)t*>%"R$iEsXTdP_ijOVl)'s/1`@*DNUV\"r%qUZk%#AAP6d`:lq1Jcq!J0[!)U<W8A1I"$$HkO9o@@^ZAF%g:Qq<C"fiKi5pC[DAi?1Z+89FQH!03"opnR1/,bs+[^tm*&;o_+JM==)-19ed6>?W$??>94)-;/,A/-3!">o;=-]gg:46Cu4^*$Y]E-`aX8i6%PG(AK'K*2;&<dRKU`a:M[%k'M5&pjJ#!a%jA%]DN6G[.,8JhF-R7N&I)-e@`0AmtjNV4Oa<ff*;g/2'7+#sE`"!Cnj5>lo&Rs(mRaUnN'9IGIN$o)LuO[2M7^mAKj%"NNN<mF4\5gB@gT.sZ#7Cs(HVgT`r!6E/jTMZqoH]MpoEa[)8S=pKS"/$+2Q1L+oO>F]4<lM4>Vb7RV!!'l$71D$E\F`r6>CANL"58)'GS[]Po8thj1Vi&#Kcce-XJ^L/#lsH#FTR7*5hZIZ$rAt%"69l@51EWY8'XBF!&#9NEe(aj,M-H+!/-=?3pO#4DS4XK3<Pop[?^?G1QXE.ZOWU#aSE<8o$-7`&cdG9PG(JN+;ooE0[`--V@,BdTH1G*o8thj1Vg?H_$lSM/ZX<.#lsH;)1^Le8Aj#2j:$QNe5jjbc9TYTcRN,2-jMO.!-D(n1rs(#I6^IB?dA-`3<Po`[?^?G1QXE.Ro[M2P4.I;H1P^AB*&&q984T-N8/R9M6.#lVWJ<]C[VSf=k$Kt8'XBF!,ka_9lQR.!.[Q(`Y7c$FWrk(B=OS(!RQVUb5'*ra;No1NLDehn)WEKIC2j+!<A];_iP9r1*gQU(.1U;!,+l>ja?+tj:(N)F`E/(>K1EMA-)`n984VA?(un?!RQk\b5'*ra;No1lAh/P*h03YOpM-X//a0d;X\M&I96n`oHA5Z5Vm.*k9FU^B7MqsG5H.ISW#bA<;RpS!8q!8%*;m&6^%.O0m(."Tcc>tTFJ;oo8thj1VfL0G>e;H'*-s1Y+$Y)+,VCX!;(<fI`$fZ)9<]R:#l]_!%2aA*%<3lB.-T\JG,Q7T&mQ^L'NhsO>F\Aa;FsX:>i]D&ig&eSa5tg*^n:=c2_c,B)hokJa;Ghj:$Q^Y1ml>&30hQ"2'J\!<D$\Y+$ZT,`je^R^m=NiBcN5j:(N)EWuMo'=_q?jNAD^+D1\]ESZ)]K?+qO);n6M$ig8TE8;K_-6\,6!RT#4q[F&[B-:i;2j#lr!1^iIF/2oFcB)C[:B8^]h1!7oa;N&:i(`8@!!"Bch&K#J%/J!_!.A+]hs_b/#''om'0--p^^47)7j;RGZub&P_h6#Ja;No1j9u"g-ZIl].J@^qc>Z!."/(Y>p)>&@c9TYTD^&fo!'#Pqk"+PAJ9J*MDg2gR"$$IrM4=SHhup3P,EXb^g:;+9iBcN5j:(N)EWuMo'=_q?'RMet2.sEpHVXXfEnu2^K?+qO);n6M$ig8TE8;LJ>ADH&+#sFrO6cKY*^n:=c2_c,B)hokJa;Ghj:$Q^Y1ml>&30hQ"2'J\!<D$\Y+$YQ92*SJ$BR%Dg:2%8iBcN5j:(N)EWuMo'=_q?7*YdGkIUVH#E^g(1VfL$)#sY3i4:o]3<PqFlh28=7*\'C!,j&o!!#!0lfLam'"<uZ!.)1n^YqK>%-.id-?9:jJ.oG1NjLr,B?4-sTD"iVT&mQ^L'NhsO>F\Aa;FsX:>i]D&ig&eSa5tg*^n:=c2_c,B)hokJa;GhgQ//m%/J!_!,YuMhs_b/#''om'0--p^^47)7j;RGZub&P_h6#Ja;No1j9u"g-ZIl]M4=Unc?9!n%jGX/B7Mq'1B7EF^ia]DEX"cjfBkLZLn'$d!T$5i!!$s>f?KG$*8-pP1Z[*C'>UqZ\)6ZtEX$OgGS<(>!5JnG2b2SAoOcC1Q^e*'a*%7g%jGY*Hd8kqe@qAoCI[+5o)+U4XD8b>A"<8]VfTpLUct+<h:`s]E$W?e3HXuQ`7Yfn[X,#OOU'DDjTkTgGu1(>k8'19^^6a]0CA=>Rh5<nh$172lMdkJ0n7i_kN]FQ?D)7$oqq;4r3&42:MKa"VJR/k:]@s5QZuoScF6/gaTkCY?5VG/CAl5D\T>iHaFE=7Qf!'hmtLgC=Z8jn,/0T+5&pim)qXI94@oF2a;N&:XD9%n0Y@"J+mJ"6&T>@G.sEVXha4"\%o/WPiV96ZiRoFJVV7r7n@3Ti$gP3H,fDiGQKAUFc7F9bF:VB7#@%TMcM-nZB=E9Z?MHa]od:P>f!2CM+iKloqV9L21LDi1''k:nZdM>?D]_g*2cKT=+$+EH5WdTb2`sY0NlW*Z)6@TuB/$s:S0@FXiN?$`6MXnL4/h&=*%qmbolf&eQghNHLSgE?<[,IF<S$7?;TQ?8eKgACFFE\9%B&(mk=657Id)c/ohk0!9$X[&PP8B%+8+N8r$BEbaKs;a94e6-WNW/lJNe2:%"NN(gM_=uqAk\S\2S%k\p/>mk%0J%]Gj]%/oB-C(G&g1r/>W=br3RY:hq:gY]D<T6h9@!"(*'^bj\8l0E'25G7K!?02J.KROk*,)cO`nVbtMjDYc><4KGq^]pJHW,s6)A`]*JDP?YbYq$Z:)3i1`PPp:mJ[s^SDoO7'`9DT(_B`%s[W*J:_kIe1uf\DkD)ZPGc3<LWmANi"[aPWVPa2@NEa;_fRqo*pQh\CI_0_,)R7XNgSYtJD(_8uJ:$X]Mj:tD;2OuC`dq\K6g+_Le:I]hFDGRulfgN/,-N9[otWT'E@Db@?!3CB7-A-R(/om>7)/ll)f]O$eJH^"2+gMDi':pr\neOG"D8VkLR/L"hX'+CN4]_X*YW>DO+qs^'o48sf*q,KAR2lsMEEMg.g]^6@R/mhScOWP@Z9aO2-U<bK@A'ki41^GC?GlPjdl4#6Hfp3r]hiWt'25o?4WijYf0QUO5YiFr-e=>K(m6(J4bB<[k%jGX/B.tQC8Fr$=DpE=]C@[H`K8nc?ETi5/_@II<IIH!ljljg]Z[.PN);kW\LHMQMMJ[Z([e]:Ln97-4q56](2QHNpLJ3Y65$T+S+j3O=UU%I@><[=Nd%nC)f8E0UB6\RmMlPl%q<sc\@8+HplB7;BWFo"cRPuAeT/kiMFnNVsUmjB^^#TTP5-EXYGRuk;3J/206^jWXH?4gnB+?h7hFP=<Wde"=jl:M9'0\G+Z<[jgZ=Aq*7mG2NX#,no5e@K'hL2Im?1h4a5IOY5<[.3]hq,HR\TgZ,EuF&<M(;*gI^u6HdL'cQkLF<N7J3?A^Qr(g?"18Uo-GnkFD\PXj$d,FafINaX6ij1e9h/g*Ifdr@1bV7OKE<LWP3*r5M073@ag`6Xa2m+c/]-*?gZ_RGb"*b"^fQ:O.66t`c_.f%jGX/B.tQC8Fr$=DpGT[^m7l09<-UX4m22T/PfVGmPh):C>#muMhFk9Aa'tm1I+%$VB[03mJGM?C1IP"YiV)Cq@)[<Q2!N<ms8J@i2Ap_*5?m2q@!:4*UA1Ld2_ban*ZcPX@sefLZ-^S&+X&h>B&/3o>nM-"^1A`8C]q:iLktKq9H@iR6/H^8UVu#59c>^@EJLm8lg=1[2_6(?]]IL2:$Kc(hkY,df)ska18?Z+D1\]F5;;_K?+qO)9f0B_spC?Q>TgQ[dt0t6A9XE\>*60C'-p8fR@@8^bnXl/sWqMK=io6b40[W0<G1UI<je""n$0SZH8UOZ]d!_om;sMQS*\IQ`F4`]iO!mBrf9$cCT:Em(lN,<8MiHRWkP'7ocWk;;TJuM7iN&E?fZSm0mP8o2a.RojfS\V7CX0C>>QR3t%pa<$B.>6d27f:;&^=W)H&a/)(o:,rl(?Ap3fNq$Z;Ln"E_W;X\7+%9(l><bmL^4]B-724-acLd7:X=L@hk/\<sA=K>,H_YGO.pf`dR$;\qiI>IZHO^?;boVT:)nR1jViU'Vi<O4g^jIX*UNDMh7$n"/&-?<D*5gB@CkIUVH#E^g(1RS""$rS</BNdVEcm!&rLpp]q-3iV&@F<dtYDaK><;gS%]?$Z[f?6')/R?)4^itW+bmGfA*,g6M_spC?-I/&f^0cM8OZko#6Bkd;*kW#G<?aZ[[d"XsCDdK)Rt0,'[H(ol4fm2@b*qC:9B)lCI^rs!bu3huN($B&fW&TE.;MCAT*og/KK2NkM]2MbX\phC<rR8\GM\#KCkZs_!CHr(.HJ^Dj6;\3et62\IaIL/L7qOn6"QKT.@>$$)Z7Y]+:Qb$0l0d`>=Zs=B]lu*L'O^8&NKqRK4<+D](bT0g]>6/H$RWWIWo0Vk6sMFl/<F6aO58t?fN%.a]FKuQoR?3mTaI$aIdc%.e2;&CPRsX3]:Ba952,qk`7U)OT&%G4Y_1'jE#RAT!,lL\t!3jeeQ2I+CCW-C3]aFCS+qMbG:A'ho"S^)YAKhUYdp>NMXH)[?_l$C:=hfW57rm;O&:qo8\pK9jL!;\.5>1C(cr(1JCsKHM<!X<[>mC58[kTcu"=%7`L^.Qi/%@:69=TB;LT&/?dM$9n:9`Y@@:i8/\ilBkIQ/"/(qFp)>'KIRiH-j:$o+B2D6p+qG05F4d)E];6Pbnq5Hb7X@n@=Q/q"esY,tc5G-[ZX8dLa*,R'M<>Ap?9W/lY-g`/.IbUF3/jFkHIkYKPHPs-lWLl<dA%-m2:a#@Hi2;H^CHab+H71b0`U&Khg#tZI@dh=^_V3>UOcD7;Tns>@9(PKpD(2629;%Ef>(GmWf<9]lo;TTq4Z.371`Ud1WVU=p$-)^WFc>,?J;<Dn>qTk05AnBTj8,q[ldp0BTNl.XAQm&KnIAsqu;_ubCeS@+qttk^Y?'+mt.\Q'[8j$G.dXM9["@U$70?;qWX.QrE?455qW4Qm;nU1gB>'?-4gCHWu0t*d]JVAb0=3dhKuX("Rmtom5I-urJnr:a;G],S=rEC)I)2[qmDP)I,+@67N9+c7Jc*Sh4F%H=-^fINesjs]8_0\FtKN$\$el>GkAu60;pdQhg>+WFc4Ji*r%_O33Ar^PBqS>pK6#i]q$iu]Fd"0I=6oWDso2qhnfm?p`5qLs!nTu5t",lj:$L.PYDX.>DgY!hFmb<&tZN-f\@tL,)q(T3HOBI1T]X-6dsRg&o3Zn]s27,nMg2ue?!':mR_S;o8=O29CRla'XI:rhg&7nbooa++]"PF9-HOGgbO'4aq<kql%<&)]Z<Gg3CAT]S&dj)+KN&U?6Ek\Zub&P_h7U4h;euIm8e63CL(l2I;E!Xg=930IY7KbCNFRY*q8q*7:%`[e6pfXZ:\Zoi>B0Z-([3R[YsT^i%BF=RnnE6nA0KPS'-<CB=g$gis>HGbYP?u?"KP+nG:n7r'CU_X6*Y5.rpA5CDRjc`hNuX#E2nC*B=5oR_N?ATni(qU4>6Yj/m0orpBRA'?7f$-_d%6\Huc]W'UE,iqjs<Z)b/7o0j^$*hIA0.nhU:#%VYTWu&hp!:=%#hs_b/#''o(F3Y?XQ3SL[T%*/lD?9'@F3YmSZdeaNf5U6'_+)[t#9aTq2)nupDj\7`RVH!>EqsR/Z,Yg^f"Bb<?dJ#FX#FnOeF&=o\g6*tc5TOgI=6ot]Q0"S12X7"K/m#ToUN`;1<:!s^Z#!+O>B/*KtA_?kh7`]Oj\q)^44jk0m:gmSs\EnM-B31l?C*s<V3hu6RG$-c5Bq,+*EJh"dhZ39M$fkJ=HYnS*T>CEX"cjfBkLZLn'$d_9AE*q#0I7DTtIfL*/EL=M&WK_86@U1V9D/%%Hs-I&KH<&0"iA]4C>HOSlpjo&\n/rM),2BCIu36[kE9HrfaX,nlCs^b*PX)fD1PnFXdSG0TB6B<^7Z1.8rsAe@f!%*7:1="fXk!8=u$^YqK>%-.h/IeU5YA^*M]L*0(,]_CSXA7u;+/$k:#:Pq`"R4r]0bB>IrCH7i1CYi1.lS_keqZbj4$qn<TI.FpA\jD,cEX'%oWhZmN4^(U/A'Hrs1^e>PL5b3rdH?h018DSt6A?=t#%Vqhk"$@Zc2_P@])@?gWS\:J"$(uH[[b/^gXEdeh=+:uGP1Y?-d3P`Dd*1GqBa:K#l&F]Dmq%4QEOOWP`6E9f.@?>]c!#Un`]I$LD^nW%!W*$XJXiXqt(LlPIW*E;D3(`Z+5;mX9Te?>WLeE%Ro#lAl6<?h2Ht7jQ3[*NAkDS-"i>-Fa:6OC<$3!i%F;q(sW`_(@=;olfOethRg2i"Rmtom5I-urJnr:a;G]Tk7#oD%q6'i[-l;pW7ceVk2+5c+s0H+)_74l=;#S"1EbY?6[bQp@rt<=Y\_don:*CH]5+$F!bjFIZ*@3oZ6(@:0g?U"A4XCe6AEg4=I6>Oa_+cqs$EQhT<`'.OS00pYGLG@TWR%Jj@>e!mc>Uqdf(bOa/Q7OprC2Z;`VbOj:$Q&Y1ml>OSTu[1QXC@iQiB.lrZM#XsQr74jc5:_J^l#VF8HG*@AuM^G0UngWiSsH^h1u))<^TfU9+QEJqh+-Ni3c1d"_BZqi?+1^,n2_(K9&HT'-I@G/K][@:/Rre4CS<@5f31p,S,f95AY_pBk2<3rm\8h<1`4idul=_XWLbH&#MMW&R?X/KSXbSY@)5WdTb2`sY0NlW*Z)3hAe%)skEA=-[<]..;pB>.<^*BEP$g:HO%RH%@es7!hEn]*:'$eQc;lSH15r.X(tp%Fob")`%gCl.%SUJ;8nb%TJ279iGipqIQ$l@\fp,s4icrAD^g5"M+Ur%ILnW<X9iDtAe]`ql5<0P0Y;_/BP:(H(8,P]q<C>BXqlE;-/c[E9?d6KLpC*M&JXL,^PnOAA67lOeM#Kfgl&e2h1&g:n'c3*gU$$mTBbZub&P_h6J-Ln'$d5m^c@YUXg]%+(]\Oe'F3LKcppauB&I<d;a_p[#&$E9)CU^uH;mIWhMsNt)3"_TK@jAqk@2q>;J<6lIAk;_LP\-A;CL@8Pe,5.uV.XZeYP8j2&rLW;I*h/Fjr`<6ss9mO6r;:X=fIM5pLH*?thS,\@ugi:bu)PdT+1T[@a,[`F-hb-sqaS6S*n_(t7T3N5U[VYnaail>H-a"GO?B[QtF^<.A:u3D7S70P=G=kp.D8N5s",!]%3:]AhbH&""+5h.AWu&hp!:=%#hs_b/#''pSYiQ9K7TZd!>r?uAIEOuj&#OR"[N=(!Wbb8a)\%3Za@-ffk=>=?p9b41WlN:`-l\?]A%.0p+3-<R>5qWDL:t]Ul8>Q=eo4->3sLW`OEC#+pqI>Oj:'CKo@_*"H9\:@KFaD&\i=S"ON&r5pYAh-cTSh:Xrm'*m$:H(H[93=]9#=85/1(^qS'.U[0mjQ-I/^LYbHH1s1[MH]jL3;ktHW>>3HT.c<riAU/fOZG+0V8bHn2d2k,=2\?9-\B)o;[h1!7oa;N&:befZ%,[WalG<fN1m[c+RI#t"/g7kPM$5TRH]6^M*>HQ_h<]t-1MPK!%-rNsHiUH]uUEY.or-Gu(caq!4$6*E-q.pGFGq8%rf9siJcB*;=Y]8TSXQPkR_sQ;/SB)S@f;l5b2#^qW):ifnVb7(L>I]$CEA0b4-YfbH0gF-6ZMrq%(0qjt+iCXiGINJTF9s[70Rp+sjM/n+KEukY30?V_CYq1gFnNW>j1B6l%/8PR]dJ>C\Sf1@60&I8$t`qk),gH9is3-"j0DD&N'*eOj194Xp8Z0X7k$90hC/BqId:dGS0'ic:%O&_rH]t'SpDR&8-$Y(+.%B:\DKnZ`NC[pTrd&gdNfbXX#43I@)P]5#T6O])5,a]7qPb>=MZDC"(%[@ftlpm@0V#FaZY+Kn4`;*]]kNm5@aU!m6.h/dmAeVo]-GC:Gq'!/Bue>OI"=$qpkeNWu(K*jpZHr1B@9]DSP-rj:()XB&UrOU]@#@F1cL_JGdd#?]XE'>?)R?dH=)*%r?N/n?YSV+:Y2"RVKJtl/L)CI6&=t6/r`?=2hg*Y>T/%%@OqTg7o*!NVMP^[dt/&c6o'mYqp*,Q't^3\*2>Be)pUuU^saDR7Ia6FeIXj/CL"D`#apn0$@(uGgX"`]Y/"']4kH_H!+1?=@(44m3]P3_YD%FJ)Bd_[SJbb[.j%:kAI.+X,kMRq42.?.T\U1'7fiN9ee9D;"1.[_l#^@b,#iMXF37%-WYnl1Pi;/?<1-[<:+%b5>YX!6N/K"b9Q;O/BVg[$ufLc5gB@CkIUVH#E^g(1RNkPB1PTWS3RF,,AILi8=S"j8,F;5Y]f1Jj+rL6bG,LgIJUp\eBbFCZAj=h=LWXZq1s`Tn(sdUo75Sb-L#]B4gZgBqjA3!p9d[LiFUF"QO]MY>gD+bdejmnqGeE^bII=7\s>srbGKQSN(fJ=S70Sgn+@RLd>/\B0(Q)[\-%fIJ2aI2AbbFZ)+MmOB]lu*L'O^8&NKqRK+d=:5pTet5(D+qdcF+,R1d]LG%Xf+hn1M]CC:l&E5Yta,b@)6gtnc5iIYihY-G-Ba3j:8[r3.'-+S'Z)E[W:7;E\Cgtpu5\$S]X6I#RlLd&TGn#KeO+1L1;'I]L?jf-R<;+8.fj$gtQ):GoP3G4.>N>gkFPE4#W,98N1"a/T+hur>7)?)WoL647lg:;+9iBcaQ7*\'CTS,OB0OD/#c+@9XF=pY"S9jQC3UWhJX^Y90W21H!"M^Tqijlr?B2<?lZH7LumSg;@;5Qa^-X4i#3n(TYjM$gtO48ME4Zd3(i.-qYns/7Y2D(+VaNIQgWn"+-@,uk*8%-OGdZ&e3)uA`cY(`AHT!IV)U5:Bj[-H>S6tB/i(9Z,\qQO\[A]9?F%3Hk?WDkt3YtT>!_fH#llWtF_]5%:8Fi9+6=+6H*_V&uQ'^G"TV*eSO,%gn_F5;;_K@K@GS0>N,%"K@="os/e\8I>6-TO%s\GIoG4TR[gFo)UY,%i$2J2`TH!!&P)F`X@laa9i$s)[r7B^Z8c=g$LtGRuk;3<QpNS,iWJ"Kn4=OY[!k\Sf1@60&I8%.GTa"os/e\8I<pc2_P@])@?gOY`(T^miC_!!#dP\iCB`"/)4Np)>&@c9TYTD^&fo!'#Pqk"'hpO>?m*\Sf1@60&I8%.GTa"os/e\8I>fb8K^lB)o;Yh1!7oa;N&:i(`8@!!"Bch&Im3`89"6+cl>g!1r;`rItQ>1QXE.S&cHI!)DI`3KhN&nrPX-qRCFXiBcN5j:(N)EWuMo'=_q?7*YdGkIUVH#E^g(1VfL$)#sY3i4:o]3<PqFlh28=7*\'C!,j&o!!#!0lfL`X.HCnfB!0m,GRuk;3<QpNS,iWJ"Kn4=q/V5i+_Le^ESZ)]K?+qO);n6M$ig8TE8;K_/gZOJ!RT#4q[F&[B-:i;2j#lr!1^iIF/45`3Q%EfF/S`'!1r;`rItQ>1QXE.S&cHI!)DI`3>+=STUkEB)]hDm5gB@J,%glU3.^DX8E:20G-9S<GRuk;3<QpNS,iWJ"Kn4=m5p`)1ZT]l!46b%I`$fZ)9<]R:#l]_!%2aA*/U0dd*?e2%1aXq+D63`OYZt;SA98g,]X)S44ijY4G]MYS,qJ7c2[i`!nY\Zp7L+f*R:3'\+ZBnT&mQ^L'NhsO>F\Aa;FsX:>i]D&ig&eSa5tg*^n:=c2_c,B)hokJa;Ghj:$Q^Y1ml>&30hQ"2'J\!<D$\Y+$['5F%Znge#ckB]H]&L'NhsO>F\Aa;FsX:>i]D&ig&eSa5tg*^n:=c2_c,B)hokJa;Ghj:$Q^Y1ml>&30hQ"2'J\!<D$\Y+$['5IE^5B?6p_-\,j?DSP-rj:()Xn>=rX^J2G+dH?g1T4%d$4A1DP)2r)sdQT4:/j;.*a@4ASkX04KI,k^s%.L-aJ'0:uaUaHWeNV(X!-je<6S]M#OJI;,$lq>1TH1G*o8thj1VfK;(,%/padHAQC7f#<!'Eo/+W65L8CB[QL+`IIC<hp1S,pukg<064)9<]R9oYT#P4.JiaaLQm1'%BH-,YfQ7PZ6'*u746c2_NJD<60+%-.idVL]rsaEOq(a*QGeR/d65P$plc,8lZO%u[,+B)o<6[W4QP#''ome#M&#nt!EDD]\;09E9TUaY4umOUOh8LW.WZT8k:3!;*"oE^"LJEX$cS\jXH7GltG"1B@Is,Qj.o0$YRLUui)8bPaBe4TR['g<064)9<]R=mFLn8ro:g51Kc9G`W>!Xug>AKq&0_!,=%I,A/-3J7fldQ_<baaWV)nJ1sn,1WV6qK9>j.0jP9:S=27p,%gn_Tseu*EX$OgGaUUgTjY/'dH?g1T5t&64@05m)1((_0LH1-"5j1/<mF4\5gB@j.p&u\"?2nP!/-KGc%HKjg'>G&+D1\]UUG2,EX$OgGhf=O<O^e5Rs[H4%rA.ljp;%/p11[q5t?YNGMQlJ5gB@C7r@@8j:()X_"\f-eQ8!6!<A4X<6-2?$pE="^Pk2JnU[02QH5=iHVXXfU:,)+EX$Og5eK.,V#$B8m9#Eb2#mV3SI@.9F9u)\d*Y&HA_=gTj:$QNe5jjbc9TYTr4hsn"C@+gc5675cAViL%ZHA+i!ROm*eUa;+:uC2#XO:u&dH\_ZD`Q[&Wf+?#`Bf<A.<=)Y`9p>+;:K*XFhXM7FhSIDLfH(Sthp%9PJp$DKg673n<tpY5\DbhiAklWSH"*]'"94rO]*kF4+2=AN*GuDq0@0#o$D8mLpC,hZn\q_R,Ihpb>H!rVK?Ebb+b@bN^lK1p3t/VpD$^!4f.K^H-]mA>jW0r?pEU-$86sB8rH93r3^o6klM]0VN#59:02boU-,IoGJc4f2h.bB@(:A@1GHsMdcFGrR/F??-@/qgZDF1g](J:T5a0BkIIF`PR2\S)33Z9[n`!u-NGA99G:j?#ZF3[35Y;"-BW+&$.DL2IY;9*q@!q+CTI*l1[$V[ZhpB*0.[B1=`'EIV3Fkm#qAUp@6t:L9(]*b.f'Pb>o#*@GCqfZF/7-TcN#P&IJ_Q'ICRi$>D7c?=ArcAE)9.UV-6oe-Gj:*VMm3KK^#69G=aX'pW7c;rmYR_-Mj=L^rc^+qJOYLG)l24oGN/dh>QQ-\,>VtnqHhjXiEog-(nUI1F2D/:]79=Yftko)'BhXR6H$'I0Q?bHQTKDYh/ZQ]AqW/HNj$FCPKdl1I-&&14B!-q@#WsIdm-f`]#\a2.kX2kW9"@"`&k2kqbSHE\`(>%/LAt[6B#cVh\H@[kn)UY\$Fr4p+2#-e#!>T[*U;kh[\9[.IRhDV8[TB^A49G7R6:2+-Bq)'Ct#R6H$'I0Q?2qgNudb9fSW=5J<noK<<iB?cMtI0PL&:8UgZ6(\1V8t.aqA2S\^O%%qt+E>s@M7`6@+,:O%en*\VI8=6YaiX2>1[$Up<B8u1#IJ2#A9I]lB1:]R+D'+4M:6*fki?:NoGR9=J4eVsoD@CQm+W<1B@q0e%AWAAO>:U+`9B'CFE0-bq@*3/5U?n(r8>5Un>8.XWD0F%ed[s7hch4+edRDaB7T4,AGYp9oGN0*2sectUY\+JLRkpSaLWH"s8Bp3%U".2[2\uOl[<U*kW91ubF0Soq@!q+S4oP=K0BCAj:43@$\.RuN#FQnQ\i3.HV=.nkY4R&YFIQKh!j2;?9<5'YoDf,L5W7M./H+0BsM>AS3@$C-R[B@c_/Sa/>3<@HZ6OWQ[A=n8+$5R:Y^-ND>DdB*kQD/pubn%:B$M/DRt5E/]NGsIWYOL7c/&*:"B`0]Dq'gKbLic>F1Aa-SVdcAGYp9oGN0*FSN+rIr`k2IfJ@gLOFTp\4siU5C:tjL40$Smp._ml`h72I=CfO#81RlO>qXmLe^^B:S0qF!E_Zsc.V[RRr,]M)#.`L3ht3^!X>/P6fR_U+?DNN5(*W`#,"K+DETldr%g#*B(S4eqM7!riq+*23]WTlI0P*(TL["=4"^s>1G1d7qOR\8`0qihq@!q+S4oP=K0BCa,?p2c1(=*00/u,kScF2WRNZ\I$kSu"9V4M$4p0.V>OSdr)#1#"p\!`s!q[(?L;_pJbl*%V1G#ZS!7Am0o]\0q1B9SDm>fqSJUcrFVaTDUTT<22,jp4PI>4Sa?7PfC^qc+sl-j:lB)m6g]:HA<"97Gg:QE.:5Td7C8=VjG6mjA2VpD$^!;+A+T@c=9r97igO1lu,+0fEKS3@$C-R[B@c_/SaoZ2\W'>hOLn]VZ@mg7?2X;MYKcN)A7an4gRN9&<cPYt+&V3FkM%79;8kVFW`PYt+&V3FkXPs,:8j`^[ec\0(oFiO7)pB9\)egcORq5aO>kYLqI/00.7?sq)JMWchr[C=35qhDmHq4$P:h\2ZD=K<_8kJ(-KB37cu!MY^?'[^OnC2_EomiMUDqDZ][^*c/fYuXGd4p+2#-Rke9!7]k3q]6:MkCh=0MS:H'+0ej<S3@$C-RU@;cN)JO55QE9!pB>W^DVGqJ3IGEP.5.RnaGE>rU!KU7Geaq=E9QKq@#XVIHH(+Kto_BjDRHD';1CgX!CH4!MYdA'[^OnC2_6\LP3I22Z:#HHNNgOCR)j&1I-&&Os9`25jdt5\O/aBI.`.kU[JN98$#]'pWP9,obma0T)k[KP8)DW!,Cu/?^M`5kNLr%NkQl++0ej<S3@$C-RU@;cN)JOJR:N%"O<.M:63+:5Td738_c,:r/X9pL;/_^-SVdc,Xq>CJD**[91OZN3F^\KdJ!e-,M"?$HZi8Yi@Xm7&<E?WLcto;H_3Oha:L=dJ+`U#HNNgOCR)j&1I-&&Os9`25j]T_jeG3$9Kh[nk^*C'&SmZM4o6aX#)GrJ;FI,XW4bR51+`W(ptt:^!q[(?Q,NX3cgV]u#)G`D;FI,XW4f0#*?,(CO=q[rI8>AW@]bg'B7KTHMu!j#M7t>kYiI&uoGN2548c/"LVW``@7NfE';1CgX!CH4!MYdA'[^OnC@?sm-\T8qpe++Fh\2ZD=K<_8\OCq$^X6\EGiU,=oGN2547_%g+`Iqhio/;Z"R%)].Z)VeJEZ&>7J%IJg,o0+P=+8Up'Xfomg7?2XAoo-gohOe)?**t!MY^?'[^OnC@@N':(;c\s5slO^*c/fYuXGd4p+2#-Rke9!7]m*R=9GfS:(o/,l4)4IDf;8ER4U[^D?J[r[.K5^qc+s'[^OnC@Bf=cNo*nR0,VpI8>AW@]beQI0PL&:/XKP!N<]l:H^K:c9D+I*.:V55%:XW\E=\$)?*g3!TK6*'[^OnC@?i)c3f-/f=hJXh\2ZD=K<_8q;:Bl5\+nu,5M^5m7mW#fcb>.r65/fpB9\)egcORF._Epobekj3Csg2#,(ZbroUa7E;%pshroCgoFYl(`'+-is0nrQnCQ(^"9t0^Ukh2::j]+c3'RPkmX'@/qOR\8`*+I,q@!q+S>:s)"&O?BI;<F#S6bmE-i0D7IDf;8EV^(TSXcL34p+W.h`1A)&3-<;A$>*C!q[(?Q,LA?W6as7q@!prS>:s)"&O@%4TCQU30SOC1]![CIDf;8EA+u5W6as7q@!ppS>:s)"&O>#B$La7o8-cILqY6%+0ej<g^C=aISl`rYG1Il$nOD1&UakVp<L85M@_a/I<,)GHNNgOCR)j&1I-&&Os9`25jb+jam9Qu479aSoK<6OLp]k7oGJc43Csg2#,(\8^$P"q3'2M8;Y3*QqM;OOia,m>B6^aH"2lE3.AG,geDC"f?Q0&Zr5;B!h\2ZD=K<]BT)k[MP8)DW!,?H7Q.Lf,flk5-dJ!e-,M"?$Hh$e/r_oHJc2%h[NLZf#4p+W.(L?_$&3*m4^LQn!!W%V[9&fiuB6\Li4b8/1-Rke9!7]jOfA$o=B?T[cLqY6%+0ej<S3@$C-RU@;cN)JOA_5`T!b^:Hj.l&Lcpt0;&uX%UdE+t;kVE4HGPT#/*!0dEXgX5'-U8cY<_;*E7=Bnfq@!prS>:s)"&O>GIcn-N31FciFn@ftqM;OOio\"\W6[.iT)k[KP8)DW!,?HGGJ=pqB?]LB7,JZNO'&G.DZ1T)=O^t#'n&kc@*(utkVE4HGP+[SL;;JeZd#96$.)2D<>)4U!7An[MWchr[<M!iGD3gM4_D%aHNNgOCR)j&1I-&&Os9`25j_j,gRJg7)f@JZqOR\8`*+I,q@!q+S>:s)"&O@%rncEA39u'1j61gkoFYl(`%>*@B6]V("2lE3.AG,geD:XYr\+K#\f6Tg^*c/fYuXHOK&?Rt:ORsV]d`fL^qc+s'[^OnC@B0SIM;irmI`Ar^*c/fYuXGd4p+2#-Rke9!7]lMF+,)1k9K;o++6q85%:XW3.2!e:/4\TT)kn(>N\0]!b\WrXrDdbJ3IGEOuRjoLe^]C7%XLY^"\#2:^ERKf3194ScF2W=s\1b$kSu"Ukh2::j_*sdD(CN=_#^aU@/E88$#_=k8Zcm`ZR_B)1^GQo>a'%J[>1kCI[1pTT<3UUsD&Q\;W_2kVE4HGLueSKtpi.oeiK4$.)2D<RU%M6!VDP7J%IJg7.]liurAB?#B8uHNNgOCR+NP7hD"A8.g7ST_@M34>-i_b,_Z\I8>AW@]beWk6N2)q@#XVrU>ps6f<?"j]/)E$.)2D<RU%M!Mi;Z!N<[R4o07+SG.G>jlh$moFYl(oJoDAC!pVoC@B2-I3o*BHf"LJk^*C'&Sm[(3Ca'`dUrPpn,AqB*s-)OpUi0UScF2W=s\UB&O;fW)1^Ffi/&7;i4Sq/=,O^>5Td738Y:&,O=#A[T_9FQC-`,qGHLZ.k^*C'&Sm[(3ChTO`E.I8q[FX\a^u&J[@kd1pHAN2\f6[T2Lai$<kNSC")Tsqg&,2qZ-E&[j7#iT?_%#_]FV3VekcUZnuAaE^HV=hA&H&:s,B5Wr@;</D#;>HhX?k>r-R+HV.G)<NZTh2pR*aW<qOj%33m%scN)JI^]")l&30^Zc?D_7';1CgX/+'%U;lc)l,C(@B&@QSj43cnB:RF_j#c^Xj9$p9)E%u\4T#l1riK'UERJ_8b^6&F^S9%>G0KUsJ/\=,ZO9.Y]OQYFLqY6%+0ej<T6!D[4o*5>47>'fq^"Je]M",?>O^B3*d70qNE=SgQhJ\p[n26k*r_#_MiBlZ!tI?XaCD-W2"deW\(l0(^KYUOr864Sq]-c(k*>(Y7A#.tR-QO.2>5\o^BfCsr8576qOR\8`*+I8c4T_m`3^2`?h/iaFMs*@s*)Y'k.UE@p(MW[gO*ht:"NNt_sec6DE.L,a.I.XEVLm>>@l]5g@WkbYNK!TNGihco#/_T:He!qAX7UGp3jeQ2Xakn5!p9c[VtLgjNRp-UX&qihW$9g.Kn&S/[p-"4TV3Bes"TfIRD$hgPl0cr*Qqg-GL'8>cQsglesM*gc04E/@3RT)R%L\obi>t?Mj]aVLBig[p$3toGQ"g!,?H/K&;6s=n_64(O]'ZW0$Ztop.i#EV23?]_eCp[G5B6bZT40+n&&DG4]b^If%1JNPd[]hl=4I:q"[]gcG1\GJ7k3U5OGJ#4rd`g3`DPfDj@3J(q9VpB6!R=\hq6iJK^%GA"\Rq.E&OHN)Or[I6D:jF)Zn0<tJoS`d]Y>4_I`_\n27c?IZKGke6AUGpjWqekS%14.ZGl8,*Z!7]lS$\')sBBclX'7EXVW0$Zt[5Vt!Bl2_$OC.?eQfiX$iWC^7HKVu&%,8;^M35\>PG3t!6fZ/bos`0`p8@`qkVE2=!$ist7qYV&D#AO6k!.,f#2qePl`B6p<ldM@UA9Es]BD'3pM7/6/,B\<1B7CT,Ue/_6HdD$B('nVll5#H:"]356_=>NIl2+kcVL//ViRtorb1YagH>3-0,jkhCnK\`pH?+]H5gB2FSgRUd-#lNT>NS6B0`'i!9gE[No7-F%Vt2b>NRj\[sZ/3R%MY'obQ;@cSj);>jhN2eQ6("[IDeci\p]boAB=1dD+[>i.6^T-SPrdh4B_C5G>?#&H3pPhk=(rRm/4)q,9%1lna;']_A[DN]QU(Q/;DPls$U*h?J$BI(X_tI0QtjUsB#@oLQ\C>\r^K?Nt.#lji#`nkX=B>Sq[/jZ[\4D@as<U#j%`cN(nKh[36Q:kcou0"guUIinTb,DMXN\M?-Rg'QI,BmujgG?M<;\?1WP"_5LI$t;"qfjWKF!!%<jJ'fjt)<Y:'ZruEFauW[Ek&6Gs]PY3aVfBKqLE1[,oTm@_G0=a3s1@BYci:,L\)6_<B3o<O=7dA\\FNiIp6p$;ZbQF!r9O.l&r$QVSrM3rT9as]cf(2Y==BY-)fIY&grlj<PL'(6A;=H_!<D>Sr,oC/pZpu(^%C%P'6ar@Hu.h;f3*U@Tn<0(1\kg0_q*84mP97Njk%E02LC<bW3DK1qrZ_L5[5mZKui_\B`;\%r4QEr4kT\8[$K%%Ct#'eRC;Wtj798D6bbBnhLaW9G+\FFct<?i<pb=^4agW)l5T350-q,(o$Kmm3G%q4>RKl.o<'I3ER"[X?>0>F.3Ou7&.tYpBCgW/EgqGn*3pbqF,%H^EoXe]1$lTiAY3T._J?pdgsiN<s&R=OL-@uJ]kq+3+"EMa<?#j>bF]:_Otbs*j7[a\2TF\J\'<$DNK9HM6M!Fh4upM/%T/`,OI^Tbr9/4*[bk`>8To^X)1X>=HQR@uesp0#%dV>dqmG&1i82MGWViZ`[/6FZropc::C<mHIjo7-2:a=iT/V61E*1KLI>O73)'=NM'#)mm;feUi:M7l.P<@?0a_J6=Ec4#mR1Drnq%ehb'.o\@ZLK!Cr)!mU-W:Eg1iGHIcKfBHfDP0"75p[s,U_7OdUrQk;!i\X]j#Q4'k[1(9DPF&f?_%$o:N2W>'\ZKL-5n_aFn\G=?U7@V>1^60/^BI39qOEI>R*Ql8&/EaMSdi?1]$*QN]aIF33cWIqlCH]XKX\/"+_>akuNOhg3kfDihGC&,jX*$\%un4FrE.7dD<[_tQ1W_TVOp$LPOa5q+pg+oUIA=P4#/B)oM>m=!?pRl)h.ik"L2L)nA7M/=X,<:nK'c@<G$DuARl0DmTll7S:pc@<!^hYTK8*jh08MHde`+hu[U(7Fuu\G=_9Qi?0KF[ZgKn%?un(d?32NE46Y*F"pB(!:HKaBGeC6QM*]#/aWP_ZI8lq[Q-jdgLZ7f9?BC?iD_dcG'(rU+IZ=q@#X@WkAqS8$b[P'6i,>YA>T$GL+1[PtRJaYJ0OeWd_O`pq67Q)tQ!%L'?sRmotGGPeYDNj\s7k5L''0q+%tQ^OD`WZ(!s+Z\q"7reBL"J&Q05lXMI:TdgG!qo;(=Em2m;DEZ1t#Xpb;[qbs-U[-_,PGaiOG*pR)s5uN>GWp0"gMip^]8%XZq@#X@WkAqS8$g4>V_7/9F1$;WI2>-(YW!5eEoqWg&I-/60;u:+!A8`.6Y#!rO,M#=L<kNaF'(P[58q/q2NL$$MoIt2RnMYRn'UJbp7_3[gnE'ml9C&@@("e_Z$f4+6Zqsh`Fe"HHi?j^U;"H:%B\><^9[cVDTq6(s8<JClJWP.kV%)2dDrrig@(LiPFUhm!*uZ!53Q=s)IYNdk/=H9h_Y/j]DTD!`BG0@lq\EM:VoOmp2;fqqZ-F*(l"Js:WVFcco?2PI["%`^\,,4ij$C`)qM8;!KK5/V#46WO9otLI(X_tX6$Y-[ZSdhWoUphiHMoE1#"8Jnssg`H!0jLq*cn.qu>l$YAQF1VsKa77-H4Hhqu)+j@#U@kZYCg62+j>GkgNi2As-G:r=mAq1h<H/ag_g?2Se'rTfNN3ITNbm/`XQosLNL.Q"k^+Wmi2"6t\V-Y2,4q2pir4^E$UEEa0+$AM?-Dr+]dT98r.Uq@fHM-]kC3,,jq`AP0r<pcgYSs'%BRs4OirVaM%41F>?kF&^SSkm#sqQLG$)9>R74p0/cC@?fC`N52OK_d<Jm.L"fh[THlq^7#=n^HT\Bc?ik95-Ydr:RJ2VB#*l0E39sHLjY8Ab,R%2\)d6Z/'G:QG%=rGdDDQ??UGu:JL;jqP_^_o:\KRMtJ)@r'U0.h>V;b`[4nj/O/PK;tfrMK\PA\*L)!,Q4JYuB-99%q@#V*WkAqSnl[2bs%e.<F4iLbi/6jkYD774p3sdM:Bp,oc'^enBrL8O$@&Q.<f$[&MWTtc(j<*2p;Qq1BJ#i(g#fUW_`Du$c,Sj<mR+`ED;Km%/9[ZY)4L;#k%A3g,:pT@/?:[WK1t.%*W!q],`B+tiqG[uo;\jnSpg3i`f,?0an^pGRUC/jg2)\LJ,7#8US#R-OWALk#+u@Sh?R?^RPV]1\+u_=q<.'t7;;@'hb*ih_jk`'-/!M!@[lnGr>7C/2#6HQNOKYc\+"%&^XfoCrd&SE0[(VhG/Ua$RfA6<,Bs,+Ig?GT4DK&rD=V.#.DW!)*?Nt*b_I7]]<!%PU,J%;k(%<ZAZ7lJYpY#G^P!^&fsUYbAB.rI!U)kXpH_m[]&)&b\ffbiO=q\=m#?^Ch>^U.KFe)%rk&,)=)-!J^Id'_"t_^i,*@B5g0mJn2sd7:iW"WcB%uLPgu[.HZZ!@eq>5@kEj*+J?h6qKXgd3XO_8!7ZbuVJ/bc^FP5.q>r6m-N$Js,e9]N6<blQRt]ANXDSt*RCR'G?=+8.rjI0QueY0R)iU"]C:X'Kf/GAt$=4BLQ:?$'#I2(/#_IOdg8B6!g_62j(,6bdY8==!'^\)iBT^=:iW*VQ1[Hgc/T$I<@`?_9XH!t;7^)tb)!/l[0>FL>o0r%[+u&,s^9<4urICJO)Ir:RJa9t^;`@8Yo)J"L\gI=@AKd8bRL,PUGV^Y<PH!SM.'q%0m&5""qub5@dR#A>R07XYK6$e=)=?/^+An\*Mk5!CWdJ,EHsPJO=\Tbm8ik@G/MbM*:k=696.dJrjdFmf(I;u'-'774]YOZVaBa7IMXDo7Q`r6o:_DPkb,iN\[D1*7X:cN&'hgA@Nn>]]&naUYB5PJOh7F6;okDu[U!(hEFed)0F/r_UY0bJPJ#;4\3LIlBP\EgY-BDR_Yhjim>e*!d@\0>.#Uk0<N98f_-(&&:j7%)<LSp-.[If:;[6@lpcX:Bp,oc'a&D?`<H9iVuA38!'BkE.r)7lnY\;h]N2SPeACBPV^Y/L=k-1[s@?9?aTjqSW)>oT6iHm`5A:GLR@2q)+koRR1I)+q@(.PW:iF=Wn*]"+/-EoqAX<5DQ=tNN85\-h<gRC^HV!Eb[%;1_hCmrr5lZ]Rho^G^u`mQpr'=^9UrIoqnBm>%3t1;HV_c_,CbGYZa(hMb4",O?PH;iIEs9IIXTiQq@$qrXiq#8T)n.Z[J)sg[H>[t^T<X,@fCiCYl9%Fl'K!Yl#Kk_GXlqndf.3gi.u(pKTYhc(&f?q12Zjl6274Z60%:Yq.Eqj.m%dDq8L,;^#)+m/rK<>\i@,R+(2nK1B:^]p-.]?esuOkZK3+:_rM3T:`!AV?$AM=VXZN$2sN_Vq574F[Vq8L+6bKOQNp%sD:unYigog-P39VMA&^_)jS["^odTB9**\gA0]96]e7Scm;!i\XQ)luq2ZMD)^G9U7fi$jcWXl]i..u$u]-Y"OIi8Mor\5',%^F$$BR`b.7@t`^hd]I]7Xe3^`3^0rhcul$d+tslq#H%@T)n.Z[J)sgZKB@qo5<sg2RrLdB0,i=q#eQi4W1?mT5OWIJ%5.))tVg5>Me?K1hs\YgNg9M:VQBhqsER[o\0!PGL!W]m-*Jah-&X6]2&l\kfNW>N>^LAU0+%]lXMI:!="iR"44Gjmt4s;2<Tn$s7[[D5!&QNSNlt_nTEC%-\F#EVgIC1h`p\U.q,ir_bQEd`ID"Uc?\pLkbeWXE\_"a__A7X.&,#fFKO9oTU5S!]uJU_@W2"d2*PKPn]>0Elq^`&H5%2m=#+.F__BbGLqXfR./ViIB)oM>m=!>S^?3Ys%6Jm"boV=K60CI'rljl*L>-N;m8*NC#Cc448"Y,cqFL_O&Xb<D@@1k!7,JFdPl5L`1B:^Zp-.[d>]W*Bn9;M2YugXap7IK!XRS*n_`%nZWg!Aflc]f-DmIuZ"4"XUb+Cf.0`(#6kUDoQo3n#&F@>!q&sW?4kVE2=!73aXF;3,8!!!"l/D"tXd:WFZ!2(mpF;3,8!!!"l/D"tXd:WFZ!2(mpF;3,8!!!"l/D"tXd:WFZBP+@Jd%6c'Lctn@5Vm0jJG/%L7J%Gt!1I&k!44+$.AG,g!78qn"e\"=8J-@T?kCC!TIdX953E421'T2%cN"@TR0/["2q$k/6!VDP7J%IJ5p16!ZK+LOS0Nj5(o2sO"#(!k%T&JH8=sr+E>aBCd:WF`J]n/;OrNY,NZ]raO<XN0^`\_!5Zr+PIEiGCAIMI)T)fc31']4#DPYT=K"-b*MWchrK0\Q!A]]r(3CaXI0h;n)#%/"`*2"jnOZqq6i\C]eU<`fJ!gs.T,ra98*'miL+@Yo?J3b<!J?n6*qOAddb8@%24p*JEA.DG%gdn&Y"E><3'[^On#(au!b*!_.F,h@q@uqo2%)=!I3C$_f,CRiL`+9?T7%XJs">U3195^QO3J+c"6&Ok^!/!Q!!+j93oJoDQQSD#CI0O'ja;gj(\WK)=#i[TD.AG,g$j)h!PU/9:k8Zcm`ZR_B)1Y!qF+CRW7f&W"Ls$X2Lctnp#\4EAQJ>$'Es-J#K+u^G!!\"u!QpQEl#Vk-/n9teq@(.^O?#R/E[-"X&]A5h;FI,X(^)T!-qeHRcT-TeN'W?b1B<%mjoAu7NV#5$&=5+B&Uajk&BGia/@gm,k6U'&"t?:m!"8ps"-b)jdcVT9>fImToGN0F+EN(=j@9!9,DaM[Ukh2:0F22!:mTm-T5t-T)1rXNB)i-ebQ5kL)sMF(+>./c,5M_`+HSTK=`Pa8c4S!+$rTKc!>kqp#:N5_UsD&Q\;W_2kVE3k5ir&Xac5pQ7hD"A8.g7S?kCC!TIdX953E421'T2%cN"@TR0/["2q$k/6!VDP7J%IJ5p16!ZK+LOS0Nj5(o2sO"#(!k%T&JH8=sr+E>aBCd:WF`J]n/;OrNY,NZ]raO<XN0^`\_!5Zr+PIEiGCAIMI)T)fc31']4#DPYT=K"-b*MWchrK0\Q!A]]r(3CaXI0h;n)#%/"`*2"jnOZqq6i\C]eU<`fJ!gs.T,ra98*'miL+@Yo?J3b<!J?n6*qOAddb8@%24p*JEA.DG%gdn&Y"E><3'[^On#(au!>5J&qs7bBjSn\!jD0"[.T0*kf@e?3][_iB4PB9*_!>kqp#:Qn"fI_:CjR.(2Si?$%/TW.Q2K@/_iNGZ,D-iCm0N-sWAa(uNK0\Q!7D<i`&$h"YnF9<2FoPtIf8&J-SbG=R_bQE$08@4SICFJn[_kXuPE_oi!"8ps"15?'B&eXF;VOt!l$N.er),n"h#>3H[b5(u^-UC2q@8^Om4`#1,c0]\!/!Q!!,[,Xq`c"qT=*dhgLpO@DX6\ErDD3,q@8^Om4`#1,c0]\!/!Q!!:;YX<7e"[8=(%D%O4P?dQ)^[?kCC!TY9Z0S(#LUq1^t\(k#K-a`\LmEg"`41B<%mjoC=I_<=V+8Cq3Z4,bjR8VcpUJ3b<!JAo+nQFkkSTA=LW)VGTF9MX"ZI0O'ja;gidl`@j0iJVfIDB=6#(e1sOaHMg06D"8q">U5G`&0K'hhuT)7(1"SPEU)TT)fc31'd#>bEqKP)Da;JNmUP/6POR(`R8B!#(au!3ct$hGC#CS?c[DH6;Fggq@(.^O?#ShL:pRL7Cm$OG)/R^d[iW)0F22!d(*S/+8[VaABB"N78D:&4p*JEA.DF.r_hS99f@pD1DGu=&<WKY%=JFg&BGiaPcMOq]du+VF2nfcmgMWq4%(>ABg\Kn(^)T!-u6L*2tC,@M3I<<Q^jk-4p0.V\'BE[W8gYp5B5l:<aT@i\%d@@W)5na>iE^6#9b(EE'V9K#mVjS$%`<%%5m]&TBS"LZE]AGA7[,ZT)kn5dgLXAE]sVT]K)lS.NG1%TYfZFI``co\Y509q+QD$A;=ao-6bMlq@#V86Ei-?p:"Z:I/+LX*&h<sJOc8RdRAB)]]H-GEu/0UK3o%gnDf:V&.V,g+Q9PXK9I=PE4EbNMgjY.,.U!EnsT-l8`R;KkVE4(\973Al`C,kChU#[_<+[o?P\(T8R+5CiBUsE/0$_>oO@mC%FQMo8V`fmIf#?n"0giubaasS*k9Yq=#0rESINJ&)d7?9@5s4n:F1r:\O#691XX<9j0sO&1B:']qDZ^F7eF1sP6_$1Heeu5/KD@g(l!Y\rIi#nO;mfqq+O1sdeN3Fq@(0&Qn`Y_2OnuZE^]O+V6>RTQlSb(GA9okcsPii,>V&Q^\pp"!U/7>F!&K[c=[ckE%29Oe@gObR,">Va_+)+S2>\15bA)@>4u?uE>'ZhT0[3:H\5ZbYgH6!oSD:q:W[6=N1;_RCI"Kmkg!&GT:A'3a?>.j$3rA6Clo6<U6ajErC]=11?>8$>7^Q=5Sp"upq,m6S3?h\EoE)i/c+8cE0-ieBW.$JT\mk(H;.-Q^U9c]!-BB"[]d*Tk0[h$>09&'=j*A)OW2f#I&<h&V"%Y.q@#V*<a0t]c1^#9>41>l7mGBt+h9lJaCffk:)^mTU!E_'FmIff_Y@DcKb^B/(Gus<D`GfZN(e*0%;J6odj&n]poP3X#,&'a9mn(8gf)mYOhJ/`g5m9'L4#jgjJ;<M-i+6:=lUmt*6.Gu8"CBCZDb$IGf)fWLH>:rL.]MrC-t26,BD6-XV6*eTWIMB_36L_/,EdRA)ZpgKoe?X)q9UiVFT^CnQRC;$p[tK-SEZVjf.I-7?*#=Rsk-2o[=87O;l](I&9EpV"%Y:q@#VlUIL4Mj*14PL!_9+)@M<Z*9;(;URuG&K\W4Yj>/qC-]R"Ed:WI%b/SAlRA0E9,]t:iW"\u#0??`F[ncQ5J?mCOk!:CgDGV_OR9ku=`c%F31B;!S#L.ltQJA-.j>4Il-]R"Ed:WI%1(TfYTe*`?S]GGi5u&?5Fe[1^P[tmm%mjE>K0#.@oR`SiId9Co!@Z,RBHDi4j9B`NTBQM>C&HP=4p+WIH-eYZA]YDH6pB'-Emj`b'7C(X/G#N[&B^.Te;8RM(Z_C^>:97U5[!58o,s8D2lIDc9J=IYj0qeU)1]$:KB>HJ95[QRnsNgGPK%O3kVE3MR0Uuh:mTn0:?44E+=E0+3mhR?ataKr#GE]Z6(Q)0H9k:E^NH9s!0h%91_2oUEe?E8ch)gZ1k+aYT)g@`4D5dhZK)44,+n*'3GJEBM*;#<Q?gh>#\D*el9mhb$Za\jXV6*eTIf]-GnA,])q9^lVAJ<hnQRC;$p[tX61Z4`,r_b9q+NH_8`R9ToGN1bb_,%D-qeGS-h<[3OH[\&S`hj0AXNeJK2@lhTMFQ(]c\\^h`B.t!6R&-RKoN;\Nue-B6lj=)S^EhcN'2@*]+Bo=`T-UOjEZOS2>]\7%XK.b<0GZKX0YCFX!IB"Z^;peqlQm:mQCR4:#N?%I->FdgL3EpoP3X#,!O=TQq*kOrMo-I&7_@V"%Y:q@#Vlk!AS]PU/8e'DY<Ta@YF$:@oESZHRs`5q#BD:abh%?BCAjDk6)J!+hQ'c%AiYgn7F'1VFnYNSceEB)p(0&"3`s/@e';aCffb:)^liU<`h(Q2!Idrf-O#>^+YjcKa&gDi29Hk!92;ijmGiB&0k&qcs^<8+Mk9q/V7?AbOpfO#uOeD'r&'s+f1Lc9h;em<ANqWL)H^r[@V=e>M@`]eK";fgV]i^N/E"f5.nOY4$i..bP<8]#M=n9K?S%2%Rs'qe@M9+aPOS^E`ROXNplg0(J7];_FKEi^t<BB7Qd'Sf@XfkVKAKmdK&dq*i-12uIdapt^i00`4f#+SlW!O5r+10_.5,2H!;^r1:;dDq-U=Q<JU&SbDuu`OA(dr]?ne9#g<jr]]X(!1cd\HJuroY?>[g+YS6J(`A1n7UJ.P?[f<#g)FZpZBL2u):q'Zp?4*_B40@7C_lt>lT=[*?5VXk//p#ccFdYP&$OGG;T;Fu4S.\_MnVP&Tk+(]jR9E="44TsY8?mpppb,Nf@siJ,>YrJQnuM5`W\:a&UfGZK+*@MF!H+rh`,Puet:0QietJu\FbgE\(YPgCu_@X?=q5RII:=ks4cnP(C&d0qLS1Km%8d.YZ]U<q@D4cj>4J'OuZZ';U2o5nT?eD2VWJEAX<d?Xg!DG4nmJWk.H)a-$O:7`Q.Rg[JOTt%UX&O%dAY0nN2oKch\&8k>K$#R.^FRq(/u/IRclb+7gUc;U19oc+NkoE>'ZX^>ucUMh6SrH?R#o5PUUeL>=d/Xoe=oni+E-AK+<+n^?Vc@t0WeoYQFGAD'Mao'TSrRO['4Km15nQl4d![_ZO!^,Ti!_t"73]\n.]h^"ah14DaapK=*hkZl9^$Q%[j<;r2rWREMY^-CaGaJ>=FM48MP6gKdN5P.1@rC'"C_YgTR^Ztp,mTRuM:&b(":`GFc&H5;oT<s[#B6musEjCTo3V/[Eo/e;uq=@s/q7Ob0+X'F7@OJ-O14DaapK=*hkZl9^$`@9Zc[/`"4m_$_.t-oO9BJY"+7gUc;U184c+\P`Of)RX^/`b*No#+HnA"PoDLYN&m+F>Z0+546$I.2J^Fad8>km4GhpHr14sHW`KjNqQf9)62'd7CCq@u4Eg?d1i?'K37b(nS/o9on's!XjC14DaapK=*hkZl9^$e&_COR:nnlY_%JNUrn5O*M9l.Ha0hcFWH&*HjLu>FC7MJ'@]:B)Q\,*WN[6Mh:j]2':LZo/9C<\`hV:D`DoqCs2<LUAr;_6pB'-4jD*O,N\L.(??!%#hr^0kDMc5cFESA&$<BK[cOafPU7,;`pZIt53k!)SP/d)@ER(uZeaANVgW0*It%%g0b6StjkNC'=NTals);8Ja+;\l^#Sq.0=JD>\Fbdt2W%r(CpS)'E-\MY-YKTpqj!#%^Q<:Mr^usDd=:Y7+eS"QhW<g]7*><ac<GAG9fooZ^\IM8o4L_a][,+*p57?danQmuhe.?ATQA4]0/QF"@4IdqpVPt9\Tuq$;r7PJ27&/4J$1rr;kO$R=k>eVI94[G%%:^J,>J"1J*kWf9u$2CCq8E]7DT-d4gEQB@lo'(0^m8@^QS0Nn"`E:dgIDIB3;cnUmunQO7M$Ug->D5E>d@&cA0n9anQmuhe.?ATQA4]0/UE!DP&RW+1'3E6`hj84Jk#Tr(D^5Ue[)tNAQ?>$HrFDca^.Jj5ISZ-oh"&B=Inr3kXjK@H95Xd*k0Gf9(+?ff/"CW&B];aFs$2ga,KCP`4L^r-d./!'6J5othTQn,)$XCUNL\1tT5DP@rbMAFt:.%l,8jc&Fp8iC1R3QcrTPV%7`o;35-N]Q`Jf:V6OrkW`RlOO*R9#j5`RO`KOIf5uK#T6CS[+-Vsn-lKcEq>78>!-BjHl\4BF]d80D;5fa]s6/Dh?ZFJq5JLs\1R?A_p7ltaiP]rTGEmQ.D*IKXPi("6-`N;?F/+fgil/r9)j?K3oKo!pL/MqDBXr+tTk+(]jR9E="44ShY87[2C.:BGD7.jL(Z54.o/8D-I;&#q>@uV@[Ic4Q:V8O\DOUkK"Nfdq+44^lLO>s8oGPehD#C/(T)g>jg$=?kdk;ZR`D6GKXURd]Rs<mD:DI_iasD-.nbjQPIYuCYg\&uVSr^VKk!<`8g"bd9q@)VMch)fQ6eRHYhj!@]!+kj#otlu<^[d5p%aBH[jo57M-dK@LqC\0@WP*c,N>1S4UdI>p$i19C2`?+`VU#7,<J0Uk0QZ>OEqoS43C!B>Qj9V()WXA0q@)VMch)fQ6eRHYhj!@]!+j^=HD0jRQ?M$OaQWM2*i/LEO;lSiGYrG6jnHE3jjhO,l$_DV.Irm58@-VrD8m#joGJQ3D^)Sc14DaapK=*hkZeS"(XDjMUEBL!7Z3gAj-#VU8I]\b\dgA#;Z!Eh>*@5(6CN=W;K"5ph^@0!XUW9VE75KR(K1\fj*)buTCj(PcILj!_>>*XK[h2(U?h<C+KXtJ$:!9]b1'AEJ'Y>bo0i\<-(jFU2#@]@9;Wq0^S]77]^kJl-;OP,[Uo6Zq+$4<(.uU88H(g=1B<t=p3P\T3A4`ab>[T]3,c&D+`YXNF&lQ1K,qDOA!)u)8[>nS7ln:2R.^FR>OAdn[TQ`(LR!A:Q:2Sn/=([\(XhY+KU#R:J`,q-";ftpm$On>g&):X$ROhW,_)HZ)1^#/H+e1p\[UX\G!,8m)=9@HoP57S>Pbu=(`@&M7Xs[lU*/+[i8_,f2B9?H7CW9/BX8(aHK$.gCn>J]r^uf)Y`Hk<H6LNs_rZ(o(r+8nfk02-_Z)4AZLOIr;l=!Rpd[o0P4:Vs^X)`b5j-S.?C5a"6Q]KQ]klT7SMXnYnN;'\*RAZ4h6,Fsl]2p5i@Rhohg+f9[?kKCoU!l#%/EEY/GJo-r7^tU'l=`c-u9GQ$QJuIM,NCj]oZiuiMqWF-EQdsFj@Y^_4o3F(NGlcXcQL1)8@ElqlJ*DF=ti(KirUOfQP]-Cu89<f6c4F:S48&?N/6*I1JDVp=r`En%<q-g.O4\qFfuf"W-%deG<[pB3T9FM9iPVmrA,3pnRICY%a'FoKoj3L,6#YE0Us;PAU,p"-.)@j2:[OcHB^qq;n3D6HT!Cakp`Z#,$%Z?8#!AEC8:]&%2,p/SA>cd'*skc[GKM1Tk*D?15nE3VS9#7c/(S+G1figuouR?PHbqnG;0C9/!XG+X^SNkN0]J%KAA71%2V!qj<g_a_,oCffm<=GJCH<IRiNRjW+-)Mh\o7F6O^kn$M8MT;rN(@UVFNr(YTG-0'1pJ"QBOJBfHf]auNih*68YcsQ(omp5%]7sm,YLX3\]iA[rh@+(q`?Y8!Qnqlq));g:bcfRLt7'aAN7nWFl0#$_@1#)&XkMc2Ap(&#XOt[9]r,1gsj!IH+m'CaN7R#9/an?U(ZiB,7CTP3hhC&ZQX`JFUl0PsaL8EKNQe]:%(*CjIAX=i9%-o'IdKq5[G9h[1obi;*V0orf-Dp/Wm5q\bC>"SBNLZe>;U18N;<jn6W^Y6E>A_XXgP94\[skSansNfT\^,6FU3DU2qn9&;O-FVt-I9@#aeJ6c815@j,Ph5<cN&&>n`tm3G:hJ1Mpq:l/[Ut`[Q<ZI];"blH'!T?G]*/-Z53\\\$#b?`YT2Ae_'E(VgRr8b2b@l0Z#j'7APUue(US+C7-GB/\TA'H[ar5gRi?_*E!.hj*)buTCj(PcLo0L_?Dk]EUY^GN8A$A]_B/*)XD9&C!*\nhph5aHjPt"e4F$.7cM"h.(F$>?":pGF)smepO?l$m-f]/#lci21&Oo@+0&,YB6ka"5/UBY?HkM$oP6A>DV)o$e]7^cMl4hr@>Ab7N?1^3mn!FAlSAO3F1j7_j<Sjl2lIDc9J=IYj0qeU)1]$:KB>HJ95[QRnsNgGPK%O3kVE3MR0Uuh:mTn0:?44E+=E0+3mhR?ataKr#GE]Z6(Q)0H9k:E^NH9s!0h%91_2oUEe?E8ch)gZ1k+aYT)g@`4D5dhZK)44,+n*'3GJEBM*;#<Q?gh>#\D*el9mhb$Za\jXV6*eTIf]-GnA,])q9^lVAJ<hnQRC;$p[tX61Z4`,r_b9q+NH_8`R9ToGN1bb_,%D-qeGS-h<[3OH[\&S`hj0AXNeJK2@lhTMFQ(]c\\^h`B.t!6R&-RKoN;\Nue-B6lj=)S^EhcN'2@*]+Bo=`T-UOjEZOS2>]\7%XK.b<0GZKX0YCFX!IB"Z^;peqlQm:mQCR4:#N?%I->FdgL3EpoP3X#,!O=TQq*kOrMo-I&7_@V"%Y:q@#Vlk!AS]PU/8e'DY<Ta@YF$:@oESZHRs`5q#BD:abh%?BCAjDk6)J!+hQ'c%AiYgn7F'1VFnYNSceEB)p(0&"3`s/@e';aCffb:)^liU<`h(AKEZ=6<S>]3g%b\Jt+ZHlU7?G.*F_d*e^i[#'D,^klj(]r76]g"&P;/co_SFaURN'519m[deKpXI0Q>qo:U@?b*!^nM0u0:jJ;<M-i+6:=lr$A+I"02W"\u#0??`F[ncQ5J?mCOk!:CgDGV_OR9ku=`c%F31B;!S#L.ltQJA-.j>4Il-]R"Ed:WI%)Du8/(r*E?/rVtme6"]Ci?3nC*W:(I-0,9<+eS!23GJEBM*;#<f!94DHPjLRDg<i/A5Qjqn:lQ8%X%Em%@*"oe:r@J8*$K9>:97U5Zt.i^.&sS-XCgqoZ<iI_Vkq/3?7>JV].*/2lI2]9TR7dj0qeU)1]$4:Y[shhZJp#/,EdRA)Zp3K,bADo[=87O;l](I&9EpV"%Y:q@#Vl7id)"(r,)X9TD;>e6"]Ci?3nC*W:(I-0,9<+eS!23GJEBM*;#<eua!8#ig.)'ip8W=k$P5]\sug6QQ,I6RCdt[3;1,&NOS'eqlQmd"Ug%_Pu!;M`tLt;E1mu*i+8G"uRNqkp\W,r76Td"42bgXaOu%Y^,jiUR&cJoqjq<7rD-*nsQ)4PK%NXkVE3EG^A?;Z;4iUEj&a!C_):[*9?<2)Cd!kk]cTc?B^SmDf+\o!8Yb#mOPu#[FoU;7\;bW,94pH82]/$/%ItGP0]'q3GJEBK0BCa[<:(#Qj4j;.sh\F33^e+0(atTTMN[B7Z<ioIVV3@!U/7>Euu5VC/c%n]1b4/q@$7(i@p"=)%NXd+B)cjK75)<)+ekspoORF#%1$HQoQZ9cDJHN-G`O;O@DI:cr4t;rZ[sPH#h@.m<AC8^_3+8NO,r'4`8,IpC_Wm*45)"I%eEnN.+*%"NV&KJp\mh3GJEb215[:aj$25.slp+9(--3'9YupLF[^*;)j(em0j]>6/pr]dE+u?[t!Wu!0t':mK;-PMhW!qm^(TNP8Q(O*9Z\)7.(q'!6G\u,bIY`S2>]lPWf1GTqdW43W%Up:s6&Hij];Y%m9-YP:jF^jt0@<pfma7Nuniu3#(>%KYnE4:3Ml=iURRR$okd`>k4<Ta[tO%n)uP-eTuQ#mm=7^[e^n0WbmGW'Fn)%>gZ=b6mjom;C.r,OIY[AN8I$6VaI'WW8+Lr*sakkIcAWrn<\S#gTqh-#I_L1*tCUs']FRq_r=sLd$!0\,@C#0rZW^/bP4e4G(T?(!!!"L-)]&h!!!!u7@sS\!!&sT4p(cb!)ODY"onW'TITdH!!!!a<V../!!%PLkVE2=!!$$HB)ho3!32d>z<(3D[!!!"tMEV+B!!#h1I0KZO!2(h<$ig8-5ZRFo!!!"LWou5=!!!"!d:WFZ!!'$ncN!qF!)uCZ!<<*"W/<b@!!!!q'n$8d!!&ZAq@!?(!'jQV)#sX:J?%fhz<RGFZ!!!#!U<`f>!!#teT)eol!2tc=!rr<$:_eB_!!!"l.f'PR!!#8aoGIW/!._*51B7CT!*.EZzWhRf>!!!!u7@sS\!!&sT4p(cb!)ODY"onW'TITdH!!!!a<V../!!%PLkVE2=!!$$HB)ho3!32d>z<(3D[!!!"tMEV+B!!#h1I0KZO!2(h<$ig8-5ZRFo!!!"LWou5=!!!"!d:WFZ!!'$ncN!qF!)uCZ!<<*"W/<b@!!!!q'n$8d!!&ZAq@!?(!'jQV)#sX:J?%fhz<RGFZ!!!#!U<`f>!!#tEDP'3DV3FkM.A`8,odbFpV3FkM.A`8,8l\k9he,bX.A`8,8h$U$;G&C7PYt+&V3FkM.A`8,8h$U$;G&C7PYt+&V3FkM.A`8,8h$U$;G&C7PYt+&V3FkM.A`8,8h$U$;G&C7PYt+&V3FkM.A`8,8h$U$;G&C7PYt+&V3FkM.A`8,8h$U$;G&C7PYt+&V3FkM.A`8,8h$U$;G&C7PYt+&V3FkM.A`8,8h$U$;G&C7PYt+&V3FkM.A`8,8h$U$;G&C7PYt+&V3FkMWB/T0#?!P*<<~>endstream
endobj
344 0 obj
<<
/BitsPerComponent 8 /ColorSpace /DeviceGray /Decode [ 0 1 ] /Filter [ /ASCII85Decode /FlateDecode ] /Height 1760 /Length 631 
  /Subtype /Image /Type /XObject /Width 1400
>>
stream
Gb"0;0`_7S!5bE.WFlQ&TE"rlzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzi,?GeR+q~>endstream
endobj
345 0 obj
<<
/Contents 565 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] /XObject <<
/FormXob.17e39dd96f0ce37ad68d56b4e0232bb8 343 0 R
>>
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
346 0 obj
<<
/Contents 566 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
347 0 obj
<<
/BaseFont /Helvetica-Oblique /Encoding /WinAnsiEncoding /Name /F6 /Subtype /Type1 /Type /Font
>>
endobj
348 0 obj
<<
/Contents 567 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
349 0 obj
<<
/Contents 568 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
350 0 obj
<<
/Contents 569 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
351 0 obj
<<
/Contents 570 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
352 0 obj
<<
/Contents 571 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
353 0 obj
<<
/Contents 572 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
354 0 obj
<<
/Contents 573 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
355 0 obj
<<
/BitsPerComponent 8 /ColorSpace /DeviceRGB /Filter [ /ASCII85Decode /FlateDecode ] /Height 281 /Length 4981 /SMask 356 0 R 
  /Subtype /Image /Type /XObject /Width 521
>>
stream
Gb"0W4]37k[g$4[o]%BrKs1_`@KA4gru.th#]+;\+W$aSBER;"J2(2W9]X:1m@0HTb,@n1U<tBqW_P^<TkK<![*G/+DfrlThn]<ne91i]MeW6bU)F$1W!35OWW@X-C&jp$)??_7"op-Q!J$&B!2-&)!2uh#!%OuLJ;S(ATV<>)W2Kn#.]NN"MJ<-aU)F$1W!35OWW@X-C&jp$)??_7"op-Q!J$&B!2-&)!2uh#!%OuLJ;S(ATV<>)W2Kn#.]NN"MJ<-aU)F$1W!35OWW@X-C&jp$)??_7"r]LpQark<+A7V^XK+P/R2/a(NEB81Qnp=m"rabLqClPc:^o6j?1hXO[%J=N`4G6OS7t8Hd"lhpLH3h8C7l1)WXj0J"k>j_el<gS9FIkO7]`XSbaB5G"-$DaI@)fBW!40FY50hb>#5Yb@U8Y8cEs5_BZ.LI_jkF,2:./%eV?06Jngs@_!C:Zp@dS.jR2GRmMGGD!md8PW<O9GY50hb>#5YbdX#2q9D>3VU\%iPO,q`nr;HTml07HWbt\%6qCl4*V^J8Ne%rAsZg)7SrUj5QP!5@"b\'6@]?/%276ZkU4F(K4Xs*bGr2K=2mN850O2""Cc<jaO%5cLT?);BuD=r01:YTgEQIE\B+T6S6I@WTfp[.T]ITfXXmeh4u_>MMV1o3q;-D*?\aWmW#E]o\F.:5;(^O4:LF4dGrg/&58dWAck>rTM+fKHg#s7GPSg;)1_r8c>@J,c,6m9CFEIOT1r8eDKH=*:<da5NrepStrVIe2!*%Qi3+)leHY>$&VX5e/irhH&A/HWM:i6b2ZM2Y5nZa]j)fF84_S,Gc=,LXTU;26]uYJOWgE6Zj]IV7l`rnhT*'gAUnS_sj[TT<5_?RGj9@h_h>:ekS*L8@P3KUcQToJ(fSIXe^'Oqui_kI!PLnL>bpub>4Gq:CY`Rb=B]N(*4QCp1Fi7J[JDc1t(bMPk*Y+C*-3_FT,_@ab/k;Le9N5ImY[B/DB:.ZbN30)H])O5U/p(=(Cuq,$DdQM+9GMa:d'hC4P3:)JI(#lGK-+5rI#FFk)7-dt2>-&aQG-F/B,k5U4i[+6H6)We!X@X$4aq(/tBq=BBp<1G,O0)R6IA0P=Qc%5_O"ojQ.QTGhL^]'@2'BgFW'Liq7'3R`RpTFpLi%s+TOeNbA1<?L?s$`\bIXK+P/R2/a(NEB81Qnp=m"r]LpQark<+A3(Lk5o1o!=IukA?#Y;k5o1o!=IukA?#Y;k5o1o!=IukA?#Y;k5o1o!=IukA?#Y;k5o1o!=IukA?#Y;k5o1o!=IukA?#Y;k5o1o!=IukA?#Y;k5o1o!=IukA?#Y;k5o1o!=IukA?#Y;k5o1oJI*D_I[pCe,nB(n]6A>2KW\4eF"]6`.^+rE?NggKD8[c.`i'(g=<"NeQSGLk$._R^nn!bp@"PcuRsZ*K)OOoL`$Sj2W!4SN)mRMO0rfd2ejaKHAW1A3K!c2[Hl8[tQsadL-==ck"t!FkZ,r=eWdtK-7VqX,N,#$Vji`uLDr,m?qK;OJlU[)cO`Z!=Qc:*i?hU03W;QShoC28=mG#)l5(#n:j8JlLl#AbINmI[Pp]KU#5#_WFSY)OhHM+<9pGp^_FCaeU`?-=3Su!?M/6tNTIf6io*U0h%b"1U:ZW%$&.MnC'.797Odo6EF.MnC'.797Odo6EZd`(;+iLroeW8u,)e\IPo1&:Y:B:"i[ad3=6Tpl.1O`,'BjL[9=h2OGh1"VrWgP7f`Tc1Ksk<;j4D!'N.C?W[-qbRa,R<'IMTc8(@6T)eoc@)XGDToX%eI\31pRrM:1$:`"6Yto?LMH%mSGQ+lZ'fYTWhCAQmR&kMB$Ph'L2P5G&(M5\3VT3c\hWA3<'tKagkTY.`glp&%C)=B+0)"RF7)CQ`+I;CW.o36\I[4%RlU5:)S.Zd5#amck1k`,k[nOM^:Cd74[$Kn^Ye4r\$rgo-RX+^GHG6&J#=4YQdSZF+K^=-?cWVVER&?q)S0)*S5hq8n,$Ij#0*TrDW[L23rO-N(Ddmu&TTc,rV,3G+Nj\U*$68hk79d7/<oJdlhoGK_rU",^<^W+)Ue+>IJS&-FS%d.8erkQ'\;[qZ5ceh:<KqC_m&um&XR(8s&DI&9:5;dW.o2%S9*QPdqPD_JmgNas8G1K$#+&)rS$Q.F7N(hNi0#Ap;'-S>WgY%lm-l&RHn4kgO(lCq3Q2$C,t;GfsD1YrgtF)Y(i*gITl_cZWk;:[m2fm1ZP"+lbHpdr:oe,(Vu=0(<Wd8;%9@GG0@B]Z12QWRt#_]jIO3IA\_D*UusjH2RE=nL6aOV/Plo4bW+c5cgfs(OEQIqF#`q@?\L[J%0m"2*QMDC?4A3O;X<F^ddXtX^/arE2%3tHV),;$b]sRq6T<29f9#G?Ui#)F[r:C-6[9J%rN7=$PUOkGlX*^j%HZ;-V/pd%F`qq/DD>/!ra[mNVj1IaMmA!rDh2ZeAskl!\:9Sn-;,ADC.Oi3j*(t.8:Fb8Z\EQaIF\k(\Q%+@hu+#M+?qL3%BCWW2d@NfB+;J.Lttn]'\1RT&q31sSc7k/ZDrZ8_ko0$>u9r7j<n#1Q"cT+[hgYM0-C4Kd_'dfG,euTJ`d@gM3M4ol-JuKZ2CDs>R".XA2h$+\<+<o]4K33$WKJP$^l(H_N/HTeZ]5>gkTY.B#ZjogBC7I"nb>a6Yto?LMH%mSGQ+lZ'fYTWhCAQmR&kMB$Ph'L2P5G&(M5\3VT3c\hWA3<'tKagkTY.`glp&%C)=B+0)"RF7)CQ`+I;CW.o36\I[4%RlU5:)S.Zd5#amck1k`,kf0.i:^s[tF!%EU)ftF728j+PIAhm<bde87&=Y]STc1Ksk<;j4D!'N.C?W[-qbRa,R<'IMTc8(@6T)eoc@)XGD@Yl!^9PqGn(&=5'<I2GjNACj^]\Et2Yf*t2))l#LeYUB;%64'2I_k'@oNODXGtlnb8AdF"D]5?q(bDs0YuJ!9tlQ`%8<ua@ZrHT<!*f8NS*=8(tHD)CEkb51.F,T_:j]>^5Pnu9X$EaP:pEF!u%bqf]:3me\D<',<#?Q7Pum9g5&J;N):$XYVosS04Rr`'<I2GjNACj^]\Et2Yf*t2))l#LeYUB;%52Ln`.ZB/U@*Yh:s[B#q:S=(W)(^F6+r/hfdS\EorN42YX7S%C95i25[Utf,Thcp88g8`2o84N@Ct!29-qqrMbMf0rlU&@g["!c1+>5J#_Hrb\@I8R)0bKF$*@QT5&T_ZW_r<VQe(l*01g-V]&m[XHm7R.BN%sa!6<:WJ23DX!LkX$>Y%6nOR)<Wo6CjC'iIY_AZd&4Ash(C3U>s>(SW/Yf>97Nth;c)IC@`Q=,\$XRS0g,DH)qL)2SF-!4XaCOFCs87@"JiE9O%I!P>Gc.B.+GJBGEHCU"kj)_uB%9[0JCOFCs8E'<AL1gJ_q=F+FnEnu>+$P'CZ[2ZNI<qEDUuQO2Zjg/J$>Y%6nOVX5W.o_jT:`lEor@ra)q3hhAF:8A3GV;sNNY>`.JsD#Y`EmWnbVqEZF&%iQQ5t+0nhL!k'3]k)cX_Hb(YUDNZ"rRKf-U,Gbjh,WaS]b_S[\?N7OB5)IIPJ;KsY@YeP:bEHl`lP%.g69OWpa3?BW^LhbRL]%HfUq6N_SH*&fT2883tV!oQa<l4sOa>Z$Q`\q>@F+*@W^@0Xo2`CKOVAa,9^9Pd=2Ut&;nr6AXZ)IpGO`,(,ND2:WLjW]rDeuG)7cYMXHt-(a1a:i0j;XS'TFq">-K!HT"-(A\2Yk@i)JDOQZ,np_eNbAMND7-lW<O9'Df#!(9f::RHt/@YCoW%Uj;XS9@oEiC\A,dC4[$Kh\_6TMl'^f3l#/G-<I`ScoDK+O>nXK-n*aE&\Z?]]Tc2p=hu?5)/H#DE.;Lr1<PpB15&bL]EIE8+&#KTr_qi5i3VXoh'mVh<q!k-G*d;gP-RU:N\$tUAqX`q7-p@D$pc':dn"98+gWXlO_rm!Xq<+C/SmN++J*)PcFt(8u(XqF:[rRMHD5=7jKkr;Eb;TZJF`itq[2`W_ldLK.lCFQ>7llu:_^rqo:sT$ucB)(1?70H<jj-[QVt;+6U3nYs`eEau]BsGU77ni%OT%rDj]oqt;,U'-bIN,m@(I9!WlRuZ?Ys+Rb;W3\VcMfu48EjA%s'A(L06WF4MqW%.#VqO3=Rp8-bm`-[[_7C-,k1RG#g6jF%/s^9ZY1->n(@Tfe)?H`7FM(!L<B_q;'qIo+-!sX+jcAI@r\N(RD[g<EJ%1m^&Dn#4gT,=oWLA:VPp;;@0DZ:!-6[WU3Un_j"fKgT]F=^/_&,)G4,Jc=PN[Mr?G7$RmNC9?W/VEMZMb;&40]q:M#)9po<o?KU!7q+/[&lKTk4O/QqLlmCUIPc"t7Rt]Ku^;G.(j`,E[+6d$2%C6mP6bZhd>XJ7+Ia7!8PdcIU#kLL(nGZrZ\:j1iCpWr7;"C`ar+cN4@(ma'ej4bTj/]1'hnC-aJDlKGg$_7?>Kcc_33$_LF=sVK=U_@)qS?XOeW<hT[r:0p_AiJ61B.DC\gW")>7JcdS$^r,er^DkgLN8<IAD8AQTNan_gH5JV-I:qk1`BTc1FKcnS]g-V#@cgD`LUK^M["N6_nd+2:./,A(t2$X8=!1r(!c<7cYNCf()fMh7i@/QIaX.2`CKOVAa,9^9Pd=2Ut&;nr6AXZ)IpGO`,(,ND2:WLjW]rDeuG)7cYMXHt-(a1a:i0j;XS'TFq">-K!HT"-(A\2Yk@i)JDOQZ,np_eNbAMND7-lW<O9'Df#!(9f::RHt/@YCoW%Uj;XS9A(tTQd"d!YPAb7nju^bq#%3iu!rs(d!'it1!)QN%!)uo"!#=#a5XdO1:f.Z%<)`r"("E:L75Y'A;%3M)<!*+8eGqj'2#pHM%00@,!rs(d!'it1!)QN%!)uo"!#=#a5XdO1:f.Z%<)`r"("E:L75Y'A;%3M)<!*+8eGqj'2#pHM%00@,!rs(d!'it1!)QN%!)uo"!#=#a5ihtG*r0/8*:gQ~>endstream
endobj
356 0 obj
<<
/BitsPerComponent 8 /ColorSpace /DeviceGray /Decode [ 0 1 ] /Filter [ /ASCII85Decode /FlateDecode ] /Height 281 /Length 73 
  /Subtype /Image /Type /XObject /Width 521
>>
stream
Gb"0;0`_7S!5bE.WFlSlTE"rlzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!%P]!Gq,BG5~>endstream
endobj
357 0 obj
<<
/Contents 574 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] /XObject <<
/FormXob.2ffb610853e3cb0094e160b2b73415d0 355 0 R
>>
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
358 0 obj
<<
/Contents 575 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
359 0 obj
<<
/Contents 576 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
360 0 obj
<<
/BitsPerComponent 8 /ColorSpace /DeviceRGB /Filter [ /ASCII85Decode /FlateDecode ] /Height 301 /Length 6780 /SMask 361 0 R 
  /Subtype /Image /Type /XObject /Width 582
>>
stream
Gb"0W0ll$[)?s%,aLe[C@.1l];"*oUgaC(A["-Yo\XeY#C&R=ddV7P&r@npIKVTl^Ua:UTB/1NrVC3"/n<":#lui@/zzzzzzzzzzzzzzYUD.X06_VanakN>!FUI"*Zcp@na!R:Isuj\]tK\?!.;/0YjHW2ESHgn!1ZM?d3=2q0/&rhSf3[]e_K!:h<UPTOHu[o6u5;:D)RlrYZrOsr:oe,O#j-ia7AQ^lb"L7T%?ak$3353N]O%Vq=icr,@=?S6p.:gMoVGSIuXr[;&BZc`Sr>O0]FN5N*ickY+FP3CUF"">$<_!3I[hWQg'nST!)T'W6DtQa2jKmnWd-*0:L%AYC&p,Y0eG\nd;Y+1XTZ?KO>.gr2aq`EWlI,j)CaSM'ALIeef6gBY[7$0!We_EaG;neoT=q0DYVGHQ%%NM&+E0+-=0Oe5;sVg-jh]LO)_n=[UkR^":XS)maMgCO_@fFCn(TE%;/7;g>./8k\/Hq,!q9p7*!Ed9orudE8_eahL)_J4/Dt7hBpK1==O+c-N"H)e[@+5JonRSGAe,rb8QtAtt'%7\,9jaq`XZZh%=G>,T&#3<?`([I$i3oLVb@T5SQDUijfo,T?/YLTf+r?fOFb1uoDBr9A=ane;&Kl.KX7eR"phUhXQg>.LX-q>L27r?8u1Pb4_9(Mf"aAajiF:k!6.8BJkq@h28ZDQIg8"qch_b>6IS-d_qFV@ch?f%!e_d5k@mPA#BAB/`H21XXA,C!]bP!N]".U?*B:j,f6gCTh\:dF*XLe$D,;kauOnk2YK3\OR:7(?Is&1h(EPIJrQf\&#Ba[r8,r-;]8:U@!gu)`K]7SYM54'ojVEH[>CgkeS/n6eYm2C6u/Ge8aBc5G7/+f\hr)B.j8/b2E0^9/HXgB\Y_"hnAFshk]*DhhKGJIl<cjq43Z?^$IlHf_AcB3@h*#CEV`;A,arkqtZkXiW,@0no"/.^OAmE`9"]#F1='pj]LBE.\?4mbEj2TSTjlXV]e4:a^rP[ArUT5S7q_)>C#(&j*q",X#0lTI[-O&2X\)B,,T?YXGE&5%B0gb>/X7tF5HIDdra-K0@@pfYjM6Qq6lA,?<I9P?Fo2hZ*H%1gA_3;a@+5#CQDes8MgF-ML\6+dJ<gTjPdiD<\sPX/gEk,F%YRZ]kc+pU&e(?B6WF?Dr`5+BOi0/bkKH0CZ^Pe",XH:AqoC8FJPh4qhXBQqY-U",1-BM^dJP1Q9h5G!'mCKn*eS."R;YZ!&Jh=EH1Cj:^9\uQoWt:4_ZC]biu"g8Q,Y%:,bU;RL1`i\g_sR<.LCc:!o0%!mI0PMOlX>@-2Q0oVAGd1T-_:-VXc33SbB4Be$pBl)*Z9;ZUK*2apN2$8?P4.=0EAJ=4k\d?CF/ba`R.Shq0ik&aPoUo=>MVjjD.9a-nEh%W"d._s9mVW^TM!G5(c78K?Zd.ZtunFZ?pmS`s@cYdL0h*rtR(7r7s[Vt0Alg*lmh-JN1PT_]-YEtTBfLYq1\sOj#c_`I"4riqpk:RZ07A"Yk8$p_.Oa92Gg@O_!mITr@a-CLeM&(G[H$Pf./KVj6#J0lZ^cK'D)=&k\pKamLMlMTq[#@b#[YYdMH[U<jn[JM<lXW:>H/Gp'f#7[;+%?Xa#<I>$h\/Vh!Fh+-DJjJ!4[)&9?!T$2d>eueT-a.jZV@fCfSPAOA'Xd*RqV3br%3-$d7nI9S%,-4-Zu[>XckNF*+DMb:?Ah1Kh8j$M5QTi.Aa]%r">uA/h\L!P'D:h3P?a1gG9@cV,=G92M^t4fi3h%l-lR*R>,TWrM7#>=(&26F<J^>m+`W#o#SbV>!=sgoi>*a4#bpE($if$oI>-%SK#\1,TY$,pp.]?6=Z)!OuEkaq%E5Ua,_=Qk:HXt%t1h>`kklX/()N99F\2q?99k+R/2nX_i<eU[Y/gG2I<ZE^`%VoUHPNqA`*(GgUGI;,`UCJTE"g:G6L"kqR:ialf`Ue)0sU6b1&s&C`/'+&hUTUEr@bSZIGi$_U"i=QS#aRk0?@F0+bjFq9iA#o#bOD7,&KO4LqUU.raAl:Urfp["gTP@ScT1YsMDkj"-q2]#n.!>AJ%#7#\"F4h\sk0=P(:C`M,5L@TlWelZ5djC73DPBtEZK7aCh5?)c^QKtlAO3$9JM[#B*Ek-WM4E,fhYLm`#NP8t2U6U."],7+9ZMV7VPteV]bFe880Y)Ug<h>`?MlD)CGCOq@Sr)$Dg/adNAaRFX9?PGAoYf$C9,A*"4"-`fNBbgZ0[\>:jQk1lM,p34[o^ZDOQrr1Nh)LmmHSG)mH;ffm>[na/iRo4dFq+!o74:HS46;;04"1<SYnqi='_PcrBU8,*5+g7#:M7lHuG=S?G9l]/+&a<q>J`EN.%n>/)H$V=Zp!goLFMtll1(`T,$fA9!lL&K_lB6?PW!h?)-KtMWi:E'iPPX9UKM*^O,jLM&*^+SjrEI[%hQWZF]bCYM2o6-IMN-:l0?Nq\$%&d$u6+g*]!)RV8[R?b_%AgM3@Hccg7<AqoBD;@Y>@Km?4_SS1"go*@UVe`Go)5Jp`c_K:f!QH_D`l=CXRit%33O1A8gZB[Kg^OH4^I;iIdRqV18SJBcp=Cnt*=""lNUQ2lWA)A5<0:gYD\[BFH7ZKO,O3%kOd%d@r&oFG^M:OXCmnL1/[Emf"gN>BXG,"(>.1]L?8[Mc=eoB$%5N*dDK9QI@l'UVl_5fLTdFr)Sl++@XkKd/O-;esEjhTojO,(lmk+4TZ6\t;t6'bS)7i`P&bcC-#NmcBH-X(-dk(W>@*hS90aYP3sLMsY7Ak799[p<:1>O1'8IVrY%:hQNi>"A;%!UVm'7&#Z\@+;H0B\o4lj[O-*DN6&IB*0[]QJ?E6^)<#G]:sFj?9Iq"q(0F:_fqB7IlB7AG3I_.8o&)i4jCE(2+GGq>>@A<6sE#;jaB:K2)LT9*r_a[J*u;Q[6NKrnlZpf'Kp.[^s)&?kXe\RAkk9R:RVVEF1NfHdStabdnS5RV?4u3DMk#B'k$0G;tQlb!&LOBU*iY=<os>[rnKqe\$^?W2'/N\=Be^lOB+l2C4+4V=QV?h[_EJRFb?YSC/e]TXg-)[XDNG7V!8._Fk!A0G$AIEa&q*q:.WnEVWt*WNU=0o168]KrLK%M)bedZUDhm(NFa/@D>QC<<B$;FUII,LgD\6t`nL-16E4oW<C`$`Cpu9fH&T/umt=Zr@&f5*e_"bT/Fs]ogYW=:]"q>d26*q;el_&hf!`=,;K[Vk3bhW(]</?^A#sNs-`$#3;g$Tg`cbQrRE&Far_?#7%ArEh;2stO`\NU[[f)bYWZ+X^;55&aD2i*J@r;*)+]UIgWhW$@[bD_D4N?+KG=&<I0NCW&C2C@:Q?eFsmI,^-h-d7C)V*JXCFo&oCYR_QWOfoF*Ask%h:>]j1"NeJ'2it*WB+cnA%SkJb[[_kIj_&W##fZoW5a!bA!tA>g\sr=eIAD@W)8QA[`1(`Z*sV%OK'6nePW([gMMp]*b0'a4!@T_R&ZoN27D6Xb<3eup3/j'DD5'\NG<:=23rNH[I*F9<8Cr^NZ-I#DJLfp(i.m`$)tMP<#mirZ/*u5jtYGq^CsLfK;gnH<+EPBZ-6^ZD1<q/l3:10e>UB1>@X)A=PNgM8C\0HlDRR>mC("iO0Q.lSWKij9\!"8)V]+gAKG>uq`>s$2jgV?7Q%X/)Tt7_g@f_WWbsLj7u_8"[l'IsN4&'AKN-c8WfA"JfPYIUo,)8th[-9n_,MF4Wj1C2=QV?h[_EJRFb?YSC/e]TXg-)[XDNG7V!8._Fk!A0G$AIEa&q*q:.WnEVWt*WNU=0o168]KrLK%M)bedZUDhm(NFa/@D>QC<<B$;FUII,LgD\6t`nL-16E4oW<C`$`Cpu9fH&T/umt=Zr@&f5*e_"bT/Fs]ogYW=:]"q>d26*q;el_&hf!`=,;K[Vk3bhW(]</?^A#sNs-`$#3;g$Tg`cbQrRE&Far_?#7%ArEh;2stO`\NU[[f)bYWZ+X^EA%"[pD<!(YH,kTVQQej-Mn`\<r`4#zzz!'kdSfj.tRSt=55%T_rXjlQ@83o*fukrinRp%A"GmOgYB]A7p@$/\aSEYi3,B!Zc3IQh8@c7"^p`Pq9(iQ,c=6ECt&md?gh:/\C^`6k/\akQ3%pZkptkO9PgBG-<2MaWI^@/M"WKpfSXUC7[8mQ3IqfXoc2oQTa?rPRRINA,j0m(;Cl1S\2'7GEb']<?%+s*B!^m4dC(\$rj<4Ln&rI.k$@]QdE1LjfVY=[o.QlS1FrR-PsD.S@&Majlf$o+CGRo+&3"1a]Jd6p#?>G*\^F]!TZ(?R%73^AJlbM[-6Ac&[(N&[V+oEh"hcd.is"hRQDA32As#mDl8L5.t3B?_XCEbP^gnB*W,bX'H$C),eG&s8KY(g*KGSO2&[ujpa3Q.a)QXX!eM#Q5,l>Utr*^[)7^1#eMg0ZkJ7>b'Q@$894$5f70gl<<&LVgh$@Fd$UMfc9t;QCn7`4Y8]"<+jh@fFT1N04\9slVKZqC0N0::cWj]Al\kI:e[r!3@V]O4Umro!g5$!)TscW%@f:>"Br=^R[#\Og`?+-38gS:ta\f+255jnNGAftpY7lu?%Q7@t]%Z8hXE\4OP&&somt#XabA]`skN1geYVFSYqp&K+lAAci/Z6umGHT>\a9&NldX,q?):%me7emNGo:epWaV1cg9T@=XDm8'^FsbqW./Ef:Ucm&O7#O/WbL7=fZ%^I0,b7$RH+`-&%`HYFEk!.(Q/U[Qn!%qUeSmLSdY+k++0P!(Zpo_VO/YNW&dq7;o^:IXp3ZS<+6PJ;efL/n>]02XWI5e6*_JIIme>,cq`.hmU30dWmIk/@?cOd9/IaV8Prnm1UFklK(#41agbi9G4c./`=hpurC9Q%=PGR$cBHn1-%b!klRqV?ee#2))K'>TT]jeVBSaA:<ItKsU/%-SJ32ZpbU[@4?3SK!OCC^^m8@8)_VB'f<?Xr'JVjr6MU@jB6Gj^nO]A))rJ,fE3B0>#eo_!Zn2Uu&&M8jfm,LPX3f5]Cqd2LINdS-lgU,?Q?Q*Vd[0uc%$efJsm:,mGEn!t?EcG\1]Mmi/5BpqcqF_%66rgp0S2H\O4HGuACho@$l`oI$\)"l-rSG)hn@hPo6FHf8-ceYd$T4K;%gqJj#R*;(L:%J_c:"iC8dH#$AjT-gncStEtnYbsBq48bkB5NX]&WN4Sl!L%^O>K/$C]*i^b$$8F-dT@W-S^pfFjC#*B6p.LhRS:'ePd]-jCpupha\Vqhj5nBmZr@IF)6lF['MSF(18#:[X1)!?K=7:W(UbbSF\m2?qK/*&LOmIq`4cYzzzzzzzz!!&P@rVc]*MZ<_j\@B%.G7ag_!YPrmAWUR*/;$=m?l:4.!6ZM4!*BG^#/Dub1]Wi8:SL!84iM0jmIg\E!J"U=-JIeOlXmJKIXXITGlV6>UP\^8noAqu(I(\o*WR$HU&hJ,&e0A&OD"VF_r4#<DRYt!Q_oH:0Rp7Q!*BG^#/Dub1]Wh-U&hJ,mMQ)A1:XM4!6a<WqZ&1"6j$PVm<8Brn?DAbYHP-RGBZhY:T#bl<$WAI/L$%kIfLbA!'!&sG*kZ"W'reqin')Q;@G]Q5@;*\-'ssbZ1.Vd3Zc>foKB:#9)LRG<%^i`DeuGenX5SS!4=e*N>=g'H[?_%PS,QrjXO;+R8mR=`PQj>9@=$noib\SH&\+Kro&2`N^NuJ76Am@A^Vl,^>LKiV]9*gcRfr&Ehsn:,q6gU6u-`=PWLsW6j'AV,LKEcUa>+[g*DO+\ae/:m^l%IJ6I%A>"YO]H.feBXj!lZ0O:%,6u-W:e3!S'b>,FCr]!;aUW!5`.jo82></O,3eaW8X8^^aGmjGO.DO;AP1W_DZGso1[,6:'1]WhMcA<<F'W&FUrY8,Qcb%BD?b_oaU55"h=H`]LT9mPriecc(e%\"p-Z(t1,p"mDa:%$Nj43`*n*YWpADTX*7U!-rnfub.3g@t))P?riF/K+I+TYurM73<3RK!VSa2d)J(?0=+NVL';r,qrQCGrd%_q/Q6,E6EA.@qI;'gI-CIp/-'`.OPKs(>U7R`jA_3@\?qBpU(`0Q[!_pD<F?m[?*\Os9Ikh3"V2CM1\S07R7R9p01pKq)<5/MnY&#B##?e>iM>5/8/^5LDNUCYtdoHgGa8CUAL5e_\/n7,.YXD\QgaA(6u]ESY_YI'8DqH[0nI]tN6<2?jnI@1M1pYuCWKg'8AW/1OB$h:l>qd;,3F-<fRj5;^bcSE9XuFLK<dlfB)cP;po\U*]IZ=rMW:""8T]et2D6:?3g91IaR`hYuAV*l^<RU6W2p9?R.6Pm]8C+6((b&hTMgU?1Y9jhJeDN>,flPOglFe"2A_-gdh2N9SsD/il4s/%:UPn)mT6lh:^Xr7/cEf'NA+]D60\8/:%5#L;GpmI^!!E>nF?$WEdbBirR7Y4e9#U627TXgp\!%d81"rHsC$?#bi>$faOea%4aoNC98H7?.cVdlMmJiOhK^Jo*E8e=VtR9DT,qq6>CF,T8r87OD;Brq5U/g1OY`1k=<I]:FCte?PNK?&ns'dha^3>+u&IY4Hi5]<7PFGu!)<btXU>bP6TTU&e(#;:\C7!Nb'30$nbS%=k::BE0T96j$g7,T6[+E&c72nI5X%f&5aLg1'3[!3g90'<So_$38;96j$g7,T6[+E&>tbs#LAbAuj8ErH)\q"l/YVJ-C"R#/E"h*"@F0OD"VFK1#fL)>`,EV#2<3!FVMSf+EOEE:82TQ9h5GYRD-RJ7XgU!%`aj"(3#7n*eS."98E%zzzzzzzzzzzzzzzz!9!eS#:S66L]~>endstream
endobj
361 0 obj
<<
/BitsPerComponent 8 /ColorSpace /DeviceGray /Decode [ 0 1 ] /Filter [ /ASCII85Decode /FlateDecode ] /Height 301 /Length 78 
  /Subtype /Image /Type /XObject /Width 582
>>
stream
Gb"0;!<E0#!.pmDX)1Bm!<<*"zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!5Q2IGTOtq~>endstream
endobj
362 0 obj
<<
/Contents 577 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] /XObject <<
/FormXob.c5988efa39addfac5c86f59ca9570145 360 0 R
>>
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
363 0 obj
<<
/Contents 578 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
364 0 obj
<<
/Contents 579 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
365 0 obj
<<
/Contents 580 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
366 0 obj
<<
/Contents 581 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
367 0 obj
<<
/Contents 582 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
368 0 obj
<<
/Contents 583 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
369 0 obj
<<
/Contents 584 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
370 0 obj
<<
/Contents 585 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
371 0 obj
<<
/Contents 586 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
372 0 obj
<<
/Contents 587 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
373 0 obj
<<
/Contents 588 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
374 0 obj
<<
/Contents 589 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
375 0 obj
<<
/Contents 590 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
376 0 obj
<<
/Contents 591 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
377 0 obj
<<
/Contents 592 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
378 0 obj
<<
/Contents 593 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
379 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://www.intel.com/content/www/us/en/developer/tools/oneapi/training/dpc-essentials.html)
>> /Border [ 0 0 0 ] /Rect [ 147.2757 427.0394 170.0657 439.0394 ] /Subtype /Link /Type /Annot
>>
endobj
380 0 obj
<<
/Annots [ 379 0 R ] /Contents 594 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
381 0 obj
<<
/Contents 595 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
382 0 obj
<<
/Contents 596 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
383 0 obj
<<
/Contents 597 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 543 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
384 0 obj
<<
/Outlines 386 0 R /PageLabels 598 0 R /PageMode /UseNone /Pages 543 0 R /Type /Catalog
>>
endobj
385 0 obj
<<
/Author () /CreationDate (D:20230927085142+08'00') /Creator (\(unspecified\)) /Keywords () /ModDate (D:20230927085142+08'00') /Producer (ReportLab PDF Library - www.reportlab.com) 
  /Subject (\(unspecified\)) /Title () /Trapped /False
>>
endobj
386 0 obj
<<
/Count 206 /First 387 0 R /Last 387 0 R /Type /Outlines
>>
endobj
387 0 obj
<<
/Count 155 /Dest [ 323 0 R /XYZ 40.01575 787.0394 0 ] /First 388 0 R /Last 517 0 R /Parent 386 0 R /Title (SYCL 101)
>>
endobj
388 0 obj
<<
/Count 14 /Dest [ 323 0 R /XYZ 40.01575 417.0394 0 ] /First 389 0 R /Last 396 0 R /Next 403 0 R /Parent 387 0 R 
  /Title (1\) Heterogeneous Compute)
>>
endobj
389 0 obj
<<
/Count 6 /Dest [ 323 0 R /XYZ 40.01575 381.8394 0 ] /First 390 0 R /Last 395 0 R /Next 396 0 R /Parent 388 0 R 
  /Title (Heterogeneous vs. Homogeneous Computing Environments)
>>
endobj
390 0 obj
<<
/Dest [ 323 0 R /XYZ 40.01575 349.0394 0 ] /Next 391 0 R /Parent 389 0 R /Title (Homogeneous Compute)
>>
endobj
391 0 obj
<<
/Dest [ 323 0 R /XYZ 40.01575 198.6394 0 ] /Next 392 0 R /Parent 389 0 R /Prev 390 0 R /Title (Heterogeneous Compute)
>>
endobj
392 0 obj
<<
/Dest [ 323 0 R /XYZ 40.01575 102.2394 0 ] /Next 393 0 R /Parent 389 0 R /Prev 391 0 R /Title (Advantages of Accelerators in Heterogeneous Computing)
>>
endobj
393 0 obj
<<
/Dest [ 324 0 R /XYZ 40.01575 687.0394 0 ] /Next 394 0 R /Parent 389 0 R /Prev 392 0 R /Title (Challenges using Accelerators in a Heterogeneous Computing Environment)
>>
endobj
394 0 obj
<<
/Dest [ 324 0 R /XYZ 40.01575 536.6394 0 ] /Next 395 0 R /Parent 389 0 R /Prev 393 0 R /Title (Software Development Techniques)
>>
endobj
395 0 obj
<<
/Dest [ 324 0 R /XYZ 40.01575 368.2394 0 ] /Parent 389 0 R /Prev 394 0 R /Title (Summary)
>>
endobj
396 0 obj
<<
/Count 6 /Dest [ 324 0 R /XYZ 40.01575 205.8394 0 ] /First 397 0 R /Last 402 0 R /Parent 388 0 R /Prev 389 0 R 
  /Title (Khronos SYCL)
>>
endobj
397 0 obj
<<
/Dest [ 324 0 R /XYZ 40.01575 143.0394 0 ] /Next 398 0 R /Parent 396 0 R /Title (Open Ecosystem)
>>
endobj
398 0 obj
<<
/Dest [ 325 0 R /XYZ 40.01575 787.0394 0 ] /Next 399 0 R /Parent 396 0 R /Prev 397 0 R /Title (Performance Across Devices)
>>
endobj
399 0 obj
<<
/Dest [ 325 0 R /XYZ 40.01575 690.6394 0 ] /Next 400 0 R /Parent 396 0 R /Prev 398 0 R /Title (Ease of Coding)
>>
endobj
400 0 obj
<<
/Dest [ 325 0 R /XYZ 40.01575 582.2394 0 ] /Next 401 0 R /Parent 396 0 R /Prev 399 0 R /Title (Portability and Future-Proofing)
>>
endobj
401 0 obj
<<
/Dest [ 325 0 R /XYZ 40.01575 485.8394 0 ] /Next 402 0 R /Parent 396 0 R /Prev 400 0 R /Title (Integration with Existing Codebases)
>>
endobj
402 0 obj
<<
/Dest [ 325 0 R /XYZ 40.01575 401.4394 0 ] /Parent 396 0 R /Prev 401 0 R /Title (Summary)
>>
endobj
403 0 obj
<<
/Count 12 /Dest [ 325 0 R /XYZ 40.01575 317.0394 0 ] /First 404 0 R /Last 415 0 R /Next 416 0 R /Parent 387 0 R 
  /Prev 388 0 R /Title (2\) Why SYCL?)
>>
endobj
404 0 obj
<<
/Count 4 /Dest [ 325 0 R /XYZ 40.01575 281.8394 0 ] /First 405 0 R /Last 408 0 R /Next 409 0 R /Parent 403 0 R 
  /Title (What is SYCL?)
>>
endobj
405 0 obj
<<
/Dest [ 325 0 R /XYZ 40.01575 249.0394 0 ] /Next 406 0 R /Parent 404 0 R /Title (Definition)
>>
endobj
406 0 obj
<<
/Dest [ 325 0 R /XYZ 40.01575 128.6394 0 ] /Next 407 0 R /Parent 404 0 R /Prev 405 0 R /Title (SYCL Features)
>>
endobj
407 0 obj
<<
/Dest [ 326 0 R /XYZ 40.01575 537.0394 0 ] /Next 408 0 R /Parent 404 0 R /Prev 406 0 R /Title (Specifications)
>>
endobj
408 0 obj
<<
/Dest [ 326 0 R /XYZ 40.01575 170.6394 0 ] /Parent 404 0 R /Prev 407 0 R /Title (Implementations)
>>
endobj
409 0 obj
<<
/Count 4 /Dest [ 330 0 R /XYZ 40.01575 651.0394 0 ] /First 410 0 R /Last 413 0 R /Next 414 0 R /Parent 403 0 R 
  /Prev 404 0 R /Title (SYCL Basic Code: single_task)
>>
endobj
410 0 obj
<<
/Dest [ 330 0 R /XYZ 40.01575 588.2394 0 ] /Next 411 0 R /Parent 409 0 R /Title (SYCL Advantages)
>>
endobj
411 0 obj
<<
/Dest [ 330 0 R /XYZ 40.01575 425.8394 0 ] /Next 412 0 R /Parent 409 0 R /Prev 410 0 R /Title (Basic SYCL Code #1: single_task)
>>
endobj
412 0 obj
<<
/Dest [ 331 0 R /XYZ 40.01575 187.0394 0 ] /Next 413 0 R /Parent 409 0 R /Prev 411 0 R /Title (Basic SYCL Code #2: parallel_for Hands-on)
>>
endobj
413 0 obj
<<
/Dest [ 332 0 R /XYZ 40.01575 279.4394 0 ] /Parent 409 0 R /Prev 412 0 R /Title (Main SYCL concepts takeaways)
>>
endobj
414 0 obj
<<
/Dest [ 333 0 R /XYZ 40.01575 663.0394 0 ] /Next 415 0 R /Parent 403 0 R /Prev 409 0 R /Title (SYCL Basic Code: parallel_for)
>>
endobj
415 0 obj
<<
/Dest [ 334 0 R /XYZ 40.01575 585.0394 0 ] /Parent 403 0 R /Prev 414 0 R /Title (Conclusions)
>>
endobj
416 0 obj
<<
/Count 90 /Dest [ 334 0 R /XYZ 40.01575 354.2394 0 ] /First 417 0 R /Last 503 0 R /Next 507 0 R /Parent 387 0 R 
  /Prev 403 0 R /Title (3\) Modern C++)
>>
endobj
417 0 obj
<<
/Count 8 /Dest [ 334 0 R /XYZ 40.01575 319.0394 0 ] /First 418 0 R /Last 425 0 R /Next 426 0 R /Parent 416 0 R 
  /Title (Uniform Initialization)
>>
endobj
418 0 obj
<<
/Count 2 /Dest [ 334 0 R /XYZ 40.01575 214.2394 0 ] /First 419 0 R /Last 420 0 R /Next 421 0 R /Parent 417 0 R 
  /Title (Introduction)
>>
endobj
419 0 obj
<<
/Dest [ 334 0 R /XYZ 40.01575 165.8394 0 ] /Next 420 0 R /Parent 418 0 R /Title (Expression Initialization)
>>
endobj
420 0 obj
<<
/Dest [ 335 0 R /XYZ 40.01575 740.2394 0 ] /Parent 418 0 R /Prev 419 0 R /Title (Brace Initialization)
>>
endobj
421 0 obj
<<
/Count 3 /Dest [ 335 0 R /XYZ 40.01575 272.2394 0 ] /First 422 0 R /Last 424 0 R /Next 425 0 R /Parent 417 0 R 
  /Prev 418 0 R /Title (Why Should Uniform Initialization Be Used?)
>>
endobj
422 0 obj
<<
/Dest [ 335 0 R /XYZ 40.01575 223.8394 0 ] /Next 423 0 R /Parent 421 0 R /Title (Consistent Syntax)
>>
endobj
423 0 obj
<<
/Dest [ 336 0 R /XYZ 40.01575 704.2394 0 ] /Next 424 0 R /Parent 421 0 R /Prev 422 0 R /Title (Narrowing Conversions Are Not Allowed)
>>
endobj
424 0 obj
<<
/Dest [ 336 0 R /XYZ 40.01575 521.4394 0 ] /Parent 421 0 R /Prev 423 0 R /Title (Fixes Most Vexing Parse)
>>
endobj
425 0 obj
<<
/Dest [ 336 0 R /XYZ 40.01575 165.0394 0 ] /Parent 417 0 R /Prev 421 0 R /Title (Common Problems with Uniform Initialization)
>>
endobj
426 0 obj
<<
/Count 13 /Dest [ 337 0 R /XYZ 40.01575 468.6394 0 ] /First 427 0 R /Last 439 0 R /Next 440 0 R /Parent 416 0 R 
  /Prev 417 0 R /Title (Multithreading)
>>
endobj
427 0 obj
<<
/Dest [ 337 0 R /XYZ 40.01575 327.8394 0 ] /Next 428 0 R /Parent 426 0 R /Title (Introduction)
>>
endobj
428 0 obj
<<
/Dest [ 337 0 R /XYZ 40.01575 243.4394 0 ] /Next 429 0 R /Parent 426 0 R /Prev 427 0 R /Title (Why Use Multithreading?)
>>
endobj
429 0 obj
<<
/Count 1 /Dest [ 338 0 R /XYZ 40.01575 787.0394 0 ] /First 430 0 R /Last 430 0 R /Next 431 0 R /Parent 426 0 R 
  /Prev 428 0 R /Title (Basic Concepts of Multithreading)
>>
endobj
430 0 obj
<<
/Dest [ 338 0 R /XYZ 40.01575 678.6394 0 ] /Parent 429 0 R /Title (Concurrency and Parallelism)
>>
endobj
431 0 obj
<<
/Count 4 /Dest [ 338 0 R /XYZ 40.01575 565.4394 0 ] /First 432 0 R /Last 435 0 R /Next 436 0 R /Parent 426 0 R 
  /Prev 429 0 R /Title (C++ Multithreading Syntax)
>>
endobj
432 0 obj
<<
/Dest [ 338 0 R /XYZ 40.01575 505.0394 0 ] /Next 433 0 R /Parent 431 0 R /Title (Creating a Thread)
>>
endobj
433 0 obj
<<
/Dest [ 339 0 R /XYZ 40.01575 787.0394 0 ] /Next 434 0 R /Parent 431 0 R /Prev 432 0 R /Title (Creating Multiple Threads)
>>
endobj
434 0 obj
<<
/Dest [ 339 0 R /XYZ 40.01575 179.0394 0 ] /Next 435 0 R /Parent 431 0 R /Prev 433 0 R /Title (Joining and Detaching Threads)
>>
endobj
435 0 obj
<<
/Dest [ 342 0 R /XYZ 40.01575 645.4394 0 ] /Parent 431 0 R /Prev 434 0 R /Title (Commonly Used Methods of the Thread Class)
>>
endobj
436 0 obj
<<
/Count 2 /Dest [ 342 0 R /XYZ 40.01575 418.2394 0 ] /First 437 0 R /Last 438 0 R /Next 439 0 R /Parent 426 0 R 
  /Prev 431 0 R /Title (Problems with Multithreading)
>>
endobj
437 0 obj
<<
/Dest [ 342 0 R /XYZ 40.01575 297.8394 0 ] /Next 438 0 R /Parent 436 0 R /Title (Deadlock)
>>
endobj
438 0 obj
<<
/Dest [ 345 0 R /XYZ 40.01575 747.0394 0 ] /Parent 436 0 R /Prev 437 0 R /Title (Race Conditions)
>>
endobj
439 0 obj
<<
/Dest [ 345 0 R /XYZ 40.01575 169.4394 0 ] /Parent 426 0 R /Prev 436 0 R /Title (Summary)
>>
endobj
440 0 obj
<<
/Count 12 /Dest [ 345 0 R /XYZ 40.01575 97.03937 0 ] /First 441 0 R /Last 450 0 R /Next 453 0 R /Parent 416 0 R 
  /Prev 426 0 R /Title (Smart Pointers)
>>
endobj
441 0 obj
<<
/Dest [ 346 0 R /XYZ 40.01575 723.0394 0 ] /Next 442 0 R /Parent 440 0 R /Title (What are Smart Pointers and When Should They be Used?)
>>
endobj
442 0 obj
<<
/Count 3 /Dest [ 346 0 R /XYZ 40.01575 524.6394 0 ] /First 443 0 R /Last 445 0 R /Next 446 0 R /Parent 440 0 R 
  /Prev 441 0 R /Title (std::unique_ptr)
>>
endobj
443 0 obj
<<
/Dest [ 346 0 R /XYZ 40.01575 404.2394 0 ] /Next 444 0 R /Parent 442 0 R /Title (Syntax)
>>
endobj
444 0 obj
<<
/Dest [ 346 0 R /XYZ 40.01575 227.4394 0 ] /Next 445 0 R /Parent 442 0 R /Prev 443 0 R /Title (Usage)
>>
endobj
445 0 obj
<<
/Dest [ 348 0 R /XYZ 40.01575 561.0394 0 ] /Parent 442 0 R /Prev 444 0 R /Title (std::make_unique)
>>
endobj
446 0 obj
<<
/Count 3 /Dest [ 348 0 R /XYZ 40.01575 439.0394 0 ] /First 447 0 R /Last 449 0 R /Next 450 0 R /Parent 440 0 R 
  /Prev 442 0 R /Title (std::shared_ptr)
>>
endobj
447 0 obj
<<
/Dest [ 348 0 R /XYZ 40.01575 318.6394 0 ] /Next 448 0 R /Parent 446 0 R /Title (Syntax)
>>
endobj
448 0 obj
<<
/Dest [ 348 0 R /XYZ 40.01575 189.8394 0 ] /Next 449 0 R /Parent 446 0 R /Prev 447 0 R /Title (Usage)
>>
endobj
449 0 obj
<<
/Dest [ 349 0 R /XYZ 40.01575 581.4394 0 ] /Parent 446 0 R /Prev 448 0 R /Title (std::make_shared)
>>
endobj
450 0 obj
<<
/Count 2 /Dest [ 349 0 R /XYZ 40.01575 459.4394 0 ] /First 451 0 R /Last 452 0 R /Parent 440 0 R /Prev 446 0 R 
  /Title (std::weak_ptr)
>>
endobj
451 0 obj
<<
/Dest [ 349 0 R /XYZ 40.01575 381.0394 0 ] /Next 452 0 R /Parent 450 0 R /Title (Syntax)
>>
endobj
452 0 obj
<<
/Dest [ 349 0 R /XYZ 40.01575 220.2394 0 ] /Parent 450 0 R /Prev 451 0 R /Title (Usage)
>>
endobj
453 0 obj
<<
/Count 6 /Dest [ 350 0 R /XYZ 40.01575 213.4394 0 ] /First 454 0 R /Last 459 0 R /Next 460 0 R /Parent 416 0 R 
  /Prev 440 0 R /Title (Hash Tables)
>>
endobj
454 0 obj
<<
/Count 1 /Dest [ 351 0 R /XYZ 40.01575 787.0394 0 ] /First 455 0 R /Last 455 0 R /Next 456 0 R /Parent 453 0 R 
  /Title (Introduction)
>>
endobj
455 0 obj
<<
/Dest [ 351 0 R /XYZ 40.01575 714.6394 0 ] /Parent 454 0 R /Title (Hashing Function)
>>
endobj
456 0 obj
<<
/Count 2 /Dest [ 351 0 R /XYZ 40.01575 429.4394 0 ] /First 457 0 R /Last 458 0 R /Next 459 0 R /Parent 453 0 R 
  /Prev 454 0 R /Title (C++ Standard Library Hash Tables)
>>
endobj
457 0 obj
<<
/Dest [ 351 0 R /XYZ 40.01575 279.0394 0 ] /Next 458 0 R /Parent 456 0 R /Title (Set)
>>
endobj
458 0 obj
<<
/Dest [ 352 0 R /XYZ 40.01575 545.4394 0 ] /Parent 456 0 R /Prev 457 0 R /Title (Map)
>>
endobj
459 0 obj
<<
/Dest [ 352 0 R /XYZ 40.01575 91.03937 0 ] /Parent 453 0 R /Prev 456 0 R /Title (Summary)
>>
endobj
460 0 obj
<<
/Count 4 /Dest [ 353 0 R /XYZ 40.01575 577.0394 0 ] /First 461 0 R /Last 462 0 R /Next 465 0 R /Parent 416 0 R 
  /Prev 453 0 R /Title (std::array Container)
>>
endobj
461 0 obj
<<
/Dest [ 353 0 R /XYZ 40.01575 490.2394 0 ] /Next 462 0 R /Parent 460 0 R /Title (Introduction)
>>
endobj
462 0 obj
<<
/Count 2 /Dest [ 353 0 R /XYZ 40.01575 267.8394 0 ] /First 463 0 R /Last 464 0 R /Parent 460 0 R /Prev 461 0 R 
  /Title (Syntax of std::array)
>>
endobj
463 0 obj
<<
/Dest [ 354 0 R /XYZ 40.01575 787.0394 0 ] /Next 464 0 R /Parent 462 0 R /Title (Usage)
>>
endobj
464 0 obj
<<
/Dest [ 354 0 R /XYZ 40.01575 521.4394 0 ] /Parent 462 0 R /Prev 463 0 R /Title (Multidimensional Array)
>>
endobj
465 0 obj
<<
/Count 7 /Dest [ 354 0 R /XYZ 40.01575 333.4394 0 ] /First 466 0 R /Last 472 0 R /Next 473 0 R /Parent 416 0 R 
  /Prev 460 0 R /Title (Move Semantics)
>>
endobj
466 0 obj
<<
/Dest [ 354 0 R /XYZ 40.01575 192.6394 0 ] /Next 467 0 R /Parent 465 0 R /Title (Introduction)
>>
endobj
467 0 obj
<<
/Count 2 /Dest [ 354 0 R /XYZ 40.01575 132.2394 0 ] /First 468 0 R /Last 469 0 R /Next 470 0 R /Parent 465 0 R 
  /Prev 466 0 R /Title (Value Categories \(glvalue and rvalue\))
>>
endobj
468 0 obj
<<
/Dest [ 357 0 R /XYZ 40.01575 442.7994 0 ] /Next 469 0 R /Parent 467 0 R /Title (Functions Returning lvalue and prvalue)
>>
endobj
469 0 obj
<<
/Dest [ 357 0 R /XYZ 40.01575 111.1994 0 ] /Parent 467 0 R /Prev 468 0 R /Title (lvalue-to-prvalue Conversion)
>>
endobj
470 0 obj
<<
/Dest [ 358 0 R /XYZ 40.01575 696.2394 0 ] /Next 471 0 R /Parent 465 0 R /Prev 467 0 R /Title (Universal References \(&&\))
>>
endobj
471 0 obj
<<
/Dest [ 358 0 R /XYZ 40.01575 375.4394 0 ] /Next 472 0 R /Parent 465 0 R /Prev 470 0 R /Title (std::move)
>>
endobj
472 0 obj
<<
/Dest [ 359 0 R /XYZ 40.01575 787.0394 0 ] /Parent 465 0 R /Prev 471 0 R /Title (Move Constructor and Rule of Five)
>>
endobj
473 0 obj
<<
/Count 8 /Dest [ 362 0 R /XYZ 40.01575 656.2394 0 ] /First 474 0 R /Last 475 0 R /Next 482 0 R /Parent 416 0 R 
  /Prev 465 0 R /Title (Lambdas)
>>
endobj
474 0 obj
<<
/Dest [ 362 0 R /XYZ 40.01575 551.4394 0 ] /Next 475 0 R /Parent 473 0 R /Title (Introduction)
>>
endobj
475 0 obj
<<
/Count 6 /Dest [ 362 0 R /XYZ 40.01575 364.2394 0 ] /First 476 0 R /Last 481 0 R /Parent 473 0 R /Prev 474 0 R 
  /Title (Parts of the Lambda Expression)
>>
endobj
476 0 obj
<<
/Dest [ 363 0 R /XYZ 40.01575 787.0394 0 ] /Next 477 0 R /Parent 475 0 R /Title (Capture Clause)
>>
endobj
477 0 obj
<<
/Dest [ 363 0 R /XYZ 40.01575 334.2394 0 ] /Next 478 0 R /Parent 475 0 R /Prev 476 0 R /Title (Parameter List)
>>
endobj
478 0 obj
<<
/Dest [ 363 0 R /XYZ 40.01575 145.4394 0 ] /Next 479 0 R /Parent 475 0 R /Prev 477 0 R /Title (Mutable Specification)
>>
endobj
479 0 obj
<<
/Dest [ 364 0 R /XYZ 40.01575 668.2394 0 ] /Next 480 0 R /Parent 475 0 R /Prev 478 0 R /Title (Exception Specification)
>>
endobj
480 0 obj
<<
/Dest [ 364 0 R /XYZ 40.01575 558.2394 0 ] /Next 481 0 R /Parent 475 0 R /Prev 479 0 R /Title (Return Type)
>>
endobj
481 0 obj
<<
/Dest [ 364 0 R /XYZ 40.01575 342.6394 0 ] /Parent 475 0 R /Prev 480 0 R /Title (Lambda Body)
>>
endobj
482 0 obj
<<
/Count 4 /Dest [ 365 0 R /XYZ 40.01575 510.6394 0 ] /First 483 0 R /Last 486 0 R /Next 487 0 R /Parent 416 0 R 
  /Prev 473 0 R /Title (Type Inference in C++ \(auto and decltype\))
>>
endobj
483 0 obj
<<
/Dest [ 365 0 R /XYZ 40.01575 405.8394 0 ] /Next 484 0 R /Parent 482 0 R /Title (Introduction)
>>
endobj
484 0 obj
<<
/Dest [ 365 0 R /XYZ 40.01575 261.4394 0 ] /Next 485 0 R /Parent 482 0 R /Prev 483 0 R /Title (auto Keyword)
>>
endobj
485 0 obj
<<
/Dest [ 366 0 R /XYZ 40.01575 573.4394 0 ] /Next 486 0 R /Parent 482 0 R /Prev 484 0 R /Title (decltype Type Specifier)
>>
endobj
486 0 obj
<<
/Dest [ 367 0 R /XYZ 40.01575 621.4394 0 ] /Parent 482 0 R /Prev 485 0 R /Title (Summary)
>>
endobj
487 0 obj
<<
/Count 5 /Dest [ 367 0 R /XYZ 40.01575 537.0394 0 ] /First 488 0 R /Last 492 0 R /Next 493 0 R /Parent 416 0 R 
  /Prev 482 0 R /Title (Initializers in if and switch Statements)
>>
endobj
488 0 obj
<<
/Dest [ 367 0 R /XYZ 40.01575 432.2394 0 ] /Next 489 0 R /Parent 487 0 R /Title (Introduction)
>>
endobj
489 0 obj
<<
/Count 2 /Dest [ 367 0 R /XYZ 40.01575 177.0394 0 ] /First 490 0 R /Last 491 0 R /Next 492 0 R /Parent 487 0 R 
  /Prev 488 0 R /Title (Syntax)
>>
endobj
490 0 obj
<<
/Dest [ 367 0 R /XYZ 40.01575 128.6394 0 ] /Next 491 0 R /Parent 489 0 R /Title (Initializer Statement Outside the Conditional Blocks)
>>
endobj
491 0 obj
<<
/Dest [ 368 0 R /XYZ 40.01575 593.4394 0 ] /Parent 489 0 R /Prev 490 0 R /Title (Initializer Statements in if and switch Blocks)
>>
endobj
492 0 obj
<<
/Dest [ 368 0 R /XYZ 40.01575 428.6394 0 ] /Parent 487 0 R /Prev 489 0 R /Title (Summary)
>>
endobj
493 0 obj
<<
/Count 9 /Dest [ 368 0 R /XYZ 40.01575 356.2394 0 ] /First 494 0 R /Last 502 0 R /Next 503 0 R /Parent 416 0 R 
  /Prev 487 0 R /Title (Standard Template Library \(STL\) on Concurrent and Parallel Algorithms)
>>
endobj
494 0 obj
<<
/Dest [ 368 0 R /XYZ 40.01575 215.4394 0 ] /Next 495 0 R /Parent 493 0 R /Title (Introduction)
>>
endobj
495 0 obj
<<
/Dest [ 368 0 R /XYZ 40.01575 143.0394 0 ] /Next 496 0 R /Parent 493 0 R /Prev 494 0 R /Title (What are STL Algorithms?)
>>
endobj
496 0 obj
<<
/Count 4 /Dest [ 369 0 R /XYZ 40.01575 787.0394 0 ] /First 497 0 R /Last 500 0 R /Next 501 0 R /Parent 493 0 R 
  /Prev 495 0 R /Title (Execution Policies)
>>
endobj
497 0 obj
<<
/Dest [ 369 0 R /XYZ 40.01575 489.8394 0 ] /Next 498 0 R /Parent 496 0 R /Title (sequenced_policy)
>>
endobj
498 0 obj
<<
/Dest [ 369 0 R /XYZ 40.01575 139.8394 0 ] /Next 499 0 R /Parent 496 0 R /Prev 497 0 R /Title (parallel_policy)
>>
endobj
499 0 obj
<<
/Dest [ 370 0 R /XYZ 40.01575 486.2394 0 ] /Next 500 0 R /Parent 496 0 R /Prev 498 0 R /Title (parallel_unsequenced_policy)
>>
endobj
500 0 obj
<<
/Dest [ 371 0 R /XYZ 40.01575 787.0394 0 ] /Parent 496 0 R /Prev 499 0 R /Title (unsequenced_policy)
>>
endobj
501 0 obj
<<
/Dest [ 371 0 R /XYZ 40.01575 431.0394 0 ] /Next 502 0 R /Parent 493 0 R /Prev 496 0 R /Title (Best Practices)
>>
endobj
502 0 obj
<<
/Dest [ 371 0 R /XYZ 40.01575 280.6394 0 ] /Parent 493 0 R /Prev 501 0 R /Title (Summary)
>>
endobj
503 0 obj
<<
/Count 3 /Dest [ 371 0 R /XYZ 40.01575 208.2394 0 ] /First 504 0 R /Last 506 0 R /Parent 416 0 R /Prev 493 0 R 
  /Title (Nested Namespaces)
>>
endobj
504 0 obj
<<
/Count 1 /Dest [ 372 0 R /XYZ 40.01575 787.0394 0 ] /First 505 0 R /Last 505 0 R /Next 506 0 R /Parent 503 0 R 
  /Title (Introduction)
>>
endobj
505 0 obj
<<
/Dest [ 372 0 R /XYZ 40.01575 678.6394 0 ] /Parent 504 0 R /Title (Defining a Namespace)
>>
endobj
506 0 obj
<<
/Dest [ 372 0 R /XYZ 40.01575 501.8394 0 ] /Parent 503 0 R /Prev 504 0 R /Title (Nested Namespaces)
>>
endobj
507 0 obj
<<
/Count 9 /Dest [ 373 0 R /XYZ 40.01575 477.4394 0 ] /First 508 0 R /Last 512 0 R /Next 517 0 R /Parent 387 0 R 
  /Prev 416 0 R /Title (4\) SYCL Implementations of Modern C++)
>>
endobj
508 0 obj
<<
/Dest [ 373 0 R /XYZ 40.01575 442.2394 0 ] /Next 509 0 R /Parent 507 0 R /Title (Introduction)
>>
endobj
509 0 obj
<<
/Dest [ 373 0 R /XYZ 40.01575 199.4394 0 ] /Next 510 0 R /Parent 507 0 R /Prev 508 0 R /Title (Conventional vector_add with SYCL)
>>
endobj
510 0 obj
<<
/Dest [ 375 0 R /XYZ 40.01575 717.0394 0 ] /Next 511 0 R /Parent 507 0 R /Prev 509 0 R /Title (USM vector_add with SYCL)
>>
endobj
511 0 obj
<<
/Dest [ 376 0 R /XYZ 40.01575 561.4394 0 ] /Next 512 0 R /Parent 507 0 R /Prev 510 0 R /Title (SYCL matrix_multiplication Using USM)
>>
endobj
512 0 obj
<<
/Count 4 /Dest [ 377 0 R /XYZ 40.01575 449.4394 0 ] /First 513 0 R /Last 516 0 R /Parent 507 0 R /Prev 511 0 R 
  /Title (Summary)
>>
endobj
513 0 obj
<<
/Dest [ 377 0 R /XYZ 40.01575 386.6394 0 ] /Next 514 0 R /Parent 512 0 R /Title (Advantages of Using Buffers, Handlers, and Accessors:)
>>
endobj
514 0 obj
<<
/Dest [ 377 0 R /XYZ 40.01575 164.2394 0 ] /Next 515 0 R /Parent 512 0 R /Prev 513 0 R /Title (Disadvantages of Using Buffers, Handlers, and Accessors:)
>>
endobj
515 0 obj
<<
/Dest [ 378 0 R /XYZ 40.01575 747.0394 0 ] /Next 516 0 R /Parent 512 0 R /Prev 514 0 R /Title (Advantages of Using USM:)
>>
endobj
516 0 obj
<<
/Dest [ 378 0 R /XYZ 40.01575 578.6394 0 ] /Parent 512 0 R /Prev 515 0 R /Title (Disadvantages of Using USM:)
>>
endobj
517 0 obj
<<
/Count 25 /Dest [ 378 0 R /XYZ 40.01575 374.2394 0 ] /First 518 0 R /Last 541 0 R /Parent 387 0 R /Prev 507 0 R 
  /Title (5\) Next step: SYCL Essentials)
>>
endobj
518 0 obj
<<
/Dest [ 378 0 R /XYZ 40.01575 339.0394 0 ] /Next 519 0 R /Parent 517 0 R /Title (Introduction to SYCL Essentials)
>>
endobj
519 0 obj
<<
/Count 1 /Dest [ 380 0 R /XYZ 40.01575 411.0394 0 ] /First 520 0 R /Last 520 0 R /Next 521 0 R /Parent 517 0 R 
  /Prev 518 0 R /Title (Module 1: oneAPI Intro)
>>
endobj
520 0 obj
<<
/Dest [ 380 0 R /XYZ 40.01575 336.2394 0 ] /Parent 519 0 R /Title (Learning Objectives)
>>
endobj
521 0 obj
<<
/Count 1 /Dest [ 380 0 R /XYZ 40.01575 215.8394 0 ] /First 522 0 R /Last 522 0 R /Next 523 0 R /Parent 517 0 R 
  /Prev 519 0 R /Title (Module 2: DPCPP Program Structure)
>>
endobj
522 0 obj
<<
/Dest [ 380 0 R /XYZ 40.01575 141.0394 0 ] /Parent 521 0 R /Title (Learning Objectives)
>>
endobj
523 0 obj
<<
/Count 1 /Dest [ 381 0 R /XYZ 40.01575 741.0394 0 ] /First 524 0 R /Last 524 0 R /Next 525 0 R /Parent 517 0 R 
  /Prev 521 0 R /Title (Module 3: DPCPP Unified Shared Memory)
>>
endobj
524 0 obj
<<
/Dest [ 381 0 R /XYZ 40.01575 678.2394 0 ] /Parent 523 0 R /Title (Learning Objectives)
>>
endobj
525 0 obj
<<
/Count 1 /Dest [ 381 0 R /XYZ 40.01575 587.8394 0 ] /First 526 0 R /Last 526 0 R /Next 527 0 R /Parent 517 0 R 
  /Prev 523 0 R /Title (Module 4: DPCPP Sub-Groups)
>>
endobj
526 0 obj
<<
/Dest [ 381 0 R /XYZ 40.01575 525.0394 0 ] /Parent 525 0 R /Title (Learning Objectives)
>>
endobj
527 0 obj
<<
/Count 1 /Dest [ 381 0 R /XYZ 40.01575 434.6394 0 ] /First 528 0 R /Last 528 0 R /Next 529 0 R /Parent 517 0 R 
  /Prev 525 0 R /Title (Module 5: Intel\256 Advisor)
>>
endobj
528 0 obj
<<
/Dest [ 381 0 R /XYZ 40.01575 347.8394 0 ] /Parent 527 0 R /Title (Learning Objectives)
>>
endobj
529 0 obj
<<
/Count 1 /Dest [ 381 0 R /XYZ 40.01575 209.4394 0 ] /First 530 0 R /Last 530 0 R /Next 531 0 R /Parent 517 0 R 
  /Prev 527 0 R /Title (Module 6: VTune\222 Profiler)
>>
endobj
530 0 obj
<<
/Dest [ 381 0 R /XYZ 40.01575 134.6394 0 ] /Parent 529 0 R /Title (Learning Objectives)
>>
endobj
531 0 obj
<<
/Count 1 /Dest [ 382 0 R /XYZ 40.01575 787.0394 0 ] /First 532 0 R /Last 532 0 R /Next 533 0 R /Parent 517 0 R 
  /Prev 529 0 R /Title (Module 7: DPCPP Library)
>>
endobj
532 0 obj
<<
/Dest [ 382 0 R /XYZ 40.01575 712.2394 0 ] /Parent 531 0 R /Title (Learning Objectives)
>>
endobj
533 0 obj
<<
/Count 1 /Dest [ 382 0 R /XYZ 40.01575 621.8394 0 ] /First 534 0 R /Last 534 0 R /Next 535 0 R /Parent 517 0 R 
  /Prev 531 0 R /Title (Module 8: DPCPP Reduction)
>>
endobj
534 0 obj
<<
/Dest [ 382 0 R /XYZ 40.01575 559.0394 0 ] /Parent 533 0 R /Title (Learning Objectives)
>>
endobj
535 0 obj
<<
/Count 1 /Dest [ 382 0 R /XYZ 40.01575 450.6394 0 ] /First 536 0 R /Last 536 0 R /Next 537 0 R /Parent 517 0 R 
  /Prev 533 0 R /Title (Module 9: DPCPP Buffers And Accessors In Depth)
>>
endobj
536 0 obj
<<
/Dest [ 382 0 R /XYZ 40.01575 375.8394 0 ] /Parent 535 0 R /Title (Learning Objectives)
>>
endobj
537 0 obj
<<
/Count 1 /Dest [ 382 0 R /XYZ 40.01575 249.4394 0 ] /First 538 0 R /Last 538 0 R /Next 539 0 R /Parent 517 0 R 
  /Prev 535 0 R /Title (Module 10: DPCPP Graphs Scheduling Data Management)
>>
endobj
538 0 obj
<<
/Dest [ 382 0 R /XYZ 40.01575 162.6394 0 ] /Parent 537 0 R /Title (Learning Objectives)
>>
endobj
539 0 obj
<<
/Count 1 /Dest [ 383 0 R /XYZ 40.01575 787.0394 0 ] /First 540 0 R /Last 540 0 R /Next 541 0 R /Parent 517 0 R 
  /Prev 537 0 R /Title (Module 11: Intel\256 Distribution for GDB)
>>
endobj
540 0 obj
<<
/Dest [ 383 0 R /XYZ 40.01575 736.2394 0 ] /Parent 539 0 R /Title (Learning Objectives)
>>
endobj
541 0 obj
<<
/Count 1 /Dest [ 383 0 R /XYZ 40.01575 627.8394 0 ] /First 542 0 R /Last 542 0 R /Parent 517 0 R /Prev 539 0 R 
  /Title (Module 12: DPCPP Local Memory And Atomics)
>>
endobj
542 0 obj
<<
/Dest [ 383 0 R /XYZ 40.01575 553.0394 0 ] /Parent 541 0 R /Title (Learning Objectives)
>>
endobj
543 0 obj
<<
/Count 54 /Kids [ 4 0 R 5 0 R 94 0 R 187 0 R 281 0 R 322 0 R 323 0 R 324 0 R 325 0 R 326 0 R 
  330 0 R 331 0 R 332 0 R 333 0 R 334 0 R 335 0 R 336 0 R 337 0 R 338 0 R 339 0 R 
  342 0 R 345 0 R 346 0 R 348 0 R 349 0 R 350 0 R 351 0 R 352 0 R 353 0 R 354 0 R 
  357 0 R 358 0 R 359 0 R 362 0 R 363 0 R 364 0 R 365 0 R 366 0 R 367 0 R 368 0 R 
  369 0 R 370 0 R 371 0 R 372 0 R 373 0 R 374 0 R 375 0 R 376 0 R 377 0 R 378 0 R 
  380 0 R 381 0 R 382 0 R 383 0 R ] /Type /Pages
>>
endobj
544 0 obj
<<
/Length 878
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 775.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 30 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 4 Tm /F2 20 Tf 24 TL 211.492 0 Td (SYCL 101) Tj T* -211.492 0 Td ET
Q
Q
q
1 0 0 1 40.01575 721.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 24 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 3 Tm /F2 15 Tf 18 TL 230.9445 0 Td (version) Tj T* -230.9445 0 Td ET
Q
Q
q
1 0 0 1 40.01575 600 cm
Q
q
1 0 0 1 40.01575 579.6 cm
q
0 0 0 rg
BT 1 0 0 1 0 2.4 Tm /F2 12 Tf 14.4 TL 209.286 0 Td (Intel Corporation) Tj T* -209.286 0 Td ET
Q
Q
q
1 0 0 1 40.01575 494.5606 cm
Q
q
1 0 0 1 40.01575 474.1606 cm
q
0 0 0 rg
BT 1 0 0 1 0 2.4 Tm /F1 12 Tf 14.4 TL 203.256 0 Td (September 27, 2023) Tj T* -203.256 0 Td ET
Q
Q
q
1 0 0 1 40.01575 474.1606 cm
Q
q
1 0 0 1 40.01575 474.1606 cm
Q
 
endstream
endobj
545 0 obj
<<
/Length 75
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 799.0394 cm
Q
 
endstream
endobj
546 0 obj
<<
/Length 10639
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 775.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 30 re B*
Q
q
BT 1 0 0 1 0 4 Tm 24 TL /F2 20 Tf .12549 .262745 .360784 rg (Contents) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 56.23937 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 0 699.6 cm
q
BT 1 0 0 1 0 1.7 Tm 10.2 TL /F2 8.5 Tf 0 .4 .6 rg (SYCL 101) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 699.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F2 8.5 Tf 10.2 TL 67.274 0 Td (1) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 683.4 cm
q
BT 1 0 0 1 20 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1\) Heterogeneous Compute) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 683.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (1) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 667.2 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Heterogeneous vs. Homogeneous Computing Environments) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 667.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (1) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 651 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Homogeneous Compute) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 651 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (1) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 634.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 60 1.7 Tm /F1 8.5 Tf 10.2 TL (Heterogeneous Compute) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 634.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (1) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 618.6 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Advantages of Accelerators in Heterogeneous Computing) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 618.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (1) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 602.4 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Challenges using Accelerators in a Heterogeneous Computing Environment) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 602.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (2) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 586.2 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Software Development Techniques) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 586.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (2) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 570 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Summary) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 570 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (2) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 553.8 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Khronos SYCL) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 553.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (2) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 537.6 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Open Ecosystem) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 537.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (2) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 521.4 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Performance Across Devices) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 521.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (3) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 505.2 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Ease of Coding) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 505.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (3) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 489 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Portability and Future-Proofing) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 489 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (3) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 472.8 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Integration with Existing Codebases) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 472.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (3) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 456.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 60 1.7 Tm /F1 8.5 Tf 10.2 TL (Summary) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 456.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (3) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 440.4 cm
q
BT 1 0 0 1 20 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (2\) Why SYCL?) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 440.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (3) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 424.2 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (What is SYCL?) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 424.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (3) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 408 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Definition) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 408 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (3) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 391.8 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (SYCL Features) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 391.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (3) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 375.6 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Specifications) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 375.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (4) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 359.4 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Implementations) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 359.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (4) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 343.2 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (SYCL Basic Code: single_task) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 343.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (5) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 327 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (SYCL Advantages) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 327 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (5) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 310.8 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Basic SYCL Code #1: single_task) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 310.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (5) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 294.6 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Basic SYCL Code #2: parallel_for Hands-on) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 294.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (6) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 278.4 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Main SYCL concepts takeaways) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 278.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (7) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 262.2 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (SYCL Basic Code: parallel_for) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 262.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (8) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 246 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Conclusions) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 246 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (9) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 229.8 cm
q
BT 1 0 0 1 20 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (3\) Modern C++) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 229.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (9) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 213.6 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Uniform Initialization) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 213.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (9) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 197.4 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Introduction) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 197.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (9) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 181.2 cm
q
BT 1 0 0 1 80 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Expression Initialization) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 181.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (9) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 165 cm
q
BT 1 0 0 1 80 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Brace Initialization) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 165 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (10) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 148.8 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Why Should Uniform Initialization Be Used?) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 148.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (10) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 132.6 cm
q
BT 1 0 0 1 80 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Consistent Syntax) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 132.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (10) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 116.4 cm
q
BT 1 0 0 1 80 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Narrowing Conversions Are Not Allowed) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 116.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (11) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 100.2 cm
q
BT 1 0 0 1 80 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Fixes Most Vexing Parse) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 100.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (11) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 84 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Common Problems with Uniform Initialization) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 84 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (11) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 67.8 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Multithreading) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 67.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (12) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 51.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 60 1.7 Tm /F1 8.5 Tf 10.2 TL (Introduction) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 51.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (12) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 35.4 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Why Use Multithreading?) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 35.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (12) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 19.2 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Basic Concepts of Multithreading) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 19.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (13) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 3 cm
q
BT 1 0 0 1 80 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Concurrency and Parallelism) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 3 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (13) Tj T* -62.548 0 Td ET
Q
Q
q
Q
Q
Q
 
endstream
endobj
547 0 obj
<<
/Length 10672
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 53.83937 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 0 732 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (C++ Multithreading Syntax) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 732 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (13) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 715.8 cm
q
BT 1 0 0 1 80 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Creating a Thread) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 715.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (13) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 699.6 cm
q
BT 1 0 0 1 80 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Creating Multiple Threads) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 699.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (14) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 683.4 cm
q
BT 1 0 0 1 80 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Joining and Detaching Threads) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 683.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (14) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 667.2 cm
q
BT 1 0 0 1 80 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Commonly Used Methods of the Thread Class) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 667.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (15) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 651 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Problems with Multithreading) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 651 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (15) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 634.8 cm
q
BT 1 0 0 1 80 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Deadlock) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 634.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (15) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 618.6 cm
q
BT 1 0 0 1 80 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Race Conditions) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 618.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (16) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 602.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 60 1.7 Tm /F1 8.5 Tf 10.2 TL (Summary) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 602.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (16) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 586.2 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Smart Pointers) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 586.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (16) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 570 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (What are Smart Pointers and When Should They be Used?) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 570 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (17) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 553.8 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (std::unique_ptr) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 553.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (17) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 537.6 cm
q
BT 1 0 0 1 80 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Syntax) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 537.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (17) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 521.4 cm
q
BT 1 0 0 1 80 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Usage) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 521.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (17) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 505.2 cm
q
BT 1 0 0 1 80 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (std::make_unique) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 505.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (18) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 489 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (std::shared_ptr) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 489 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (18) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 472.8 cm
q
BT 1 0 0 1 80 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Syntax) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 472.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (18) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 456.6 cm
q
BT 1 0 0 1 80 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Usage) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 456.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (18) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 440.4 cm
q
BT 1 0 0 1 80 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (std::make_shared) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 440.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (19) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 424.2 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (std::weak_ptr) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 424.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (19) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 408 cm
q
BT 1 0 0 1 80 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Syntax) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 408 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (19) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 391.8 cm
q
BT 1 0 0 1 80 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Usage) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 391.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (19) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 375.6 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Hash Tables) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 375.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (20) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 359.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 60 1.7 Tm /F1 8.5 Tf 10.2 TL (Introduction) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 359.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (21) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 343.2 cm
q
BT 1 0 0 1 80 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Hashing Function) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 343.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (21) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 327 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (C++ Standard Library Hash Tables) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 327 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (21) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 310.8 cm
q
BT 1 0 0 1 80 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Set) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 310.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (21) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 294.6 cm
q
BT 1 0 0 1 80 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Map) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 294.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (22) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 278.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 60 1.7 Tm /F1 8.5 Tf 10.2 TL (Summary) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 278.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (22) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 262.2 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (std::array Container) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 262.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (23) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 246 cm
q
0 .4 .6 rg
BT 1 0 0 1 60 1.7 Tm /F1 8.5 Tf 10.2 TL (Introduction) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 246 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (23) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 229.8 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Syntax of std::array) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 229.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (23) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 213.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 80 1.7 Tm /F1 8.5 Tf 10.2 TL (Usage) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 213.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (24) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 197.4 cm
q
BT 1 0 0 1 80 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Multidimensional Array) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 197.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (24) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 181.2 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Move Semantics) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 181.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (24) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 165 cm
q
0 .4 .6 rg
BT 1 0 0 1 60 1.7 Tm /F1 8.5 Tf 10.2 TL (Introduction) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 165 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (24) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 148.8 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Value Categories \(glvalue and rvalue\)) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 148.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (24) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 132.6 cm
q
BT 1 0 0 1 80 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Functions Returning lvalue and prvalue) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 132.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (25) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 116.4 cm
q
BT 1 0 0 1 80 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (lvalue-to-prvalue Conversion) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 116.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (25) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 100.2 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Universal References \() Tj (&) Tj (&) Tj (\)) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 100.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (26) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 84 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (std::move) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 84 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (26) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 67.8 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Move Constructor and Rule of Five) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 67.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (27) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 51.6 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Lambdas) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 51.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (28) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 35.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 60 1.7 Tm /F1 8.5 Tf 10.2 TL (Introduction) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 35.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (28) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 19.2 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Parts of the Lambda Expression) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 19.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (28) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 3 cm
q
BT 1 0 0 1 80 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Capture Clause) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 3 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (29) Tj T* -62.548 0 Td ET
Q
Q
q
Q
Q
Q
 
endstream
endobj
548 0 obj
<<
/Length 11002
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 53.83937 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 0 732 cm
q
BT 1 0 0 1 80 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Parameter List) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 732 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (29) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 715.8 cm
q
BT 1 0 0 1 80 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Mutable Specification) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 715.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (29) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 699.6 cm
q
BT 1 0 0 1 80 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Exception Specification) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 699.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (30) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 683.4 cm
q
BT 1 0 0 1 80 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Return Type) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 683.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (30) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 667.2 cm
q
BT 1 0 0 1 80 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Lambda Body) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 667.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (30) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 651 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Type Inference in C++ \(auto and decltype\)) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 651 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (31) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 634.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 60 1.7 Tm /F1 8.5 Tf 10.2 TL (Introduction) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 634.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (31) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 618.6 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F3 8.5 Tf 0 0 0 rg (auto) Tj /F1 8.5 Tf 0 .4 .6 rg ( Keyword) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 618.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (31) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 602.4 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F3 8.5 Tf 0 0 0 rg (decltype) Tj /F1 8.5 Tf 0 .4 .6 rg ( Type Specifier) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 602.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (32) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 586.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 60 1.7 Tm /F1 8.5 Tf 10.2 TL (Summary) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 586.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (33) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 570 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Initializers in if and switch Statements) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 570 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (33) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 553.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 60 1.7 Tm /F1 8.5 Tf 10.2 TL (Introduction) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 553.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (33) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 537.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 60 1.7 Tm /F1 8.5 Tf 10.2 TL (Syntax) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 537.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (33) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 521.4 cm
q
BT 1 0 0 1 80 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Initializer Statement Outside the Conditional Blocks) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 521.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (33) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 505.2 cm
q
BT 1 0 0 1 80 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Initializer Statements in if and switch Blocks) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 505.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (34) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 489 cm
q
0 .4 .6 rg
BT 1 0 0 1 60 1.7 Tm /F1 8.5 Tf 10.2 TL (Summary) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 489 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (34) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 472.8 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Standard Template Library \(STL\) on Concurrent and Parallel Algorithms) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 472.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (34) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 456.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 60 1.7 Tm /F1 8.5 Tf 10.2 TL (Introduction) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 456.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (34) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 440.4 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (What are STL Algorithms?) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 440.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (34) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 424.2 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Execution Policies) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 424.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (35) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 408 cm
q
BT 1 0 0 1 80 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (sequenced_policy) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 408 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (35) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 391.8 cm
q
BT 1 0 0 1 80 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (parallel_policy) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 391.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (35) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 375.6 cm
q
BT 1 0 0 1 80 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (parallel_unsequenced_policy) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 375.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (36) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 359.4 cm
q
BT 1 0 0 1 80 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (unsequenced_policy) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 359.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (37) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 343.2 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Best Practices) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 343.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (37) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 327 cm
q
0 .4 .6 rg
BT 1 0 0 1 60 1.7 Tm /F1 8.5 Tf 10.2 TL (Summary) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 327 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (37) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 310.8 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Nested Namespaces) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 310.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (37) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 294.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 60 1.7 Tm /F1 8.5 Tf 10.2 TL (Introduction) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 294.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (38) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 278.4 cm
q
BT 1 0 0 1 80 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Defining a Namespace) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 278.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (38) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 262.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 60 1.7 Tm /F1 8.5 Tf 10.2 TL (Nested Namespaces) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 262.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (38) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 246 cm
q
BT 1 0 0 1 20 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (4\) SYCL Implementations of Modern C++) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 246 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (39) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 229.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 40 1.7 Tm /F1 8.5 Tf 10.2 TL (Introduction) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 229.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (39) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 213.6 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Conventional vector_add with SYCL) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 213.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (39) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 197.4 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (USM vector_add with SYCL) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 197.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (41) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 181.2 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (SYCL matrix_multiplication Using USM) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 181.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (42) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 165 cm
q
0 .4 .6 rg
BT 1 0 0 1 40 1.7 Tm /F1 8.5 Tf 10.2 TL (Summary) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 165 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (43) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 148.8 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Advantages of Using Buffers, Handlers, and Accessors:) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 148.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (43) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 132.6 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Disadvantages of Using Buffers, Handlers, and Accessors:) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 132.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (43) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 116.4 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Advantages of Using USM:) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 116.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (44) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 100.2 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Disadvantages of Using USM:) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 100.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (44) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 84 cm
q
BT 1 0 0 1 20 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (5\) Next step: SYCL Essentials) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 84 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (44) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 67.8 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Introduction to SYCL Essentials) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 67.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (44) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 51.6 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Module 1: oneAPI Intro) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 51.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (45) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 35.4 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Learning Objectives) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 35.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (45) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 19.2 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Module 2: DPCPP Program Structure) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 19.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (45) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 3 cm
q
0 .4 .6 rg
BT 1 0 0 1 60 1.7 Tm /F1 8.5 Tf 10.2 TL (Learning Objectives) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 3 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (45) Tj T* -62.548 0 Td ET
Q
Q
q
Q
Q
Q
 
endstream
endobj
549 0 obj
<<
/Length 4911
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 475.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 0 310.8 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Module 3: DPCPP Unified Shared Memory) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 310.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (46) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 294.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 60 1.7 Tm /F1 8.5 Tf 10.2 TL (Learning Objectives) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 294.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (46) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 278.4 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Module 4: DPCPP Sub-Groups) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 278.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (46) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 262.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 60 1.7 Tm /F1 8.5 Tf 10.2 TL (Learning Objectives) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 262.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (46) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 246 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Module 5: Intel\256 Advisor) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 246 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (46) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 229.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 60 1.7 Tm /F1 8.5 Tf 10.2 TL (Learning Objectives) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 229.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (46) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 213.6 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Module 6: VTune\231 Profiler) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 213.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (46) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 197.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 60 1.7 Tm /F1 8.5 Tf 10.2 TL (Learning Objectives) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 197.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (46) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 181.2 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Module 7: DPCPP Library) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 181.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (47) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 165 cm
q
0 .4 .6 rg
BT 1 0 0 1 60 1.7 Tm /F1 8.5 Tf 10.2 TL (Learning Objectives) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 165 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (47) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 148.8 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Module 8: DPCPP Reduction) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 148.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (47) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 132.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 60 1.7 Tm /F1 8.5 Tf 10.2 TL (Learning Objectives) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 132.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (47) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 116.4 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Module 9: DPCPP Buffers And Accessors In Depth) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 116.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (47) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 100.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 60 1.7 Tm /F1 8.5 Tf 10.2 TL (Learning Objectives) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 100.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (47) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 84 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Module 10: DPCPP Graphs Scheduling Data Management) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 84 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (47) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 67.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 60 1.7 Tm /F1 8.5 Tf 10.2 TL (Learning Objectives) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 67.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (47) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 51.6 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Module 11: Intel\256 Distribution for GDB) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 51.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (48) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 35.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 60 1.7 Tm /F1 8.5 Tf 10.2 TL (Learning Objectives) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 35.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (48) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 19.2 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (Module 12: DPCPP Local Memory And Atomics) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 19.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (48) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 3 cm
q
0 .4 .6 rg
BT 1 0 0 1 60 1.7 Tm /F1 8.5 Tf 10.2 TL (Learning Objectives) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 3 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (48) Tj T* -62.548 0 Td ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 475.0394 cm
Q
 
endstream
endobj
550 0 obj
<<
/Length 6856
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 763.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 30 re B*
Q
q
BT 1 0 0 1 0 4 Tm 24 TL /F2 20 Tf .12549 .262745 .360784 rg (SYCL 101) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 721.0394 cm
q
BT 1 0 0 1 0 26 Tm 2.590256 Tw 12 TL /F1 10 Tf 0 0 0 rg (Welcome to the ) Tj /F2 10 Tf (SYCL 101) Tj /F1 10 Tf ( course! In today's fast-paced world of computing, harnessing the full potential of) Tj T* 0 Tw 2.883099 Tw (hardware acceleration has become a necessity. SYCL, an open-standard, single-source programming model,) Tj T* 0 Tw (empowers developers to unlock the incredible power of heterogeneous computing environments.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 667.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F1 10 Tf 12 TL .209631 Tw (This comprehensive course is designed to provide you with a solid foundation in SYCL programming, equipping you) Tj T* 0 Tw 1.57894 Tw (with the knowledge and skills to leverage modern C++ for high-performance computing tasks. Whether you're a) Tj T* 0 Tw .346506 Tw (seasoned developer or just starting your journey in heterogeneous computing, SYCL 101 will guide you through the) Tj T* 0 Tw (essential concepts and best practices to succeed in this dynamic field.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 649.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Course Outline:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 619.0394 cm
q
BT 1 0 0 1 0 14 Tm 1.75493 Tw 12 TL /F2 10 Tf 0 0 0 rg (Heterogeneous Compute:) Tj /F1 10 Tf ( We begin by delving into the world of heterogeneous computing, understanding the) Tj T* 0 Tw (diverse hardware accelerators available today, and how SYCL enables seamless integration.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 577.0394 cm
q
BT 1 0 0 1 0 26 Tm .00377 Tw 12 TL /F2 10 Tf 0 0 0 rg (Why SYCL?:) Tj /F1 10 Tf ( Explore the compelling reasons why SYCL stands out as a powerful tool for GPU programming, FPGA) Tj T* 0 Tw 1.650341 Tw (development, and other heterogeneous compute environments. Basic real-world use cases will illustrate SYCL's) Tj T* 0 Tw (versatility.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 547.0394 cm
q
BT 1 0 0 1 0 14 Tm 2.071506 Tw 12 TL /F2 10 Tf 0 0 0 rg (Modern C++:) Tj /F1 10 Tf ( SYCL and modern C++ are a formidable combination. In this section, we'll cover essential C++) Tj T* 0 Tw (features and how they enhance SYCL programming, ensuring you're well-prepared for advanced topics.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 505.0394 cm
q
BT 1 0 0 1 0 26 Tm 2.700315 Tw 12 TL /F2 10 Tf 0 0 0 rg (SYCL Implementations of Modern C++:) Tj /F1 10 Tf ( Dive into memory management with a comparison of conventional) Tj T* 0 Tw 1.41294 Tw (approaches and Unified Shared Memory \(USM\). Discover how USM can optimize your SYCL code and improve) Tj T* 0 Tw (performance.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 475.0394 cm
q
BT 1 0 0 1 0 14 Tm .483005 Tw 12 TL /F2 10 Tf 0 0 0 rg (Next Step: SYCL Essentials:) Tj /F1 10 Tf ( As you wrap up the course, we'll introduce the free SYCL Essentials course as your) Tj T* 0 Tw (best next step in your SYCL journey to continue exploring this exciting field.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 433.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .209705 Tw (By the end of SYCL 101, you'll not only grasp the fundamental concepts of SYCL but also have basic practical skills) Tj T* 0 Tw 1.916123 Tw (to embark on more complex SYCL projects with confidence. So, let's get started on your journey to mastering) Tj T* 0 Tw (heterogeneous computing with SYCL!) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 397.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 25.2 re B*
Q
q
BT 1 0 0 1 0 3.2 Tm 19.2 TL /F2 16 Tf .12549 .262745 .360784 rg (1\) Heterogeneous Compute) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 365.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F2 14 Tf .12549 .262745 .360784 rg (Heterogeneous vs. Homogeneous Computing Environments) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 334.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F2 12 Tf .12549 .262745 .360784 rg (Homogeneous Compute) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 268.6394 cm
q
0 0 0 rg
BT 1 0 0 1 0 50 Tm /F1 10 Tf 12 TL 1.865535 Tw (Homogeneous computing refers to a system where all processing units are of the same type and have similar) Tj T* 0 Tw .131417 Tw (capabilities. In this setup, multiple identical processors work together to execute tasks in parallel. On the other hand,) Tj T* 0 Tw 1.866721 Tw (heterogeneous computing involves a system that combines different types of processing units, such as Central) Tj T* 0 Tw 3.346736 Tw (Processing Units \(CPUs\), Graphics Processing Units \(GPUs\), Field-Programmable Gate Arrays \(FPGAs\), or) Tj T* 0 Tw (specialized accelerators. Each processing unit is designed to perform specific tasks efficiently.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 214.6394 cm
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F1 10 Tf 12 TL 2.304578 Tw (One may choose homogeneous computing when the workload is well-suited for parallel execution on multiple) Tj T* 0 Tw 1.877756 Tw (identical processors. It simplifies programming as the same code can be executed on all processors, and load) Tj T* 0 Tw 5.005827 Tw (balancing among processors is relatively straightforward. Homogeneous computing is often employed in) Tj T* 0 Tw (high-performance computing \(HPC\) clusters and distributed systems that require large-scale parallel processing.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 184.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F2 12 Tf 14.4 TL (Heterogeneous Compute) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 118.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 50 Tm /F1 10 Tf 12 TL .729631 Tw (Heterogeneous computing is preferred when the workload consists of tasks that can benefit from different types of) Tj T* 0 Tw 1.371853 Tw (processing units. For example, GPUs excel at parallelizing graphics and general-purpose computing tasks, while) Tj T* 0 Tw 4.775341 Tw (FPGAs offer highly customizable and efficient processing for specific algorithms. By utilizing specialized) Tj T* 0 Tw .835341 Tw (accelerators, heterogeneous computing systems can achieve higher performance and energy efficiency for certain) Tj T* 0 Tw (workloads.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 87.83937 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F2 12 Tf .12549 .262745 .360784 rg (Advantages of Accelerators in Heterogeneous Computing) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 75.83937 cm
Q
q
1 0 0 1 40.01575 75.83937 cm
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (SYCL 101) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (1) Tj T* ET
Q
Q
 
endstream
endobj
551 0 obj
<<
/Length 7996
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 763.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (1.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.310315 Tw (Enhanced performance: Accelerators are specifically designed to excel at certain types of computations. By) Tj T* 0 Tw (offloading specific tasks to accelerators, overall performance can be significantly improved.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 757.0394 cm
Q
q
1 0 0 1 40.01575 733.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (2.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 2.806007 Tw (Energy efficiency: Accelerators are often optimized for a particular type of algorithm, allowing for better) Tj T* 0 Tw (performance per watt compared to general-purpose processors.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 727.0394 cm
Q
q
1 0 0 1 40.01575 703.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (3.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL -0.010994 Tw (Ability to further optimize code: Developers can use accelerators to tailor the hardware and software for specific) Tj T* 0 Tw (algorithms or applications, enabling higher performance and efficiency.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 703.0394 cm
Q
q
1 0 0 1 40.01575 672.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F2 12 Tf .12549 .262745 .360784 rg (Challenges using Accelerators in a Heterogeneous Computing Environment) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 660.6394 cm
Q
q
1 0 0 1 40.01575 660.6394 cm
Q
q
1 0 0 1 40.01575 624.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (1.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 5.536762 Tw (Programming complexity: Unlike homogeneous systems, heterogeneous computing requires different) Tj T* 0 Tw .727008 Tw (programming models and languages for various processing units. This complexity increases the development) Tj T* 0 Tw (effort.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 618.6394 cm
Q
q
1 0 0 1 40.01575 594.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (2.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.224161 Tw (Data movement: Efficiently moving data between different processing units can be a bottleneck. Developers) Tj T* 0 Tw (must carefully manage data transfers between host and device memory in order to minimize overhead.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 588.6394 cm
Q
q
1 0 0 1 40.01575 552.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (3.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .838776 Tw (Load balancing: In a heterogeneous system, workload distribution and load balancing become more complex) Tj T* 0 Tw .216711 Tw (due to the diverse capabilities of different processing units. Proper load balancing is essential to fully utilize the) Tj T* 0 Tw (system's resources.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 552.6394 cm
Q
q
1 0 0 1 40.01575 522.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F2 12 Tf .12549 .262745 .360784 rg (Software Development Techniques) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 492.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 2.323099 Tw (The software development techniques for homogeneous and heterogeneous computing have typically required) Tj T* 0 Tw (different approaches in the past.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 450.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .359578 Tw (In homogeneous computing, the programming model was typically based on parallel processing paradigms such as) Tj T* 0 Tw 2.228675 Tw (message passing \(MPI\) or multithreading \(OpenMP\). Developers focused on parallelizing code across multiple) Tj T* 0 Tw (identical processors and optimizing data dependencies and synchronization.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 384.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 50 Tm /F1 10 Tf 12 TL .913864 Tw (Heterogeneous computing typically used different programming models and APIs for each type of accelerator and) Tj T* 0 Tw 2.787238 Tw (CPU. For example, CUDA and ROCm are commonly used for programming vendor-specific GPUs, requiring) Tj T* 0 Tw .422594 Tw (developers to have a unique tool chain for each development target. In addition, developers would need to become) Tj T* 0 Tw .501705 Tw (familiar with how to design and optimize algorithms for each type of accelerator as well as how to best partition the) Tj T* 0 Tw (workload and manage data movement between different hosts and devices.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 353.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F2 12 Tf .12549 .262745 .360784 rg (Summary) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 263.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 74 Tm /F1 10 Tf 12 TL 2.949409 Tw (Homogeneous computing utilizes identical processors for parallel processing, while heterogeneous computing) Tj T* 0 Tw 2.106007 Tw (combines different processing units to achieve performance and efficiency gains for specific tasks. The choice) Tj T* 0 Tw .071606 Tw (between them depends on the nature of the workload. Accelerators in heterogeneous computing offer advantages in) Tj T* 0 Tw .728007 Tw (performance and efficiency but introduce challenges related to programming complexity, data movement, and load) Tj T* 0 Tw 1.263099 Tw (balancing. Software development techniques also differ, with homogeneous computing focusing on parallelization) Tj T* 0 Tw 3.691281 Tw (across identical processors and heterogeneous computing requiring different programming models for each) Tj T* 0 Tw (processing unit.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 221.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 1.92694 Tw (The oneAPI specification was created to address the challenges of managing multiple tool chains and multiple) Tj T* 0 Tw 1.670341 Tw (development environments. It delivers a unified software development environment across CPU and accelerator) Tj T* 0 Tw (architectures.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 189.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F2 14 Tf .12549 .262745 .360784 rg (Khronos SYCL) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 159.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .811853 Tw (The SYCL programming language from the Khronos Group offers several advantages for targeting heterogeneous) Tj T* 0 Tw (compute environments. Here are some key benefits:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 128.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F2 12 Tf .12549 .262745 .360784 rg (Open Ecosystem) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 74.63937 cm
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F1 10 Tf 12 TL 1.483005 Tw (SYCL is part of the broader oneAPI initiative, which aims to provide a unified and open programming model for) Tj T* 0 Tw 3.633392 Tw (heterogeneous computing. It is developed by an industry consortium, ensuring broad industry support and) Tj T* 0 Tw .963099 Tw (collaboration. The open ecosystem approach promotes interoperability and compatibility across different hardware) Tj T* 0 Tw (vendors, enabling developers to write code that can run on various accelerators and processors.) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (SYCL 101) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (2) Tj T* ET
Q
Q
 
endstream
endobj
552 0 obj
<<
/Length 6993
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 772.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F2 12 Tf .12549 .262745 .360784 rg (Performance Across Devices) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 706.6394 cm
q
0 0 0 rg
BT 1 0 0 1 0 50 Tm /F1 10 Tf 12 TL 1.52094 Tw (SYCL allows developers to write code that can be executed efficiently across different devices, including CPUs,) Tj T* 0 Tw .320292 Tw (GPUs, FPGAs, and other accelerators. SYCL leverages the power of modern hardware architectures by expressing) Tj T* 0 Tw 1.282623 Tw (parallelism and data dependencies through high-level abstractions, such as kernel functions and data accessors.) Tj T* 0 Tw .224273 Tw (This enables performance portability, allowing code to adapt and scale across diverse compute devices while taking) Tj T* 0 Tw (advantage of their specific capabilities.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 676.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F2 12 Tf .12549 .262745 .360784 rg (Ease of Coding) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 598.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 62 Tm /F1 10 Tf 12 TL 2.9957 Tw (SYCL is a familiar single-source, event-based programming model based on standard C++. Developers can) Tj T* 0 Tw 2.558273 Tw (leverage their existing C++ knowledge and skills to write code for heterogeneous systems. SYCL provides a) Tj T* 0 Tw 1.33894 Tw (higher-level abstraction than lower-level APIs like CUDA or OpenCL, making it easier to express parallelism and) Tj T* 0 Tw 2.34315 Tw (offload computations to accelerators. The SYCL programming model includes features such as task and data) Tj T* 0 Tw 3.008409 Tw (parallelism, memory management, and synchronization mechanisms, simplifying the development process for) Tj T* 0 Tw (heterogeneous computing.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 567.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F2 12 Tf .12549 .262745 .360784 rg (Portability and Future-Proofing) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 501.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 50 Tm /F1 10 Tf 12 TL .518864 Tw (SYCL promotes code portability across different hardware architectures. Developers can write SYCL code to target) Tj T* 0 Tw 2.344578 Tw (multiple devices with minimal modifications, reducing the effort required to adapt their applications to different) Tj T* 0 Tw .675292 Tw (hardware platforms. Additionally, the open ecosystem and industry collaboration behind oneAPI provides a level of) Tj T* 0 Tw 4.679508 Tw (future-proofing, ensuring that SYCL remains compatible with new generations of hardware and software) Tj T* 0 Tw (advancements.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 471.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F2 12 Tf .12549 .262745 .360784 rg (Integration with Existing Codebases) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 417.4394 cm
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F1 10 Tf 12 TL 2.409508 Tw (SYCL allows developers to integrate accelerators and heterogeneous computing capabilities into their existing) Tj T* 0 Tw 3.152008 Tw (software projects. By leveraging SYCL, developers can selectively offload computationally intensive tasks to) Tj T* 0 Tw 1.454161 Tw (accelerators while keeping the rest of their codebase unchanged. This integration capability enables incremental) Tj T* 0 Tw (adoption of heterogeneous computing and maximizes the benefits of existing software investments.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 387.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F2 12 Tf 14.4 TL (Summary) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 333.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F1 10 Tf 12 TL 1.22294 Tw (Overall, SYCL offers the advantages of an open ecosystem, performance portability across devices, and ease of) Tj T* 0 Tw 3.378776 Tw (coding by providing a high-level, C++-based programming model. It enables developers to efficiently target) Tj T* 0 Tw 3.392409 Tw (heterogeneous compute environments, leverage diverse hardware capabilities, and simplify the development) Tj T* 0 Tw (process for accelerated computing applications.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 297.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 25.2 re B*
Q
q
BT 1 0 0 1 0 3.2 Tm 19.2 TL /F2 16 Tf .12549 .262745 .360784 rg (2\) Why SYCL?) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 265.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F2 14 Tf .12549 .262745 .360784 rg (What is SYCL?) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 234.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F2 12 Tf .12549 .262745 .360784 rg (Definition) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 144.6394 cm
q
0 0 0 rg
BT 1 0 0 1 0 74 Tm /F1 10 Tf 12 TL .035256 Tw (SYCL is a high-level single-source standard C++ programming model that can target a wide range of heterogeneous) Tj T* 0 Tw 1.222273 Tw (platforms. SYCL is an industry-driven standard developed by Khronos Group and announced in March 2014 that) Tj T* 0 Tw .595606 Tw (allows data parallelism for heterogeneous systems based on C++ 17. It is a royalty-free, cross-platform abstraction) Tj T* 0 Tw 1.22294 Tw (layer that enables the development of applications and frameworks with the portability and efficiency of OpenCL,) Tj T* 0 Tw .103373 Tw (while providing a user interface that's flexible and easy to use. SYCL standard is designed to be both highly portable) Tj T* 0 Tw 2.73815 Tw (and highly efficient and allows applications to offload compute kernels and data transfer to OpenCL-enabled) Tj T* 0 Tw (accelerators such as GPUs, FPGAs, and other processors.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 114.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F2 12 Tf .12549 .262745 .360784 rg (SYCL Features) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 102.2394 cm
Q
q
1 0 0 1 40.01575 102.2394 cm
Q
q
1 0 0 1 40.01575 66.23937 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 26 Tm -0.05185 Tw 12 TL /F2 10 Tf 0 0 0 rg (SYCL is modern standard C++:) Tj /F1 10 Tf ( Unlike many other programming models and languages that require language) Tj T* 0 Tw -0.099785 Tw (extensions, SYCL does not need any of that. It is pure standard C++; any SYCL application will compile and run) Tj T* 0 Tw (using a SYCL library, even if a device compiler and a device are not available in your system.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 60.23937 cm
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (2\) Why SYCL?) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3) Tj T* ET
Q
Q
 
endstream
endobj
553 0 obj
<<
/Length 10723
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 751.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 26 Tm 2.174273 Tw 12 TL /F2 10 Tf 0 0 0 rg (SYCL is open, multivendor, and multiarchitecture:) Tj /F1 10 Tf ( Because there is no need to copy data, it enables) Tj T* 0 Tw .28294 Tw (pointer-based algorithms and data structures to be used across architectures of different vendors and makes it) Tj T* 0 Tw (easier to use the same code on different devices.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 745.0394 cm
Q
q
1 0 0 1 40.01575 709.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 26 Tm .718381 Tw 12 TL /F2 10 Tf 0 0 0 rg (Separation of data access and data storage:) Tj /F1 10 Tf ( When using buffers and accessors in SYCL, the data access) Tj T* 0 Tw 1.09894 Tw (and data storage are kept separate. This allows the programmer to create data-parallel tasks easily, without) Tj T* 0 Tw (needing to manually track data movement and event dependencies between kernels.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 703.0394 cm
Q
q
1 0 0 1 40.01575 679.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm .614358 Tw 12 TL /F2 10 Tf 0 0 0 rg (No need to copy data:) Tj /F1 10 Tf ( Unified Shared Memory \(USM\) allows different devices, such as CPUs and GPUs, to) Tj T* 0 Tw (share and access data without having to copy it between them.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 673.0394 cm
Q
q
1 0 0 1 40.01575 637.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 26 Tm 1.01815 Tw 12 TL /F2 10 Tf 0 0 0 rg (Ease of hierarchical parallelism:) Tj /F1 10 Tf ( Inspired by OpenCL and OpenMP, SYCL makes data parallelism easy to) Tj T* 0 Tw .900292 Tw (understand by using hierarchical parallelism and modern C++ instructions, so tasks are easily organized and) Tj T* 0 Tw (synchronized, which makes the code more efficient and less fragmented.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 631.0394 cm
Q
q
1 0 0 1 40.01575 595.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 26 Tm 1.829006 Tw 12 TL /F2 10 Tf 0 0 0 rg (Two compilation phases:) Tj /F1 10 Tf ( SYCL requires two compilation passes, one for the host code and one for the) Tj T* 0 Tw .39494 Tw (device code. However, unlike OpenCL, SYCL is single-source, meaning there is only one executable. The two) Tj T* 0 Tw (compilations can be made by the same compiler.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 589.0394 cm
Q
q
1 0 0 1 40.01575 553.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 26 Tm 2.266409 Tw 12 TL /F2 10 Tf 0 0 0 rg (High-level programming model:) Tj /F1 10 Tf ( SYCL provides several high-level abstractions over common boilerplate) Tj T* 0 Tw 2.890315 Tw (code in OpenCL and other backends. This includes selecting devices, allocating storage, copying data,) Tj T* 0 Tw (managing dependencies, scheduling kernels, and much more.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 553.0394 cm
Q
q
1 0 0 1 40.01575 522.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F2 12 Tf .12549 .262745 .360784 rg (Specifications) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 468.6394 cm
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F1 10 Tf 12 TL 5.513675 Tw (SYCL utilizes specifications to standardize and streamline the development of parallel applications for) Tj T* 0 Tw .305827 Tw (heterogeneous architectures, enabling portability, productivity, and performance while fostering a vibrant community) Tj T* 0 Tw 4.090292 Tw (of SYCL users and providers. New specifications are being released to accommodate new features and) Tj T* 0 Tw (technological advances.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 450.6394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The SYCL specifications that have been published as of today are:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 444.6394 cm
Q
q
1 0 0 1 40.01575 444.6394 cm
Q
q
1 0 0 1 40.01575 432.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (SYCL 1.2) Tj /F1 10 Tf (: Specification released in May of 2015: It is considered obsolete.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 426.6394 cm
Q
q
1 0 0 1 40.01575 414.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (SYCL 2.2) Tj /F1 10 Tf (: It was a provisional specification published in 2016 that is considered deprecated.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 408.6394 cm
Q
q
1 0 0 1 40.01575 396.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (SYCL 1.2.1) Tj /F1 10 Tf (: Its latest revision was released on April 27, 2020.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 390.6394 cm
Q
q
1 0 0 1 40.01575 378.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (SYCL 2020) Tj /F1 10 Tf (: Specification revision 7 released on April 18, 2023.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 378.6394 cm
Q
q
1 0 0 1 40.01575 360.6394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The SYCL 2020 specification marks a significant leap forward that features over 40 new improvements, such as:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 354.6394 cm
Q
q
1 0 0 1 40.01575 354.6394 cm
Q
q
1 0 0 1 40.01575 342.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (Unified Shared Memory \(USM\)) Tj /F1 10 Tf (, enabling code with pointers to work naturally without buffers or accessors.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 336.6394 cm
Q
q
1 0 0 1 40.01575 312.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm 2.03493 Tw 12 TL /F2 10 Tf 0 0 0 rg (Parallel reductions) Tj /F1 10 Tf (, adding a built-in reduction operation and helping to avoid boilerplate code, providing) Tj T* 0 Tw (maximum performance for hardware with built-in operations.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 306.6394 cm
Q
q
1 0 0 1 40.01575 294.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (Work group and sub-group algorithms) Tj /F1 10 Tf (, enabling efficient operations between work items.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 288.6394 cm
Q
q
1 0 0 1 40.01575 264.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm 3.508675 Tw 12 TL /F2 10 Tf 0 0 0 rg (Class template argument deduction \(CTAD\)) Tj /F1 10 Tf ( and deduction guides to enable simpler class template) Tj T* 0 Tw (instantiation.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 258.6394 cm
Q
q
1 0 0 1 40.01575 234.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm -0.054708 Tw 12 TL /F2 10 Tf 0 0 0 rg (Simplification of accessors) Tj /F1 10 Tf (, which adds a built-in reduction operation, reduces the burden of boilerplate code,) Tj T* 0 Tw (and enables simplified C++ patterns.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 228.6394 cm
Q
q
1 0 0 1 40.01575 216.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (Expanded interoperability) Tj /F1 10 Tf ( with different backends, enabling support for backends other than OpenCL.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 210.6394 cm
Q
q
1 0 0 1 40.01575 186.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm 2.292435 Tw 12 TL /F2 10 Tf 0 0 0 rg (Improvements to atomic operations) Tj /F1 10 Tf ( to be closer to C++ atomics to enable more parallel programming) Tj T* 0 Tw (freedom.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 186.6394 cm
Q
q
1 0 0 1 40.01575 156.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F2 12 Tf .12549 .262745 .360784 rg (Implementations) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 78.23937 cm
q
0 0 0 rg
BT 1 0 0 1 0 62 Tm /F1 10 Tf 12 TL .589116 Tw (A SYCL implementation refers to a software version or revision of the SYCL programming model. It consists of the) Tj T* 0 Tw 2.466506 Tw (necessary tools, libraries, and runtime support that enable developers to write SYCL code and execute it on) Tj T* 0 Tw .837008 Tw (compatible hardware platforms. Different vendors and organizations can provide their own SYCL implementations,) Tj T* 0 Tw .47815 Tw (each with its own set of features, optimizations, and supported hardware platforms. These implementations provide) Tj T* 0 Tw 1.001606 Tw (the necessary compiler, libraries, and runtime components to enable developers to write and execute SYCL code) Tj T* 0 Tw (efficiently on their respective platforms.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 60.23937 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (These are some of the popular SYCL implementations that are available:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 54.85039 cm
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (2\) Why SYCL?) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (4) Tj T* ET
Q
Q
 
endstream
endobj
554 0 obj
<<
/Length 10016
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 685.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 96 cm
Q
q
1 0 0 1 20 96 cm
Q
q
1 0 0 1 20 72 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm .915227 Tw 12 TL /F2 10 Tf 0 0 0 rg (DPCP++) Tj /F1 10 Tf ( by Intel as part of the oneAPI solution that supports Intel CPUs, GPUs, and FPGAs as well as) Tj T* 0 Tw (NVIDIA and AMD GPUs) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ComputeCpp) Tj /F1 10 Tf ( by Codeplay) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (TriSYCL) Tj /F1 10 Tf ( by Xilinx) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (Open SYCL) Tj /F1 10 Tf ( \(formerly hipSYCL\) by the University of Heidelberg) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (neoSYCL) Tj /F1 10 Tf ( by the Tohoku University) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 685.0394 cm
Q
q
1 0 0 1 40.01575 679.0394 cm
Q
q
1 0 0 1 40.01575 679.0394 cm
Q
q
1 0 0 1 40.01575 667.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Source: Khronos \() Tj 0 .4 .6 rg (https://www.khronos.org/sycl/) Tj 0 0 0 rg (\)) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 667.0394 cm
Q
q
1 0 0 1 40.01575 634.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F2 14 Tf .12549 .262745 .360784 rg (SYCL Basic Code: single_task) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 604.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.297008 Tw (SYCL offers many advantages to developers, including improved productivity, better performance, and enhanced) Tj T* 0 Tw (code maintainability. In this lesson, you will gain an overall understanding of basic SYCL features and concepts.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 573.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F2 12 Tf .12549 .262745 .360784 rg (SYCL Advantages) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 543.8394 cm
q
BT 1 0 0 1 0 14 Tm .004578 Tw 12 TL /F2 10 Tf 0 0 0 rg (1.) Tj /F1 10 Tf ( SYCL provides an ) Tj /F2 10 Tf (easier programming model for heterogeneous applications) Tj /F1 10 Tf ( than traditional models such as) Tj T* 0 Tw (OpenCL or CUDA.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 525.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (2.) Tj /F1 10 Tf ( SYCL ) Tj /F2 10 Tf (supports modern C++ language features) Tj /F1 10 Tf ( and can help simplify writing portable and maintainable code.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 495.8394 cm
q
BT 1 0 0 1 0 14 Tm 2.821853 Tw 12 TL /F2 10 Tf 0 0 0 rg (3.) Tj /F1 10 Tf ( SYCL allows developers to take advantage of heterogeneous hardware architectures and ) Tj /F2 10 Tf (utilize multiple) Tj T* 0 Tw (processors or accelerators simultaneously) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 477.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (4.) Tj /F1 10 Tf ( SYCL provides an abstraction layer that makes it ) Tj /F2 10 Tf (easier to port code to different hardware) Tj /F1 10 Tf ( architectures.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 459.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (5.) Tj /F1 10 Tf ( SYCL enables the development of ) Tj /F2 10 Tf (high-performance) Tj /F1 10 Tf ( and ) Tj /F2 10 Tf (data-parallel) Tj /F1 10 Tf ( applications.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 441.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (6.) Tj /F1 10 Tf ( SYCL ) Tj /F2 10 Tf (allows third-party vendors to provide tools) Tj /F1 10 Tf ( that help optimize code for different hardware architectures.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 411.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F2 12 Tf .12549 .262745 .360784 rg (Basic SYCL Code #1: single_task) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 333.4394 cm
q
BT 1 0 0 1 0 62 Tm 1.851506 Tw 12 TL /F1 10 Tf 0 0 0 rg (In this subsection, we present a code with a simple SYCL algorithm called ) Tj /F3 10 Tf (single_task) Tj /F1 10 Tf (, which equivalent in) Tj T* 0 Tw .446007 Tw (standard C++ would be ) Tj /F3 10 Tf (std::thread) Tj /F1 10 Tf (, to gain a fundamental understanding of SYCL components. ) Tj /F2 10 Tf (The construct) Tj /F1 10 Tf  T* 0 Tw 1.647888 Tw /F3 10 Tf (single_task) Tj /F1 10 Tf ( ) Tj /F2 10 Tf (is used to define a unit of work that should be executed on a single processing element,) Tj T* 0 Tw 1.139719 Tw (typically a single CPU core or GPU thread.) Tj /F1 10 Tf ( Our goal in this code is to modify specifically the 6th element of a) Tj T* 0 Tw 1.719578 Tw (10-size vector using the SYCL ) Tj /F3 10 Tf (single_task) Tj /F1 10 Tf ( command. We will provide a comprehensive explanation of each) Tj T* 0 Tw (segment of the code.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 62.63937 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 254 Tm 12 TL /F3 10 Tf .313725 .439216 .564706 rg (#include) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .25098 .501961 .501961 rg (<) Tj (CL/sycl.hpp) Tj (>) Tj /F3 10 Tf .313725 .439216 .564706 rg  T* /F5 10 Tf 0 .501961 0 rg (using) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (namespace) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (sycl) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T*  T* /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .376471 .690196 rg (main) Tj /F3 10 Tf 0 0 0 rg (\(\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T*  T* (    ) Tj 0 0 0 rg (queue) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (Q) Tj (;) Tj .733333 .733333 .733333 rg (                        ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// The queue, Q, is the object that) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (                                    ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// submits the task to a device.) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (    ) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (const) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (size) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (10) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* (    ) Tj 0 0 0 rg (buffer) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (A) Tj ({) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (size) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (};) Tj .733333 .733333 .733333 rg (          ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// The buffer, A, is the memory used to) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (                                    ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// transfer data between host and device.) Tj T* /F3 10 Tf .733333 .733333 .733333 rg  T* (    ) Tj 0 0 0 rg (Q) Tj (.) Tj (submit) Tj (\([) Tj .188235 .188235 .188235 rg (&) Tj 0 0 0 rg (]\() Tj (handler) Tj .188235 .188235 .188235 rg (&) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (h) Tj (\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg (      ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// The handler, h, is the object that contains) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (                                    ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// the single_task function to be used.) Tj T* /F3 10 Tf .733333 .733333 .733333 rg  T* (        ) Tj 0 0 0 rg (accessor) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (A_acc) Tj (\() Tj (A) Tj (,) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (h) Tj (\);) Tj .733333 .733333 .733333 rg (       ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// The accessor, A_acc, is the object that) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (                                    ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// efficiently accesses the buffer elements.) Tj T* /F3 10 Tf .733333 .733333 .733333 rg  T* (        ) Tj 0 0 0 rg (h) Tj (.) Tj (single_task) Tj (\([) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg (]\(\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (            ) Tj 0 0 0 rg (A_acc) Tj ([) Tj /F5 10 Tf 0 0 .815686 rg (5) Tj /F3 10 Tf 0 0 0 rg (]) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (77) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* (            ) Tj 0 0 0 rg (}\);) Tj .733333 .733333 .733333 rg  T*  T* (        ) Tj 0 0 0 rg (}\);) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (2\) Why SYCL?) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (5) Tj T* ET
Q
Q
 
endstream
endobj
555 0 obj
<<
/Length 9774
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 672.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
1 .941176 .941176 rg
n 204 36 18 12 re f*
1 .941176 .941176 rg
n 312 36 6 12 re f*
1 .941176 .941176 rg
n 318 36 12 12 re f*
1 .941176 .941176 rg
n 330 36 6 12 re f*
BT 1 0 0 1 0 98 Tm 12 TL /F3 10 Tf .733333 .733333 .733333 rg  T* (    ) Tj 0 0 0 rg (host_accessor) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (result) Tj (\() Tj (A) Tj (\);) Tj .733333 .733333 .733333 rg (        ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// host_accessor is the object that allows) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (                                    ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// the host to access the buffer memory.) Tj T* /F3 10 Tf .733333 .733333 .733333 rg  T* (    ) Tj /F5 10 Tf 0 .501961 0 rg (for) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (\() Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (size) Tj (;) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj .188235 .188235 .188235 rg (++) Tj 0 0 0 rg (\)) Tj .733333 .733333 .733333 rg (  ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// Print output) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (        ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (cout) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (result) Tj ([) Tj (i) Tj (]) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj .729412 .129412 .129412 rg (" ") Tj 0 0 0 rg (;) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (cout) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj .729412 .129412 .129412 rg (") Tj /F5 10 Tf .376471 .376471 .376471 rg (\\n) Tj /F3 10 Tf .729412 .129412 .129412 rg (") Tj 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* (    ) Tj /F5 10 Tf 0 .501961 0 rg (return) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T*  T* 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 616.2394 cm
q
BT 1 0 0 1 0 38 Tm .51894 Tw 12 TL /F1 10 Tf 0 0 0 rg (In SYCL code, several fundamental components play vital roles in coordinating work, managing data, and ensuring) Tj T* 0 Tw -0.091524 Tw (seamless communication between the host and device. One of these essential elements is the ) Tj /F3 10 Tf (queue) Tj /F1 10 Tf (, denoted as ) Tj /F3 10 Tf (Q) Tj /F1 10 Tf (.) Tj T* 0 Tw 1.472006 Tw (The queue serves as the central construct used to submit work items, control execution flow, and facilitate data) Tj T* 0 Tw (transfers in a parallel and heterogeneous computing environment, such as CPUs or GPUs.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 574.2394 cm
q
BT 1 0 0 1 0 26 Tm .740829 Tw 12 TL /F1 10 Tf 0 0 0 rg (Another critical component is the ) Tj /F3 10 Tf (buffer) Tj /F1 10 Tf (, represented as ) Tj /F3 10 Tf (A) Tj /F1 10 Tf (. This ) Tj /F3 10 Tf (buffer) Tj /F1 10 Tf ( serves as a data container that defines) Tj T* 0 Tw 2.058476 Tw (the region of memory accessible by both the host and the device, enabling efficient data sharing and transfer) Tj T* 0 Tw (between them.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 556.2394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Another fundamental concept in SYCL programming is the ) Tj /F2 10 Tf (command group) Tj /F1 10 Tf ( that, in our code, it is defined by:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 489.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 50 Tm 12 TL /F3 10 Tf 0 0 0 rg (Q) Tj (.) Tj (submit) Tj (\([) Tj .188235 .188235 .188235 rg (&) Tj 0 0 0 rg (]\() Tj (handler) Tj .188235 .188235 .188235 rg (&) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (h) Tj (\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T*  T* (    ) Tj 0 0 0 rg (...) Tj .733333 .733333 .733333 rg  T*  T* 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 457.4394 cm
q
BT 1 0 0 1 0 14 Tm 1.434426 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F2 10 Tf (command group) Tj /F1 10 Tf ( represents a unit of work that can be submitted to a SYCL queue for execution; its main) Tj T* 0 Tw (function is to define the operations or computations that are to be performed on the target device.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 439.4394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The command group needs the ) Tj /F3 10 Tf (accessor) Tj /F1 10 Tf (:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 420.6394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (accessor) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .376471 .690196 rg (A_acc) Tj /F3 10 Tf 0 0 0 rg (\() Tj (A) Tj (,) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (h) Tj (\);) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 388.6394 cm
q
BT 1 0 0 1 0 14 Tm .207606 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F3 10 Tf (accessor) Tj /F1 10 Tf (, ) Tj /F3 10 Tf (A_acc) Tj /F1 10 Tf (, is the object used to define the access rights \() Tj /F3 10 Tf (read-only) Tj /F1 10 Tf (, ) Tj /F3 10 Tf (write-only) Tj /F1 10 Tf (, or ) Tj /F3 10 Tf (read-write) Tj /F1 10 Tf (\)) Tj T* 0 Tw (of specific kernels to the buffer elements.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 358.6394 cm
q
BT 1 0 0 1 0 14 Tm .272594 Tw 12 TL /F1 10 Tf 0 0 0 rg (Inside of the command group resides the specific ) Tj /F2 10 Tf (SYCL kernel function) Tj /F1 10 Tf (, which is ) Tj /F3 10 Tf (single_task) Tj /F1 10 Tf ( in this case. Note) Tj T* 0 Tw (that ) Tj /F3 10 Tf (single_task) Tj /F1 10 Tf ( is provided by the handler, ) Tj /F3 10 Tf (h) Tj /F1 10 Tf (:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 315.8394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 26 Tm 12 TL /F3 10 Tf 0 0 0 rg (h) Tj (.) Tj (single_task) Tj (\([) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg (]\(\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (    ) Tj 0 0 0 rg (A_acc) Tj ([) Tj /F5 10 Tf 0 0 .815686 rg (5) Tj /F3 10 Tf 0 0 0 rg (]) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (77) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (}\);) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 259.8394 cm
q
BT 1 0 0 1 0 38 Tm 2.531417 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F3 10 Tf (handler) Tj /F1 10 Tf ( is the object that represents a context in which command groups are defined. It specifies the) Tj T* 0 Tw -0.03906 Tw (operations and dependencies within a command group and controls the execution behavior of those operations. One) Tj T* 0 Tw .404277 Tw (consideration to keep in mind is that only one SYCL ) Tj /F2 10 Tf (kernel function) Tj /F1 10 Tf (, even if it is the same, can be executed in the) Tj T* 0 Tw (command group.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 241.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F2 10 Tf (kernel function) Tj /F1 10 Tf ( in this case is:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 223.0394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (A_acc) Tj ([) Tj /F5 10 Tf 0 0 .815686 rg (5) Tj /F3 10 Tf 0 0 0 rg (]) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (77) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 203.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Note that a lambda function can be used as kernel function as well.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 172.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F2 12 Tf .12549 .262745 .360784 rg (Basic SYCL Code #2: parallel_for Hands-on) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 154.6394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (To become familiar with the SYCL structure, we propose the following hands-on exercise for you to think about:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 124.6394 cm
q
BT 1 0 0 1 0 14 Tm .069689 Tw 12 TL /F2 10 Tf 0 0 0 rg (Create a variation of the) Tj /F1 10 Tf ( ) Tj /F3 10 Tf (single_task) Tj /F1 10 Tf ( ) Tj /F2 10 Tf (code that changes, in one step, all elements of a 10-size vector to the) Tj T* 0 Tw (value of 77.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 57.83937 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 50 Tm 12 TL /F3 10 Tf .313725 .439216 .564706 rg (#include) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .25098 .501961 .501961 rg (<) Tj (CL/sycl.hpp) Tj (>) Tj /F3 10 Tf .313725 .439216 .564706 rg  T* /F5 10 Tf 0 .501961 0 rg (using) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (namespace) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (sycl) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T*  T* /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .376471 .690196 rg (main) Tj /F3 10 Tf 0 0 0 rg (\(\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T*  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (2\) Why SYCL?) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (6) Tj T* ET
Q
Q
 
endstream
endobj
556 0 obj
<<
/Length 9291
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 408.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
1 .941176 .941176 rg
n 204 36 18 12 re f*
1 .941176 .941176 rg
n 312 36 6 12 re f*
1 .941176 .941176 rg
n 318 36 12 12 re f*
1 .941176 .941176 rg
n 330 36 6 12 re f*
BT 1 0 0 1 0 362 Tm 12 TL /F3 10 Tf .733333 .733333 .733333 rg (    ) Tj 0 0 0 rg (queue) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (Q) Tj (;) Tj .733333 .733333 .733333 rg (                        ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// The queue, Q, is the object that) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (                                    ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// submits the task to a device.) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (    ) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (const) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (size) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (10) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* (    ) Tj 0 0 0 rg (buffer) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (A) Tj ({) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (size) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (};) Tj .733333 .733333 .733333 rg (          ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// The buffer, A, is the memory used to) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (                                    ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// transfer data between host and device.) Tj T* /F3 10 Tf .733333 .733333 .733333 rg  T*  T*  T* (    ) Tj /F4 10 Tf .501961 .501961 .501961 rg (//********** YOUR CODE STARTS HERE **********//) Tj T* /F3 10 Tf .733333 .733333 .733333 rg  T* (    ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// Step 1\) Submit the queue with the handler definition:) Tj T* /F3 10 Tf .733333 .733333 .733333 rg  T* (    ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// Step 2\) Define the accessor with buffer and handler:) Tj T* /F3 10 Tf .733333 .733333 .733333 rg  T* (    ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// Step 3\) Call parallel_for from the handler specifying range and index:) Tj T* /F3 10 Tf .733333 .733333 .733333 rg  T* (    ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// Step 4\) Change the accessor elements with the desired value using the index:) Tj T* /F3 10 Tf .733333 .733333 .733333 rg  T*  T* (    ) Tj /F4 10 Tf .501961 .501961 .501961 rg (//********** YOUR CODE ENDS HERE **********//) Tj T* /F3 10 Tf .733333 .733333 .733333 rg  T*  T*  T* (    ) Tj 0 0 0 rg (host_accessor) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (result) Tj (\() Tj (A) Tj (\);) Tj .733333 .733333 .733333 rg (        ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// host_accessor is the object that allows) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (                                    ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// the host to access the buffer memory.) Tj T* /F3 10 Tf .733333 .733333 .733333 rg  T* (    ) Tj /F5 10 Tf 0 .501961 0 rg (for) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (\() Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (size) Tj (;) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj .188235 .188235 .188235 rg (++) Tj 0 0 0 rg (\)) Tj .733333 .733333 .733333 rg (  ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// Print output) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (        ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (cout) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (result) Tj ([) Tj (i) Tj (]) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj .729412 .129412 .129412 rg (" ") Tj 0 0 0 rg (;) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (cout) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj .729412 .129412 .129412 rg (") Tj /F5 10 Tf .376471 .376471 .376471 rg (\\n) Tj /F3 10 Tf .729412 .129412 .129412 rg (") Tj 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* (    ) Tj /F5 10 Tf 0 .501961 0 rg (return) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T*  T* 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 388.2394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If you are thinking that ) Tj /F3 10 Tf (single_task) Tj /F1 10 Tf ( might not be the best approach you are in the right track.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 376.2394 cm
Q
q
1 0 0 1 40.01575 319.4394 cm
q
.933333 .933333 .933333 rg
n 0 56.8 515.2441 -56.8 re f*
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 6 38.8 Tm  T* ET
q
1 0 0 1 8 32 cm
q
0 0 0 rg
BT 1 0 0 1 0 2.8 Tm /F2 14 Tf 16.8 TL (Note) Tj T* ET
Q
Q
q
1 0 0 1 8 8 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The best way to tackle this is with the use of ) Tj /F3 10 Tf (parallel_for) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 J
1 j
.8 .8 .8 RG
.5 w
n 0 56.8 m 515.2441 56.8 l S
n 0 0 m 515.2441 0 l S
n 0 0 m 0 56.8 l S
n 515.2441 0 m 515.2441 56.8 l S
Q
Q
Q
q
1 0 0 1 40.01575 313.4394 cm
Q
q
1 0 0 1 40.01575 295.4394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The solution to this ) Tj /F3 10 Tf (parallel_for) Tj /F1 10 Tf ( hands-on exercise is in the next section.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 265.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F2 12 Tf .12549 .262745 .360784 rg (Main SYCL concepts takeaways) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 223.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 2.61694 Tw (To recap, let's revisit the main concepts introduced in this section for expressing parallelism, managing data) Tj T* 0 Tw 4.24815 Tw (transfers, and controlling the execution of workloads in SYCL programs to enable efficient execution on) Tj T* 0 Tw (heterogeneous platforms:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 217.0394 cm
Q
q
1 0 0 1 40.01575 217.0394 cm
Q
q
1 0 0 1 40.01575 193.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm .080783 Tw 12 TL /F2 10 Tf 0 0 0 rg (Queue) Tj /F1 10 Tf (: A SYCL queue manages the execution of command groups on a specific device. It acts as a command) Tj T* 0 Tw (queue, allowing you to submit command groups for execution and control the order of execution.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 187.0394 cm
Q
q
1 0 0 1 40.01575 139.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 38 Tm -0.012869 Tw 12 TL /F2 10 Tf 0 0 0 rg (Scheduler) Tj /F1 10 Tf (: The scheduler in SYCL is an internal component of the runtime system that manages the execution) Tj T* 0 Tw .779578 Tw (and scheduling of command groups on devices. It optimizes the execution by considering device capabilities,) Tj T* 0 Tw 2.207008 Tw (workload distribution, dependencies, and resource availability. The queue is the primary interface through) Tj T* 0 Tw (which tasks are submitted to the scheduler for execution.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 133.0394 cm
Q
q
1 0 0 1 40.01575 97.03937 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 26 Tm .867058 Tw 12 TL /F2 10 Tf 0 0 0 rg (Buffer) Tj /F1 10 Tf (: A buffer in SYCL is a data container that represents a region of memory accessible by both the host) Tj T* 0 Tw .7373 Tw (and the device. It enables efficient data transfer and sharing between the host and the device without explicit) Tj T* 0 Tw (memory management.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 91.03937 cm
Q
q
1 0 0 1 40.01575 54.85039 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21.18898 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 9.188976 cm
q
BT 1 0 0 1 0 14 Tm 1.35494 Tw 12 TL /F2 10 Tf 0 0 0 rg (Accessor) Tj /F1 10 Tf (: Data represented by a buffer cannot be directly accessed through the buffer object. Instead, we) Tj T* 0 Tw 1.830256 Tw (must create accessor objects that allow us to safely access a buffer\222s data. Accessors inform the runtime) Tj T* 0 Tw ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (2\) Why SYCL?) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (7) Tj T* ET
Q
Q
 
endstream
endobj
557 0 obj
<<
/Length 11715
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 763.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 6 11 Tm  T* ET
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm .040186 Tw 12 TL /F1 10 Tf 0 0 0 rg (where and how we want to access data, allowing the runtime to ensure that the right data is in the right place at) Tj T* 0 Tw (the right time.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 757.0394 cm
Q
q
1 0 0 1 40.01575 721.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 26 Tm .42245 Tw 12 TL /F2 10 Tf 0 0 0 rg (Command group) Tj /F1 10 Tf (: In SYCL, a command group represents a unit of work that is submitted for execution on an) Tj T* 0 Tw .837606 Tw (OpenCL device. It encapsulates a set of operations and allows you to express parallelism and dependencies) Tj T* 0 Tw (between tasks. Remember to call only a SYCL kernel function per command group.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 715.0394 cm
Q
q
1 0 0 1 40.01575 679.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 26 Tm .578381 Tw 12 TL /F2 10 Tf 0 0 0 rg (Handler) Tj /F1 10 Tf (: A handler in SYCL represents a context in which command groups are defined. It provides methods) Tj T* 0 Tw 1.932435 Tw (for specifying operations within a command group, such as kernel invocations and memory transfers, and) Tj T* 0 Tw (controls the execution behavior of those operations.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 679.0394 cm
Q
q
1 0 0 1 40.01575 646.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F2 14 Tf .12549 .262745 .360784 rg (SYCL Basic Code: parallel_for) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 568.2394 cm
q
BT 1 0 0 1 0 62 Tm 1.880241 Tw 12 TL /F1 10 Tf 0 0 0 rg (In this section, we will explain ) Tj /F3 10 Tf (parallel_for) Tj /F1 10 Tf (, which is a core concept in SYCL designed to facilitate parallel) Tj T* 0 Tw 2.571506 Tw (execution of code across a range of processing elements, such as GPU threads or CPU cores. ) Tj /F2 10 Tf (Essentially) Tj /F1 10 Tf  T* 0 Tw 2.504009 Tw /F3 10 Tf (parallel_for) Tj /F1 10 Tf ( ) Tj /F2 10 Tf (distributes work across multiple processing elements for parallel execution and allows) Tj T* 0 Tw 3.391007 Tw (developers to express parallelism easily .) Tj /F1 10 Tf ( The equivalent of ) Tj /F3 10 Tf (parallel_for) Tj /F1 10 Tf ( in standard C++ would be) Tj T* 0 Tw .918864 Tw /F3 10 Tf (std::for_each) Tj /F1 10 Tf (. With ) Tj /F3 10 Tf (parallel_for) Tj /F1 10 Tf (, programmers only have to define a function or a lambda expression that) Tj T* 0 Tw (represents the work to be done in parallel while maintaining code portability.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 550.2394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Here's an example of how ) Tj /F3 10 Tf (parallel_for) Tj /F1 10 Tf ( works \(solution of previous section\):) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 171.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
1 .941176 .941176 rg
n 204 36 18 12 re f*
1 .941176 .941176 rg
n 312 36 6 12 re f*
1 .941176 .941176 rg
n 318 36 12 12 re f*
1 .941176 .941176 rg
n 330 36 6 12 re f*
BT 1 0 0 1 0 362 Tm 12 TL /F3 10 Tf .313725 .439216 .564706 rg (#include) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .25098 .501961 .501961 rg (<) Tj (CL/sycl.hpp) Tj (>) Tj /F3 10 Tf .313725 .439216 .564706 rg  T* /F5 10 Tf 0 .501961 0 rg (using) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (namespace) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (sycl) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T*  T* /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .376471 .690196 rg (main) Tj /F3 10 Tf 0 0 0 rg (\(\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T*  T* (    ) Tj 0 0 0 rg (queue) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (Q) Tj (;) Tj .733333 .733333 .733333 rg (                        ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// The queue, Q, is the object that) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (                                    ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// submits the task to a device.) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (    ) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (const) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (size) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (10) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* (    ) Tj 0 0 0 rg (buffer) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (A) Tj ({) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (size) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (};) Tj .733333 .733333 .733333 rg (          ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// The buffer, A, is the memory used to) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (                                    ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// transfer data between host and device.) Tj T* /F3 10 Tf .733333 .733333 .733333 rg  T* (    ) Tj 0 0 0 rg (Q) Tj (.) Tj (submit) Tj (\([) Tj .188235 .188235 .188235 rg (&) Tj 0 0 0 rg (]\() Tj (handler) Tj .188235 .188235 .188235 rg (&) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (h) Tj (\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg (      ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// The handler, h, is the object that contains) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (                                    ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// the parallel_for function to be used.) Tj T* /F3 10 Tf .733333 .733333 .733333 rg  T* (        ) Tj 0 0 0 rg (accessor) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (A_acc) Tj (\() Tj (A) Tj (,) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (h) Tj (\);) Tj .733333 .733333 .733333 rg (       ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// The accessor, A_acc, is the object that) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (                                    ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// efficiently accesses the buffer elements.) Tj T* /F3 10 Tf .733333 .733333 .733333 rg  T* (        ) Tj 0 0 0 rg (h) Tj (.) Tj (parallel_for) Tj (\() Tj (range) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj 0 0 0 rg (\() Tj (size) Tj (\),) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ([) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg (]\() Tj (id) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (indx) Tj (\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (            ) Tj 0 0 0 rg (A_acc) Tj ([) Tj (indx) Tj (]) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (77) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* (            ) Tj 0 0 0 rg (}\);) Tj .733333 .733333 .733333 rg  T*  T* (        ) Tj 0 0 0 rg (}\);) Tj .733333 .733333 .733333 rg  T*  T* (    ) Tj 0 0 0 rg (host_accessor) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (result) Tj (\() Tj (A) Tj (\);) Tj .733333 .733333 .733333 rg (        ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// host_accessor is the object that allows) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (                                    ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// the host to access the buffer memory.) Tj T* /F3 10 Tf .733333 .733333 .733333 rg  T* (    ) Tj /F5 10 Tf 0 .501961 0 rg (for) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (\() Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (size) Tj (;) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj .188235 .188235 .188235 rg (++) Tj 0 0 0 rg (\)) Tj .733333 .733333 .733333 rg (  ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// Print output) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (        ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (cout) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (result) Tj ([) Tj (i) Tj (]) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj .729412 .129412 .129412 rg (" ") Tj 0 0 0 rg (;) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (cout) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj .729412 .129412 .129412 rg (") Tj /F5 10 Tf .376471 .376471 .376471 rg (\\n) Tj /F3 10 Tf .729412 .129412 .129412 rg (") Tj 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* (    ) Tj /F5 10 Tf 0 .501961 0 rg (return) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T*  T* 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 151.4394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Note that) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 108.6394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 26 Tm 12 TL /F3 10 Tf 0 0 0 rg (h) Tj (.) Tj (parallel_for) Tj (\() Tj (range) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj 0 0 0 rg (\() Tj (size) Tj (\),) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ([) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg (]\() Tj (id) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (indx) Tj (\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (    ) Tj 0 0 0 rg (A_acc) Tj ([) Tj (indx) Tj (]) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (77) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* (    ) Tj 0 0 0 rg (}\);) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 76.63937 cm
q
BT 1 0 0 1 0 14 Tm .59894 Tw 12 TL /F1 10 Tf 0 0 0 rg (is where ) Tj /F3 10 Tf (parallel_for) Tj /F1 10 Tf ( is presented within the code and, as it happened with ) Tj /F3 10 Tf (single_task) Tj /F1 10 Tf (, ) Tj /F3 10 Tf (parallel_for) Tj /F1 10 Tf ( is) Tj T* 0 Tw (also provided by the handler ) Tj /F3 10 Tf (h) Tj /F1 10 Tf (. Let's explain these components:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 70.63937 cm
Q
q
1 0 0 1 287.6378 58.63937 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (2\) Why SYCL?) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (8) Tj T* ET
Q
Q
 
endstream
endobj
558 0 obj
<<
/Length 9181
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 631.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 120 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 26 Tm .450315 Tw 12 TL /F3 10 Tf 0 0 0 rg (h.parallel_for) Tj /F1 10 Tf (: This line initiates a parallel computation using the parallel_for construct. It means that) Tj T* 0 Tw .32294 Tw (the enclosed code block will be executed in parallel across multiple processing elements \(e.g., CPU cores) Tj T* 0 Tw (or GPU threads\). The ) Tj /F3 10 Tf (h) Tj /F1 10 Tf ( is the handler, which manages the execution of SYCL tasks on a specific device.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 114 cm
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 38 Tm -0.100369 Tw 12 TL /F3 10 Tf 0 0 0 rg (range) Tj (<) Tj (1) Tj (>) Tj (\(size\)) Tj /F1 10 Tf (: This part specifies the range of work items for the parallel computation. In this case, it's) Tj T* 0 Tw 2.344358 Tw (a 1D range defined by ) Tj /F3 10 Tf (range) Tj (<) Tj (1) Tj (>) Tj /F1 10 Tf ( with a size of ) Tj /F3 10 Tf (size=10) Tj /F1 10 Tf (. The range defines how many times the) Tj T* 0 Tw .730227 Tw (enclosed code block will execute in parallel meaning that in this case the code block will be executed 10) Tj T* 0 Tw (times concurrently, each time with a different value of ) Tj /F3 10 Tf (indx) Tj /F1 10 Tf ( ranging from 0 to 9.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 45 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 50 Tm -0.057994 Tw 12 TL /F3 10 Tf 0 0 0 rg ([=]\(id) Tj (<) Tj (1) Tj (>) Tj ( ) Tj (indx\)) Tj ( ) Tj ({) Tj ( ) Tj (A_acc[indx]) Tj ( ) Tj (=) Tj ( ) Tj (77;) Tj ( ) Tj (}) Tj /F1 10 Tf (: This is a lambda function that represents the work to be) Tj T* 0 Tw .615292 Tw (performed in parallel. The lambda function takes an ) Tj /F3 10 Tf (id) Tj (<) Tj (1) Tj (>) Tj /F1 10 Tf ( argument named ) Tj /F3 10 Tf (indx) Tj /F1 10 Tf (, which represents the) Tj T* 0 Tw .173005 Tw (unique identifier of the current work item. Inside the lambda function, the code sets the value at the indx-th) Tj T* 0 Tw .340783 Tw (position of the array ) Tj /F3 10 Tf (A_acc) Tj /F1 10 Tf ( to ) Tj /F3 10 Tf (77) Tj /F1 10 Tf (. In essence, each parallel instance will update a different element of the) Tj T* 0 Tw /F3 10 Tf (A_acc) Tj /F1 10 Tf ( array to the value 77.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 631.0394 cm
Q
q
1 0 0 1 40.01575 601.0394 cm
q
BT 1 0 0 1 0 14 Tm 1.145205 Tw 12 TL /F1 10 Tf 0 0 0 rg (Note that it is not the buffer, ) Tj /F3 10 Tf (A) Tj /F1 10 Tf (, that is modified inside the SYCL kernel function, but the accessor, ) Tj /F3 10 Tf (A_acc) Tj /F1 10 Tf (, which) Tj T* 0 Tw (manages the access and usage of the buffer memory.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 568.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F2 14 Tf .12549 .262745 .360784 rg (Conclusions) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 490.2394 cm
q
BT 1 0 0 1 0 62 Tm 4.499546 Tw 12 TL /F1 10 Tf 0 0 0 rg (After witnessing the remarkable ease and convenience that SYCL offers through its ) Tj /F3 10 Tf (single_task) Tj /F1 10 Tf ( and) Tj T* 0 Tw 2.50094 Tw /F3 10 Tf (parallel_for) Tj /F1 10 Tf ( examples, it becomes evident why SYCL is an excellent choice for harnessing the power of) Tj T* 0 Tw 1.930409 Tw (heterogeneous computing. ) Tj /F2 10 Tf (SYCL's user-friendly approach) Tj /F1 10 Tf (, as demonstrated by these constructs, ) Tj /F2 10 Tf (accelerates) Tj T* 0 Tw 2.339409 Tw (development, improves code readability, and simplifies parallel programming complexities.) Tj /F1 10 Tf ( Beyond this,) Tj T* 0 Tw 1.227238 Tw (SYCL's inherent cross-platform portability ) Tj /F2 10 Tf (ensures that your code can effortlessly adapt to diverse hardware) Tj T* 0 Tw (architectures) Tj /F1 10 Tf (, eliminating the need for extensive platform-specific optimizations.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 412.2394 cm
q
BT 1 0 0 1 0 62 Tm 1.854273 Tw 12 TL /F1 10 Tf 0 0 0 rg (Remarkably, ) Tj /F2 10 Tf (SYCL achieves this while preserving performance) Tj /F1 10 Tf (, allowing you to tap into the full potential of) Tj T* 0 Tw 1.821853 Tw (heterogeneous hardware with ease. Furthermore, SYCL's seamless integration with modern C++ and its robust) Tj T* 0 Tw .731506 Tw (ecosystem support make it a pragmatic choice for developers seeking to future-proof their applications in a rapidly) Tj T* 0 Tw 2.559409 Tw (evolving technological landscape. ) Tj /F2 10 Tf (In essence, SYCL combines convenience, performance, and versatility,) Tj T* 0 Tw .299163 Tw (making it an ideal tool for those striving to create efficient and portable code for a wide range of computing) Tj T* 0 Tw (platforms.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 370.2394 cm
q
BT 1 0 0 1 0 26 Tm .111339 Tw 12 TL /F1 10 Tf 0 0 0 rg (The benefits of using SYCL are multiple and diverse. However, before we delve deeper into SYCL's capabilities, it is) Tj T* 0 Tw .156894 Tw (first necessary to cover some of the most powerful C++ features. This is addressed in the following section: ) Tj /F2 10 Tf (Modern) Tj T* 0 Tw (C++) Tj /F1 10 Tf ( of this SYCL 101 course.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 335.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 25.2 re B*
Q
q
BT 1 0 0 1 0 3.2 Tm 19.2 TL /F2 16 Tf .12549 .262745 .360784 rg (3\) Modern C++) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 302.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F2 14 Tf .12549 .262745 .360784 rg (Uniform Initialization) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 284.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (This chapter covers uniform initialization. You will learn the following:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 278.2394 cm
Q
q
1 0 0 1 40.01575 278.2394 cm
Q
q
1 0 0 1 40.01575 266.2394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (1.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (What is uniform initialization and how can it be used?) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 260.2394 cm
Q
q
1 0 0 1 40.01575 248.2394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (2.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Why should uniform initialization be used?) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 242.2394 cm
Q
q
1 0 0 1 40.01575 230.2394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (3.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (What are the common problems with uniform initialization?) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 230.2394 cm
Q
q
1 0 0 1 40.01575 199.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F2 12 Tf .12549 .262745 .360784 rg (Introduction) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 181.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (In modern C++, there is a uniform method for initializing data called ) Tj /F2 10 Tf (uniform initialization) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 152.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 19.2 re B*
Q
q
BT 1 0 0 1 0 2.2 Tm 13.2 TL /F2 11 Tf .12549 .262745 .360784 rg (Expression Initialization) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 134.6394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (To better understand the concept, let's get familiar with the following terms:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 128.6394 cm
Q
q
1 0 0 1 40.01575 128.6394 cm
Q
q
1 0 0 1 40.01575 116.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (direct initialization) Tj /F1 10 Tf (, which uses an explicit set of constructor arguments to create an object.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 110.6394 cm
Q
q
1 0 0 1 40.01575 98.63937 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (copy initialization) Tj /F1 10 Tf (, which uses another object to initialize an object.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 98.63937 cm
Q
q
1 0 0 1 40.01575 80.63937 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The code below shows both direct and copy initialization:) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3\) Modern C++) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (9) Tj T* ET
Q
Q
 
endstream
endobj
559 0 obj
<<
/Length 13714
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 756.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
1 .941176 .941176 rg
n 114 12 138 12 re f*
1 .941176 .941176 rg
n 114 0 126 12 re f*
BT 1 0 0 1 0 14 Tm 12 TL /F3 10 Tf 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (string) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (direct) Tj (\() Tj .729412 .129412 .129412 rg ("direct initialization") Tj 0 0 0 rg (\);) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (string) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (copy) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj .729412 .129412 .129412 rg ("copy initialization") Tj 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 727.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 19.2 re B*
Q
q
BT 1 0 0 1 0 2.2 Tm 13.2 TL /F2 11 Tf .12549 .262745 .360784 rg (Brace Initialization) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 697.0394 cm
q
BT 1 0 0 1 0 14 Tm 2.225227 Tw 12 TL /F1 10 Tf 0 0 0 rg (To uniformly initialize objects of any type, ) Tj /F2 10 Tf (brace initialization form {}) Tj /F1 10 Tf ( may be used for both direct and copy) Tj T* 0 Tw (initialization. When used with brace initialization, we call initializations direct-list and copy-list.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 679.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The code below shows both direct-list and copy-list initialization:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 648.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
1 .941176 .941176 rg
n 114 12 168 12 re f*
1 .941176 .941176 rg
n 120 0 156 12 re f*
BT 1 0 0 1 0 14 Tm 12 TL /F3 10 Tf 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (string) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (direct) Tj ({) Tj .729412 .129412 .129412 rg ("direct-list initialization") Tj 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (string) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (copy) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .729412 .129412 .129412 rg ("copy-list initialization") Tj 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 628.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Let's look at uniform initialization on different built-in and custom types:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 622.2394 cm
Q
q
1 0 0 1 40.01575 622.2394 cm
Q
q
1 0 0 1 40.01575 579.4394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27.8 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (1.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 27.8 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Built-in types:) Tj T* ET
Q
Q
q
1 0 0 1 23 -3 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 14 Tm 12 TL /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj /F5 10 Tf 0 0 .815686 rg (13) Tj /F3 10 Tf 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T* /F5 10 Tf .188235 .188235 .564706 rg (float) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (f) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj /F5 10 Tf .376471 0 .878431 rg (2.7) Tj /F3 10 Tf 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 573.4394 cm
Q
q
1 0 0 1 40.01575 542.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 15.8 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (2.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 15.8 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Arrays:) Tj T* ET
Q
Q
q
1 0 0 1 23 -3 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (my_array) Tj ([) Tj /F5 10 Tf 0 0 .815686 rg (5) Tj /F3 10 Tf 0 0 0 rg (]) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (2) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (3) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (4) Tj /F3 10 Tf 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 536.6394 cm
Q
q
1 0 0 1 40.01575 505.8394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 15.8 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (3.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 15.8 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Dynamically allocated arrays:) Tj T* ET
Q
Q
q
1 0 0 1 23 -3 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (*) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (my_array) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (new) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf 0 0 0 rg ([) Tj /F5 10 Tf 0 0 .815686 rg (5) Tj /F3 10 Tf 0 0 0 rg (]{) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (2) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (3) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (4) Tj /F3 10 Tf 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 499.8394 cm
Q
q
1 0 0 1 40.01575 457.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27.8 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (4.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 27.8 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Standard library containers:) Tj T* ET
Q
Q
q
1 0 0 1 23 -3 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
1 .941176 .941176 rg
n 228 0 36 12 re f*
1 .941176 .941176 rg
n 306 0 36 12 re f*
BT 1 0 0 1 0 14 Tm 12 TL /F3 10 Tf 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (vector) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (my_vector) Tj ({) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (2) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (3) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (4) Tj /F3 10 Tf 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (map) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (string) Tj .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (my_map) Tj ({{) Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj .729412 .129412 .129412 rg ("str1") Tj 0 0 0 rg (},) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj /F5 10 Tf 0 0 .815686 rg (7) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj .729412 .129412 .129412 rg ("str2") Tj 0 0 0 rg (}};) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 451.0394 cm
Q
q
1 0 0 1 40.01575 288.2394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 147.8 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (5.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 147.8 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (User-defined types:) Tj T* ET
Q
Q
q
1 0 0 1 23 -3 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 134 Tm 12 TL /F5 10 Tf 0 .501961 0 rg (class) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .690196 0 .376471 rg (foo) Tj /F3 10 Tf 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (   ) Tj /F5 10 Tf 0 .501961 0 rg (public) Tj /F3 10 Tf .188235 .188235 .188235 rg (:) Tj .733333 .733333 .733333 rg  T* (      ) Tj 0 0 0 rg (foo) Tj (\(\)) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (:) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (_i) Tj (\() Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (\),) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (_f) Tj (\() Tj /F5 10 Tf .376471 0 .878431 rg (0.0) Tj /F3 10 Tf 0 0 0 rg (\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({}) Tj .733333 .733333 .733333 rg  T* (      ) Tj 0 0 0 rg (foo) Tj (\() Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .188235 .188235 .564706 rg (float) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (f) Tj (\)) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (:) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (_i) Tj (\() Tj (i) Tj (\),) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (_f) Tj (\() Tj (f) Tj (\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({}) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj /F5 10 Tf 0 .501961 0 rg (private) Tj /F3 10 Tf .188235 .188235 .188235 rg (:) Tj .733333 .733333 .733333 rg  T* (      ) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (_i) Tj (;) Tj .733333 .733333 .733333 rg  T* (      ) Tj /F5 10 Tf .188235 .188235 .564706 rg (float) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (_f) Tj (;) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T*  T* 0 0 0 rg (foo) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (f1) Tj ({};) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (foo) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (f2) Tj ({) Tj /F5 10 Tf 0 0 .815686 rg (13) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .376471 0 .878431 rg (2.7) Tj /F3 10 Tf 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 288.2394 cm
Q
q
1 0 0 1 40.01575 257.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F2 12 Tf .12549 .262745 .360784 rg (Why Should Uniform Initialization Be Used?) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 239.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (We can list several advantages of uniform initialization.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 210.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 19.2 re B*
Q
q
BT 1 0 0 1 0 2.2 Tm 13.2 TL /F2 11 Tf .12549 .262745 .360784 rg (Consistent Syntax) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 192.6394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The first is ) Tj /F2 10 Tf (very consistent syntax) Tj /F1 10 Tf (. For example, we already know there are many ways to initialize the variable:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 125.8394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 50 Tm 12 TL /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// historically the most common way) Tj T* /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .376471 .690196 rg (i) Tj /F3 10 Tf 0 0 0 rg (\() Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F3 10 Tf 0 0 0 rg (\);) Tj .733333 .733333 .733333 rg (    ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// direct initialization) Tj T* /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj ({) Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F3 10 Tf 0 0 0 rg (};) Tj .733333 .733333 .733333 rg (    ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// direct-list initialization) Tj T* /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F3 10 Tf 0 0 0 rg (};) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// copy-list initialization) Tj T* /F5 10 Tf 0 .501961 0 rg (auto) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj ({) Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F3 10 Tf 0 0 0 rg (};) Tj .733333 .733333 .733333 rg (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// direct initialization of type deduced to int) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 69.83937 cm
q
BT 1 0 0 1 0 38 Tm .668005 Tw 12 TL /F1 10 Tf 0 0 0 rg (For simple type initialization, it's not a problem to use the most common method. However, when we use different,) Tj T* 0 Tw .244006 Tw (more complicated custom types, the consistent syntax can change the experience with code. This can be especially) Tj T* 0 Tw .440186 Tw (important if you consider the generic code that should be able to initialize any type \227 it will be not possible with ) Tj /F3 10 Tf (\(\)) Tj /F1 10 Tf  T* 0 Tw (initialization.) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3\) Modern C++) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (10) Tj T* ET
Q
Q
 
endstream
endobj
560 0 obj
<<
/Length 12778
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 720.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
1 .941176 .941176 rg
n 252 0 30 12 re f*
1 .941176 .941176 rg
n 324 0 30 12 re f*
BT 1 0 0 1 0 50 Tm 12 TL /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj ({) Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F3 10 Tf 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (foo) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (f) Tj ({) Tj /F5 10 Tf 0 0 .815686 rg (13) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .376471 0 .878431 rg (2.7) Tj /F3 10 Tf 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (vector) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (v) Tj ({) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (2) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (3) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (4) Tj /F3 10 Tf 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (unordered_set) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (s) Tj ({) Tj /F5 10 Tf 0 0 .815686 rg (13) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (17) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (8) Tj /F3 10 Tf 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (unordered_map) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (string) Tj .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({{) Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj .729412 .129412 .129412 rg ("one") Tj 0 0 0 rg (},) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj /F5 10 Tf 0 0 .815686 rg (2) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj .729412 .129412 .129412 rg ("two") Tj 0 0 0 rg (}};) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 691.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 19.2 re B*
Q
q
BT 1 0 0 1 0 2.2 Tm 13.2 TL /F2 11 Tf .12549 .262745 .360784 rg (Narrowing Conversions Are Not Allowed) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 673.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The second benefit is that uniform initialization ) Tj /F2 10 Tf (does not allow narrowing conversions) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 655.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Before uniform initialization, with C-style C++, the code below will work, and ) Tj /F3 10 Tf (double) Tj /F1 10 Tf ( will just convert to ) Tj /F3 10 Tf (int) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 624.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 14 Tm 12 TL /F5 10 Tf .188235 .188235 .564706 rg (double) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (d) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .376471 0 .878431 rg (5.5) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (d) Tj (;) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// double to int conversion) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 604.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The same with bracket initialization will not work and it forces the user to type-cast values explicitly.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 537.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 50 Tm 12 TL /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj ({) Tj (d) Tj (};) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// compilation error) Tj T* /F3 10 Tf .733333 .733333 .733333 rg  T* /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj ({) Tj /F5 10 Tf 0 .501961 0 rg (static_cast) Tj /F3 10 Tf .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj 0 0 0 rg (\() Tj (d) Tj (\)};) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// modern C++ cast - best practice) Tj T* /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj ({\() Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf 0 0 0 rg (\)) Tj (d) Tj (};) Tj .733333 .733333 .733333 rg (              ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// C-style type-cast) Tj T* /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj ({) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf 0 0 0 rg (\() Tj (d) Tj (\)};) Tj .733333 .733333 .733333 rg (              ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// old C++-style type-cast) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 508.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 19.2 re B*
Q
q
BT 1 0 0 1 0 2.2 Tm 13.2 TL /F2 11 Tf .12549 .262745 .360784 rg (Fixes Most Vexing Parse) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 478.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 2.01811 Tw (The most vexing parse comes from a rule in C++ that says that anything that could be considered a function) Tj T* 0 Tw (declaration should be parsed by the compiler as a function declaration.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 448.2394 cm
q
BT 1 0 0 1 0 14 Tm .560205 Tw 12 TL /F1 10 Tf 0 0 0 rg (Let's examine the example when we want to initialize the vector that's a private member of the foo class with three) Tj T* 0 Tw (zeros ) Tj /F3 10 Tf ({0,) Tj ( ) Tj (0,) Tj ( ) Tj (0}) Tj /F1 10 Tf (,) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 357.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 74 Tm 12 TL /F5 10 Tf 0 .501961 0 rg (class) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .690196 0 .376471 rg (foo) Tj /F3 10 Tf 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (   ) Tj /F5 10 Tf 0 .501961 0 rg (public) Tj /F3 10 Tf .188235 .188235 .188235 rg (:) Tj .733333 .733333 .733333 rg  T* (      ) Tj 0 0 0 rg (foo) Tj (\(\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (...) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj /F5 10 Tf 0 .501961 0 rg (private) Tj /F3 10 Tf .188235 .188235 .188235 rg (:) Tj .733333 .733333 .733333 rg  T* (      ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (vector) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (v) Tj (\() Tj /F5 10 Tf 0 0 .815686 rg (3) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (\);) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 325.4394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .230829 Tw (This code will not compile because the vector initialization was interpreted by the compiler as a function declaration.) Tj T* 0 Tw (We have three possible solutions for this problem.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 307.4394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The first is the most obvious \227 we can just use uniform initialization for the vector.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 288.6394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (vector) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (v) Tj ({) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 256.6394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .084205 Tw (This is not always the best solution, especially when we need to initialize the long vector and typing every element is) Tj T* 0 Tw (not an option.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 238.6394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The second solution is to move the initialization to the constructor:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 219.8394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (foo) Tj (\(\)) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (:) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (v) Tj (\() Tj /F5 10 Tf 0 0 .815686 rg (3) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (...) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 199.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (And the last solution is to use copy initialization:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 181.0394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (vector) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (v) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (vector) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 0 .815686 rg (3) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (\);) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 150.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F2 12 Tf .12549 .262745 .360784 rg (Common Problems with Uniform Initialization) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 96.63937 cm
q
BT 1 0 0 1 0 38 Tm .112205 Tw 12 TL /F1 10 Tf 0 0 0 rg (Even when uniform initialization helps, there are also some issues related to using it. The first of them is about using) Tj T* 0 Tw .33694 Tw /F3 10 Tf (auto) Tj /F1 10 Tf ( for variable declaration. Deduced type for the variable can be ) Tj /F3 10 Tf (std::initializer_list) Tj /F1 10 Tf ( instead of the type) Tj T* 0 Tw .296123 Tw (a programmer would expect. This happens mostly when we combine auto variable declaration with an equal sign or) Tj T* 0 Tw (if it has multiple elements, as in the following code:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 65.83937 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 14 Tm 12 TL /F5 10 Tf 0 .501961 0 rg (auto) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (variable) Tj ({) Tj /F5 10 Tf 0 0 .815686 rg (13) Tj /F3 10 Tf 0 0 0 rg (};) Tj .733333 .733333 .733333 rg (       ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// variable is type of int) Tj T* /F5 10 Tf 0 .501961 0 rg (auto) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (variable) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj /F5 10 Tf 0 0 .815686 rg (13) Tj /F3 10 Tf 0 0 0 rg (};) Tj .733333 .733333 .733333 rg (    ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// variable is of type std::initializer_list) Tj (<) Tj (int) Tj (>) Tj  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3\) Modern C++) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (11) Tj T* ET
Q
Q
 
endstream
endobj
561 0 obj
<<
/Length 10792
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 744.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 26 Tm 12 TL /F3 10 Tf .733333 .733333 .733333 rg  T* /F5 10 Tf 0 .501961 0 rg (auto) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (variable) Tj ({) Tj /F5 10 Tf 0 0 .815686 rg (13) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (17) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (8) Tj /F3 10 Tf 0 0 0 rg (};) Tj .733333 .733333 .733333 rg (    ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// compilation error variable contains multiple expressions) Tj T* /F5 10 Tf 0 .501961 0 rg (auto) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (variable) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj /F5 10 Tf 0 0 .815686 rg (13) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (17) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (8) Tj /F3 10 Tf 0 0 0 rg (};) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// variable is of type std::initializer_list) Tj (<) Tj (int) Tj (>) Tj  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 712.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.440829 Tw (Another problem can happen with the vector initialization. It can be tricky, especially when a programmer is just) Tj T* 0 Tw (learning C++. See the difference between declarations below:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 681.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 14 Tm 12 TL /F3 10 Tf 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (vector) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (v) Tj (\() Tj /F5 10 Tf 0 0 .815686 rg (3) Tj /F3 10 Tf 0 0 0 rg (,) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (\);) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// vector contains tree zeros {0, 0, 0}) Tj T* /F3 10 Tf 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (vector) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (v) Tj ({) Tj /F5 10 Tf 0 0 .815686 rg (3) Tj /F3 10 Tf 0 0 0 rg (,) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (};) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// vector contains three and zero {3, 0}) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 637.4394 cm
q
BT 1 0 0 1 0 26 Tm -0.136136 Tw 12 TL /F1 10 Tf 0 0 0 rg (The last problem can be called "strongly prefer ) Tj /F3 10 Tf (std::initializer_list) Tj /F1 10 Tf ( constructors." It means that when calling) Tj T* 0 Tw .855606 Tw (the constructor using the uniform initialization syntax, the constructor will overload while declaring its parameter of) Tj T* 0 Tw (type ) Tj /F3 10 Tf (std::initializer_list) Tj /F1 10 Tf ( \(when it exists\).) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 619.4394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The example below demonstrates this situation:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 528.6394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 74 Tm 12 TL /F5 10 Tf 0 .501961 0 rg (class) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .690196 0 .376471 rg (foo) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (   ) Tj /F5 10 Tf 0 .501961 0 rg (public) Tj /F3 10 Tf .188235 .188235 .188235 rg (:) Tj .733333 .733333 .733333 rg  T* (      ) Tj 0 0 0 rg (foo) Tj (\() Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .188235 .188235 .564706 rg (float) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (f) Tj (\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (...) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* (      ) Tj 0 0 0 rg (foo) Tj (\() Tj (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (initializer_list) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (bool) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (list) Tj (\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (...) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T*  T* 0 0 0 rg (foo) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (object) Tj ({) Tj /F5 10 Tf 0 0 .815686 rg (13) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .376471 0 .878431 rg (2.7) Tj /F3 10 Tf 0 0 0 rg (};) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// compilation error) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 484.6394 cm
q
BT 1 0 0 1 0 26 Tm 1.951417 Tw 12 TL /F1 10 Tf 0 0 0 rg (The error occurs because instead of using the first constructor \(with ) Tj /F3 10 Tf (int) Tj /F1 10 Tf ( and ) Tj /F3 10 Tf (float) Tj /F1 10 Tf (\), there is the constructor) Tj T* 0 Tw .05694 Tw (overload to the "strongly preferred" one with ) Tj /F3 10 Tf (std::initializer_list) Tj /F1 10 Tf ( as a parameter. So, the problem is caused) Tj T* 0 Tw (by narrowing conversions from ) Tj /F3 10 Tf (int) Tj /F1 10 Tf ( and ) Tj /F3 10 Tf (double) Tj /F1 10 Tf ( to ) Tj /F3 10 Tf (bool) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 451.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F2 14 Tf .12549 .262745 .360784 rg (Multithreading) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 433.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (This chapter covers multithreading. You will learn the following:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 427.8394 cm
Q
q
1 0 0 1 40.01575 427.8394 cm
Q
q
1 0 0 1 40.01575 415.8394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (1.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (What is multithreading?) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 409.8394 cm
Q
q
1 0 0 1 40.01575 397.8394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (2.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (What are the benefits of multithreading?) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 391.8394 cm
Q
q
1 0 0 1 40.01575 379.8394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (3.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (How multithreading is implemented in C++?) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 373.8394 cm
Q
q
1 0 0 1 40.01575 361.8394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (4.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (How to launch, join, and detach threads?) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 355.8394 cm
Q
q
1 0 0 1 40.01575 343.8394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (5.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (What are the problems with multithreading?) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 343.8394 cm
Q
q
1 0 0 1 40.01575 313.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F2 12 Tf 14.4 TL (Introduction) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 259.4394 cm
q
BT 1 0 0 1 0 38 Tm 2.162006 Tw 12 TL /F2 10 Tf 0 0 0 rg (Multithreading) Tj /F1 10 Tf ( is a feature that allows concurrent execution of two or more parts of a program for maximum) Tj T* 0 Tw .327888 Tw (utilization of the resources. Each part of such a program is called thread. So, threads are lightweight sub-processes) Tj T* 0 Tw .555783 Tw (within a bigger process. In C++, multithreading was introduced in C++11, but became a part of the standard library) Tj T* 0 Tw (\(STL\) in C++17.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 229.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F2 12 Tf .12549 .262745 .360784 rg (Why Use Multithreading?) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 199.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL -0.102244 Tw (With the introduction of multiprocessor and multicore hardware, the use of multithreading started to be very important) Tj T* 0 Tw (in terms of application efficiency.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 181.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (There are various reasons to use multithreading:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 175.0394 cm
Q
q
1 0 0 1 40.01575 175.0394 cm
Q
q
1 0 0 1 40.01575 163.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Higher throughput) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 157.0394 cm
Q
q
1 0 0 1 40.01575 145.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Better responsiveness) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 139.0394 cm
Q
q
1 0 0 1 40.01575 127.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Resource efficiency) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 121.0394 cm
Q
q
1 0 0 1 40.01575 109.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Parallelism) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 109.0394 cm
Q
q
1 0 0 1 40.01575 79.03937 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .339116 Tw (It is important to remember that even when using more and more threads, due to potential overhead the application) Tj T* 0 Tw (may not always run faster.) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3\) Modern C++) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (12) Tj T* ET
Q
Q
 
endstream
endobj
562 0 obj
<<
/Length 8197
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 772.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F2 12 Tf .12549 .262745 .360784 rg (Basic Concepts of Multithreading) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 754.6394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Let's start with some basics concepts, like process and thread.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 736.6394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (Process) Tj /F1 10 Tf ( is what executes the program. Each process is able to run concurrent subtasks called threads.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 694.6394 cm
q
BT 1 0 0 1 0 26 Tm 1.556705 Tw 12 TL /F2 10 Tf 0 0 0 rg (Thread) Tj /F1 10 Tf (, as it was already explained, is a sub-task of the process. It can give the illusion that the application is) Tj T* 0 Tw 1.697584 Tw (performing multiple things all at once. Without threads, there will be a need to write one program per task and) Tj T* 0 Tw (synchronize them at the operating system level.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 665.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 19.2 re B*
Q
q
BT 1 0 0 1 0 2.2 Tm 13.2 TL /F2 11 Tf .12549 .262745 .360784 rg (Concurrency and Parallelism) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 635.4394 cm
q
BT 1 0 0 1 0 14 Tm .449672 Tw 12 TL /F1 10 Tf 0 0 0 rg (Before we delve deeper into the topic of multithreading in C++, let's start by explaining the terms ) Tj /F2 10 Tf (concurrency) Tj /F1 10 Tf ( and) Tj T* 0 Tw /F2 10 Tf (parallelism) Tj /F1 10 Tf (. They are often used interchangeably, but it's important to understand their differences.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 581.4394 cm
q
BT 1 0 0 1 0 38 Tm .983182 Tw 12 TL /F1 10 Tf 0 0 0 rg (Put simply, ) Tj /F2 10 Tf (concurrency) Tj /F1 10 Tf ( is about multiple tasks which start, run, and complete in overlapping time periods, in no) Tj T* 0 Tw .919205 Tw (specific order, while parallelism is about multiple tasks or subtasks of the same task that run at the same time on) Tj T* 0 Tw .187606 Tw (hardware with multiple computing resources. It is important to understand that both parallelism and concurrency can) Tj T* 0 Tw (occur separately as well as together depending on the context.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 551.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F2 12 Tf .12549 .262745 .360784 rg (C++ Multithreading Syntax) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 521.0394 cm
q
BT 1 0 0 1 0 14 Tm .749631 Tw 12 TL /F1 10 Tf 0 0 0 rg (Now, let's get back to multithreading itself. C++ multithreading involves creating and using thread objects, seen as) Tj T* 0 Tw /F3 10 Tf (std::thread) Tj /F1 10 Tf ( in code, to carry out delegated sub-tasks independently.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 491.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 19.2 re B*
Q
q
BT 1 0 0 1 0 2.2 Tm 13.2 TL /F2 11 Tf .12549 .262745 .360784 rg (Creating a Thread) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 473.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creating and launching a thread is really simple, e.g.:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 251.0394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
1 .941176 .941176 rg
n 96 132 78 12 re f*
1 .941176 .941176 rg
n 174 132 12 12 re f*
1 .941176 .941176 rg
n 186 132 6 12 re f*
BT 1 0 0 1 0 206 Tm 12 TL /F3 10 Tf .313725 .439216 .564706 rg (#include) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .25098 .501961 .501961 rg (<) Tj (iostream) Tj (>) Tj /F3 10 Tf .313725 .439216 .564706 rg  T* /F4 10 Tf .501961 .501961 .501961 rg (// 1. We need to add the threads header to work with threads in C++) Tj T* /F3 10 Tf .313725 .439216 .564706 rg (#include) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .25098 .501961 .501961 rg (<) Tj (threads) Tj (>) Tj /F3 10 Tf .313725 .439216 .564706 rg  T* .733333 .733333 .733333 rg  T* /F4 10 Tf .501961 .501961 .501961 rg (// 2. Create a function that will be mapped to a thread) Tj T* /F5 10 Tf .188235 .188235 .564706 rg (void) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .376471 .690196 rg (callFromThread) Tj /F3 10 Tf 0 0 0 rg (\(\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (   ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (cout) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj .729412 .129412 .129412 rg ("Hello world!) Tj /F5 10 Tf .376471 .376471 .376471 rg (\\n) Tj /F3 10 Tf .729412 .129412 .129412 rg (") Tj 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T*  T* /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .376471 .690196 rg (main) Tj /F3 10 Tf 0 0 0 rg (\(\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// 3. Initialize thread and execute) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj /F5 10 Tf 0 .501961 0 rg (thread) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (my_thread) Tj (\() Tj (callFromThread) Tj (\);) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// 4. Rejoin thread to the main thread) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj 0 0 0 rg (my_thread) Tj (.) Tj (join) Tj (\(\);) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj /F5 10 Tf 0 .501961 0 rg (return) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 231.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Let's analyze this code step-by-step:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 225.0394 cm
Q
q
1 0 0 1 40.01575 225.0394 cm
Q
q
1 0 0 1 40.01575 201.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (1.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm .224426 Tw 12 TL /F1 10 Tf 0 0 0 rg (The first step imported the necessary library from the STL \227 it contains all the classes and functions related to) Tj T* 0 Tw (the C++ multithreading like ) Tj /F3 10 Tf (std::thread) Tj /F1 10 Tf ( class.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 195.0394 cm
Q
q
1 0 0 1 40.01575 171.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (2.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.127205 Tw (The next step declared a function that was mapped to the thread \227 all threads must be given a function to) Tj T* 0 Tw (complete at their creation.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 165.0394 cm
Q
q
1 0 0 1 40.01575 153.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (3.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The next step initialized a thread to execute the function \227 we are using default executor.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 147.0394 cm
Q
q
1 0 0 1 40.01575 111.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (4.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 26 Tm .634358 Tw 12 TL /F1 10 Tf 0 0 0 rg (At the end, we used ) Tj /F3 10 Tf (join\(\)) Tj /F1 10 Tf ( multithreading command \227 this task pauses the main function's thread until the) Tj T* 0 Tw .995606 Tw (specified thread completes. Without ) Tj /F3 10 Tf (join\(\)) Tj /F1 10 Tf (, the main thread could finish its task and terminate the process) Tj T* 0 Tw (before the thread executing completes ) Tj /F3 10 Tf (callFromThread) Tj /F1 10 Tf (. This race condition could result in an error.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 111.0394 cm
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3\) Modern C++) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (13) Tj T* ET
Q
Q
 
endstream
endobj
563 0 obj
<<
/Length 10694
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 773.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 19.2 re B*
Q
q
BT 1 0 0 1 0 2.2 Tm 13.2 TL /F2 11 Tf .12549 .262745 .360784 rg (Creating Multiple Threads) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 743.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.287584 Tw (The previous example created a single thread \(in addition to the main thread\). We can just as easily create and) Tj T* 0 Tw (execute multiple threads, e.g.:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 353.0394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
1 .941176 .941176 rg
n 240 288 30 12 re f*
1 .941176 .941176 rg
n 36 216 60 12 re f*
1 .941176 .941176 rg
n 36 204 42 12 re f*
1 .941176 .941176 rg
n 36 192 96 12 re f*
1 .941176 .941176 rg
n 36 180 66 12 re f*
BT 1 0 0 1 0 374 Tm 12 TL /F3 10 Tf .313725 .439216 .564706 rg (#include) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .25098 .501961 .501961 rg (<) Tj (iostream) Tj (>) Tj /F3 10 Tf .313725 .439216 .564706 rg  T* /F4 10 Tf .501961 .501961 .501961 rg (// 1. We need to add threads header to work with threads in C++) Tj T* /F3 10 Tf .313725 .439216 .564706 rg (#include) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .25098 .501961 .501961 rg (<) Tj (thread) Tj (>) Tj /F3 10 Tf .313725 .439216 .564706 rg  T* (#include) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .25098 .501961 .501961 rg (<) Tj (vector) Tj (>) Tj /F3 10 Tf .313725 .439216 .564706 rg  T* .733333 .733333 .733333 rg  T* /F4 10 Tf .501961 .501961 .501961 rg (// 2. Create a function that will be mapped to a thread) Tj T* /F5 10 Tf .188235 .188235 .564706 rg (void) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .376471 .690196 rg (print) Tj /F3 10 Tf 0 0 0 rg (\() Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (n) Tj (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (const) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (string) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (&) Tj 0 0 0 rg (str) Tj (\)) Tj .733333 .733333 .733333 rg (  ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (  ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (string) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (msg) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (to_string) Tj (\() Tj (n) Tj (\)) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (+) Tj .733333 .733333 .733333 rg ( ) Tj .729412 .129412 .129412 rg (" : ") Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (+) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (str) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (+) Tj .733333 .733333 .733333 rg ( ) Tj 0 .25098 .815686 rg ('\\n') Tj 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* (  ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (cout) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (msg) Tj (;) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T*  T* /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .376471 .690196 rg (main) Tj /F3 10 Tf 0 0 0 rg (\(\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (  ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (vector) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (string) Tj .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (s) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (      ) Tj .729412 .129412 .129412 rg ("SYCL 101") Tj 0 0 0 rg (,) Tj .733333 .733333 .733333 rg  T* (      ) Tj .729412 .129412 .129412 rg ("Intel") Tj 0 0 0 rg (,) Tj .733333 .733333 .733333 rg  T* (      ) Tj .729412 .129412 .129412 rg ("multithreading") Tj 0 0 0 rg (,) Tj .733333 .733333 .733333 rg  T* (      ) Tj .729412 .129412 .129412 rg ("education") Tj .733333 .733333 .733333 rg  T* (  ) Tj 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T*  T* (  ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// 3. Initialize threads and execute them) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (  ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (vector) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj /F5 10 Tf 0 .501961 0 rg (thread) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (threads) Tj (;) Tj .733333 .733333 .733333 rg  T* (  ) Tj /F5 10 Tf 0 .501961 0 rg (for) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (\() Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (s) Tj (.) Tj (size) Tj (\(\);) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj .188235 .188235 .188235 rg (++) Tj 0 0 0 rg (\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (    ) Tj 0 0 0 rg (threads) Tj (.) Tj (push_back) Tj (\() Tj (std) Tj .188235 .188235 .188235 rg (::) Tj /F5 10 Tf 0 .501961 0 rg (thread) Tj /F3 10 Tf 0 0 0 rg (\() Tj (print) Tj (,) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj (,) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (s) Tj ([) Tj (i) Tj (]\)\);) Tj .733333 .733333 .733333 rg  T* (  ) Tj 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T*  T* (  ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// 4. Rejoin threads to the main thread) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (  ) Tj /F5 10 Tf 0 .501961 0 rg (for) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 .501961 0 rg (auto) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (&) Tj 0 0 0 rg (th) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (:) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (threads) Tj (\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (    ) Tj 0 0 0 rg (th) Tj (.) Tj (join) Tj (\(\);) Tj .733333 .733333 .733333 rg  T* (  ) Tj 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T*  T* (  ) Tj /F5 10 Tf 0 .501961 0 rg (return) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 333.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (This code is similar to the previous one-thread example:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 327.0394 cm
Q
q
1 0 0 1 40.01575 327.0394 cm
Q
q
1 0 0 1 40.01575 315.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (1.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (First, we imported the ) Tj /F3 10 Tf (thread) Tj /F1 10 Tf ( library.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 309.0394 cm
Q
q
1 0 0 1 40.01575 285.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (2.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .806531 Tw (Then, we created a function that was mapped to the threads. In this example, the function is printing a given) Tj T* 0 Tw (string and number.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 279.0394 cm
Q
q
1 0 0 1 40.01575 255.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (3.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm .330315 Tw 12 TL /F1 10 Tf 0 0 0 rg (Then, we initialized the threads and executed them. We created the ) Tj /F3 10 Tf (std::vector) Tj (<) Tj (std::threads) Tj (>) Tj /F1 10 Tf ( to store) Tj T* 0 Tw (the thread handles.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 249.0394 cm
Q
q
1 0 0 1 40.01575 237.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (4.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The last step rejoined the threads to the main thread.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 237.0394 cm
Q
q
1 0 0 1 40.01575 195.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .053052 Tw (In this case, as we are using multiple threads, it is important to mention that even though we initialized the threads in) Tj T* 0 Tw .2039 Tw (sequential order, there is no guarantee that they will execute in that order. You might see different output every time) Tj T* 0 Tw (you run this program.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 165.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 19.2 re B*
Q
q
BT 1 0 0 1 0 2.2 Tm 13.2 TL /F2 11 Tf .12549 .262745 .360784 rg (Joining and Detaching Threads) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 111.8394 cm
q
BT 1 0 0 1 0 38 Tm 1.614672 Tw 12 TL /F1 10 Tf 0 0 0 rg (We've already used ) Tj /F3 10 Tf (join\(\)) Tj /F1 10 Tf ( on the threads, but let's take a deeper look at join and detach operations. Joining) Tj T* 0 Tw 1.433373 Tw (threads is a form of synchronization that makes them wait for each other. Imagine that a thread is started, then) Tj T* 0 Tw 1.994952 Tw (another thread waits for this new thread to finish. In that scenario, we are calling the ) Tj /F3 10 Tf (join\(\)) Tj /F1 10 Tf ( function on the) Tj T* 0 Tw /F3 10 Tf (std::thread) Tj /F1 10 Tf ( object, like in the example below:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 69.03937 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 26 Tm 12 TL /F3 10 Tf 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj /F5 10 Tf 0 .501961 0 rg (thread) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .376471 .690196 rg (th) Tj /F3 10 Tf 0 0 0 rg (\() Tj (functionPointer) Tj (\);) Tj .733333 .733333 .733333 rg  T*  T* /F4 10 Tf .501961 .501961 .501961 rg (// ...) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3\) Modern C++) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (14) Tj T* ET
Q
Q
 
endstream
endobj
564 0 obj
<<
/Length 7423
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 756.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 14 Tm 12 TL /F3 10 Tf .733333 .733333 .733333 rg  T* 0 0 0 rg (th) Tj (.) Tj (join) Tj (\(\);) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// waiting for the thread th to finish) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 724.2394 cm
q
BT 1 0 0 1 0 14 Tm 1.994358 Tw 12 TL /F1 10 Tf 0 0 0 rg (In addition to ) Tj /F2 10 Tf (joining) Tj /F1 10 Tf ( threads, one can also ) Tj /F2 10 Tf (detach) Tj /F1 10 Tf ( them. A detached thread will continue without blocking or) Tj T* 0 Tw (synchronizing its execution with any other threads. For this, we call ) Tj /F3 10 Tf (detach\(\)) Tj /F1 10 Tf ( on the ) Tj /F3 10 Tf (ste::thread) Tj /F1 10 Tf ( object:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 681.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 26 Tm 12 TL /F3 10 Tf 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj /F5 10 Tf 0 .501961 0 rg (thread) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .376471 .690196 rg (th) Tj /F3 10 Tf 0 0 0 rg (\() Tj (functionPointer) Tj (\);) Tj .733333 .733333 .733333 rg  T*  T* 0 0 0 rg (th) Tj (.) Tj (detach) Tj (\(\);) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// continue without waiting for thread th to finish) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 661.4394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Remember that after calling ) Tj /F3 10 Tf (detach\(\)) Tj /F1 10 Tf (, ) Tj /F3 10 Tf (std::thread) Tj /F1 10 Tf ( object is no longer join with other threads in the process.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 632.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 19.2 re B*
Q
q
BT 1 0 0 1 0 2.2 Tm 13.2 TL /F2 11 Tf .12549 .262745 .360784 rg (Commonly Used Methods of the Thread Class) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 602.2394 cm
q
BT 1 0 0 1 0 14 Tm .095881 Tw 12 TL /F1 10 Tf 0 0 0 rg (We have introduced the class ) Tj /F3 10 Tf (std::thread) Tj /F1 10 Tf ( with its ) Tj /F3 10 Tf (join\(\)) Tj /F1 10 Tf ( method, but ) Tj /F3 10 Tf (std::thread) Tj /F1 10 Tf ( has more. These are brief) Tj T* 0 Tw (descriptions of the most relevant methods:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 596.2394 cm
Q
q
1 0 0 1 40.01575 596.2394 cm
Q
q
1 0 0 1 40.01575 560.2394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 26 Tm .206123 Tw 12 TL /F3 10 Tf 0 0 0 rg (get_id\(\)) Tj /F1 10 Tf (: This returns a unique numerical identifier for the calling thread. A key application of this identifier is) Tj T* 0 Tw -0.048494 Tw (the facilitation of synchronization and thread-local storage, which is often used to managing static or global data) Tj T* 0 Tw (that needs to be distinct for each individual thread.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 554.2394 cm
Q
q
1 0 0 1 40.01575 530.2394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm .145606 Tw 12 TL /F3 10 Tf 0 0 0 rg (interrupt\(\)) Tj /F1 10 Tf (: This method compels the thread halt immediately. The scheduler will ignore this thread, even if) Tj T* 0 Tw (it is in the middle of a task. We recommend caution when using this method.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 524.2394 cm
Q
q
1 0 0 1 40.01575 488.2394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 26 Tm .385256 Tw 12 TL /F3 10 Tf 0 0 0 rg (yield\(\)) Tj /F1 10 Tf (: This method informs the scheduler that the current thread is temporarily yielding control and can be) Tj T* 0 Tw 1.343381 Tw (revisited later. In a preemptive scheduling context, this is valuable to ensure that threads with lower priority) Tj T* 0 Tw (tasks do not monopolize execution that could be more effectively utilized by other productive threads.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 482.2394 cm
Q
q
1 0 0 1 40.01575 434.2394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 38 Tm 2.957606 Tw 12 TL /F3 10 Tf 0 0 0 rg (join\(\)) Tj /F1 10 Tf (: This suspends the execution of the current thread until the thread being joined completes its) Tj T* 0 Tw .433606 Tw (execution. It serves as the primary mechanism for thread synchronization. A typical scenario for its application) Tj T* 0 Tw .764273 Tw (involves the main thread initiating a background task within a separate thread, performing other operations in) Tj T* 0 Tw (the meantime, and then pausing to ensure that the background task has concluded before proceeding further.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 434.2394 cm
Q
q
1 0 0 1 40.01575 403.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F2 12 Tf .12549 .262745 .360784 rg (Problems with Multithreading) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 313.8394 cm
q
BT 1 0 0 1 0 74 Tm 1.818273 Tw 12 TL /F1 10 Tf 0 0 0 rg (When running multithreaded programs we can face problems with ) Tj /F2 10 Tf (access to shared data) Tj /F1 10 Tf ( by multiple threads.) Tj T* 0 Tw .002006 Tw (Simultaneous access to the same resource can lead to race conditions, errors, and chaos in programs. This problem) Tj T* 0 Tw 1.250705 Tw (occurs mostly due to the consequences of modifying shared data. There will be no issue if the data we share is) Tj T* 0 Tw .524426 Tw (read-only because the data read by one thread is unaffected by whether or not another thread is reading the same) Tj T* 0 Tw .456711 Tw (data. However, once data is shared between threads and one or more threads begin modifying the data, difficulties) Tj T* 0 Tw .989116 Tw (arise. We will take a look at some different possible problems with shared data that can happen in multithreading) Tj T* 0 Tw (programming.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 284.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 19.2 re B*
Q
q
BT 1 0 0 1 0 2.2 Tm 13.2 TL /F2 11 Tf .12549 .262745 .360784 rg (Deadlock) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 218.6394 cm
q
0 0 0 rg
BT 1 0 0 1 0 50 Tm /F1 10 Tf 12 TL .790742 Tw (Deadlock is a situation where a thread cannot proceed because it is waiting for a resource that will never become) Tj T* 0 Tw .264426 Tw (available. Imagine the situation where we have two threads \(T1 and T2\) and two resources \(R1 and R2\). Thread T1) Tj T* 0 Tw -0.087153 Tw (requires resource R1, and thread T2 requires resource R2. In that situation deadlock can arise when T1 is holding on) Tj T* 0 Tw -0.047213 Tw (R2 and waiting for R1 while at the same time, thread T2 is holding R1 and waiting for R2. This situation is depicted in) Tj T* 0 Tw (the image below, which illustrates a bad locking cycle.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 212.6394 cm
Q
q
1 0 0 1 40.01575 54.85039 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 87.97555 3 cm
q
339.293 0 0 151.789 0 0 cm
/FormXob.8a2be5a742ea3365c26f8470e6317306 Do
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 54.85039 cm
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3\) Modern C++) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (15) Tj T* ET
Q
Q
 
endstream
endobj
565 0 obj
<<
/Length 3249
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 763.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL -0.097406 Tw (To avoid such deadlocks, shared resources should be acquired and released in reverse order. For example, a thread) Tj T* 0 Tw (cannot acquire R2 unless it already holds R1, and it cannot release R1 until it first releases R2.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 733.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 19.2 re B*
Q
q
BT 1 0 0 1 0 2.2 Tm 13.2 TL /F2 11 Tf .12549 .262745 .360784 rg (Race Conditions) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 679.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F1 10 Tf 12 TL 1.981506 Tw (A race condition occurs when threads can modify a shared resource in indeterminate order. This can produce) Tj T* 0 Tw 1.11294 Tw (incorrect results when correct results depend on a particular execution order. Imagine two threads doing different) Tj T* 0 Tw .410742 Tw (operations. The first takes a value and overwrites it with its square while the second takes the value and overwrites) Tj T* 0 Tw (its double. Depending on the order of thread execution, the final value will be different:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 673.8394 cm
Q
q
1 0 0 1 40.01575 245.4394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 89.62205 3 cm
q
336 0 0 422.4 0 0 cm
/FormXob.17e39dd96f0ce37ad68d56b4e0232bb8 Do
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 245.4394 cm
Q
q
1 0 0 1 40.01575 203.4394 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .177459 Tw (As you can see in the first scenario, Thread 1 executed first so its result was doubled, which resulted in a final value) Tj T* 0 Tw .370195 Tw (of 50. In the second scenario, Thread 2 executed first so its resulted was squared, which resulted in a final value of) Tj T* 0 Tw (100.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 185.4394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (To avoid race conditions, any operation that modifies a shared resource must be synchronized.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 155.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F2 12 Tf 14.4 TL (Summary) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 113.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .730881 Tw (To summarize, multithreading is used to express concurrency in an algorithm and to execute independent tasks in) Tj T* 0 Tw .440215 Tw (parallel. It can increase the efficiency of a program but can also be tricky when dealing with shared resources. This) Tj T* 0 Tw (was a very short introduction to multithreading. There is still much more to be learned.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 80.23937 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F2 14 Tf .12549 .262745 .360784 rg (Smart Pointers) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 62.23937 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (This chapter covers smart pointers. You will learn the following:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 56.23937 cm
Q
q
1 0 0 1 40.01575 56.23937 cm
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3\) Modern C++) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (16) Tj T* ET
Q
Q
 
endstream
endobj
566 0 obj
<<
/Length 9257
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 775.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (1.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (What are smart pointers?) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 769.0394 cm
Q
q
1 0 0 1 40.01575 757.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (2.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (When should different smart pointer types be used?) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 751.0394 cm
Q
q
1 0 0 1 40.01575 739.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (3.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Why should you use smart pointers?) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 739.0394 cm
Q
q
1 0 0 1 40.01575 708.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F2 12 Tf .12549 .262745 .360784 rg (What are Smart Pointers and When Should They be Used?) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 666.6394 cm
q
BT 1 0 0 1 0 26 Tm .461205 Tw 12 TL /F1 10 Tf 0 0 0 rg (Let's start with the definition of smart pointers. Smart pointers are a type with values that may be used like pointers) Tj T* 0 Tw .784358 Tw (but with the added benefit of automated memory management. We have three types of smart pointers declared in) Tj T* 0 Tw (the ) Tj /F3 10 Tf (<) Tj (memory) Tj (>) Tj /F1 10 Tf ( STD library:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 660.6394 cm
Q
q
1 0 0 1 40.01575 660.6394 cm
Q
q
1 0 0 1 40.01575 648.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (std::unique_ptr) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 642.6394 cm
Q
q
1 0 0 1 40.01575 630.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (std::shared_ptr) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 624.6394 cm
Q
q
1 0 0 1 40.01575 612.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (std::weak_ptr) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 612.6394 cm
Q
q
1 0 0 1 40.01575 582.6394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .176005 Tw (In general, smart pointers are used in code that involves tracking the ownership of a piece of memory and allocating) Tj T* 0 Tw (or deallocating it. They typically eliminate the necessity to do these things explicitly.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 540.6394 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .929116 Tw (It is worth mentioning that regular pointers can be still used in code with oblivious memory ownership. This would) Tj T* 0 Tw .166205 Tw (typically be in functions that get a pointer from someplace else and do not allocate or deallocate memory and do not) Tj T* 0 Tw (store a copy of the pointer that outlasts their execution. Let's take a deeper look at each of the smart pointer types.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 510.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F2 12 Tf .12549 .262745 .360784 rg (std::unique_ptr) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 492.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (According to the C++ Reference:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 486.2394 cm
Q
q
1 0 0 1 40.01575 462.2394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 14 Tm -0.032869 Tw 12 TL /F3 10 Tf 0 0 0 rg (std::unique_ptr) Tj /F1 10 Tf ( is a smart pointer that owns and manages another object through a pointer and disposes of) Tj T* 0 Tw (that object when the unique_ptr goes out of scope.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 462.2394 cm
Q
q
1 0 0 1 40.01575 420.2394 cm
q
BT 1 0 0 1 0 26 Tm .617584 Tw 12 TL /F1 10 Tf 0 0 0 rg (In other words, it is a smart pointer with ) Tj /F2 10 Tf (unique object ownership) Tj /F1 10 Tf ( semantics. It is a 1-to-1 relationship between a) Tj T* 0 Tw 1.886531 Tw (pointer and its allocated object on the heap. It's important to know that if the unique pointer is destructed, the) Tj T* 0 Tw (allocated object on the heap is also destroyed.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 391.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 19.2 re B*
Q
q
BT 1 0 0 1 0 2.2 Tm 13.2 TL /F2 11 Tf .12549 .262745 .360784 rg (Syntax) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 373.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The unique pointer is declared as follows:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 354.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (unique_ptr) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (ptr) Tj (\() Tj /F5 10 Tf 0 .501961 0 rg (new) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf 0 0 0 rg (\);) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// allocation of new int on heap) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 322.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .589064 Tw (As mentioned previously, the smart pointer has automated memory management. It will be destroyed at the end of) Tj T* 0 Tw (the code block in which it was declared. Remember, the object it points to will also be destroyed.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 243.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 62 Tm 12 TL /F3 10 Tf 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (  ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (unique_ptr) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (ptr) Tj (\() Tj /F5 10 Tf 0 .501961 0 rg (new) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf 0 0 0 rg (\);) Tj .733333 .733333 .733333 rg  T*  T* (  ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// pointer usage) Tj T* /F3 10 Tf .733333 .733333 .733333 rg  T* 0 0 0 rg (}) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// ptr is destroyed, which means the int object is also destroyed) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 214.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 19.2 re B*
Q
q
BT 1 0 0 1 0 2.2 Tm 13.2 TL /F2 11 Tf .12549 .262745 .360784 rg (Usage) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 184.2394 cm
q
BT 1 0 0 1 0 14 Tm .311339 Tw 12 TL /F1 10 Tf 0 0 0 rg (Generally, ) Tj /F3 10 Tf (std::unique_ptr) Tj /F1 10 Tf ( is used when you want your object to last only as long as a single owning reference) Tj T* 0 Tw (to it does. Let's look at a practical example to demonstrate ) Tj /F3 10 Tf (std::unique_ptr) Tj /F1 10 Tf ( usage and some of its functions.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 93.43937 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 74 Tm 12 TL /F4 10 Tf .501961 .501961 .501961 rg (// big object declaration) Tj T* /F5 10 Tf 0 .501961 0 rg (class) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .690196 0 .376471 rg (foo) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (   ) Tj /F5 10 Tf 0 .501961 0 rg (public) Tj /F3 10 Tf .188235 .188235 .188235 rg (:) Tj .733333 .733333 .733333 rg  T* (   ) Tj /F5 10 Tf .188235 .188235 .564706 rg (void) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (bar) Tj (\(\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (...) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T*  T* /F5 10 Tf .188235 .188235 .564706 rg (void) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .376471 .690196 rg (processFoo) Tj /F3 10 Tf 0 0 0 rg (\() Tj /F5 10 Tf 0 .501961 0 rg (const) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (foo) Tj .188235 .188235 .188235 rg (&) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (object) Tj (\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (...) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 73.43937 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (First, we will create the smart unique pointer. Remember, do not use ) Tj /F3 10 Tf (new) Tj /F1 10 Tf ( operator on the unique pointer directly.) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3\) Modern C++) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (17) Tj T* ET
Q
Q
 
endstream
endobj
567 0 obj
<<
/Length 9755
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 768.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (unique_ptr) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg (foo) Tj .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (foo_ptr) Tj (\() Tj /F5 10 Tf 0 .501961 0 rg (new) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (foo) Tj (\(\)\);) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 748.2394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (We can call the method on the object using the ) Tj /F6 10 Tf (-) Tj (>) Tj /F1 10 Tf ( operator:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 729.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (foo_ptr) Tj .188235 .188235 .188235 rg (-) Tj (>) Tj 0 0 0 rg (bar) Tj (\(\);) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 697.4394 cm
q
BT 1 0 0 1 0 14 Tm .002205 Tw 12 TL /F1 10 Tf 0 0 0 rg (And pass the foo object reference to the function using the ) Tj /F3 10 Tf (*) Tj /F1 10 Tf ( operator. Note that the unique pointer cannot be copied) Tj T* 0 Tw (or passed by value because it is a pointer.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 678.6394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (processFoo) Tj (\() Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg (foo_ptr) Tj (\);) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 646.6394 cm
q
BT 1 0 0 1 0 14 Tm .754705 Tw 12 TL /F1 10 Tf 0 0 0 rg (It's possible to access the raw pointer using the ) Tj /F3 10 Tf (get\(\)) Tj /F1 10 Tf ( method. It's especially helpful if you want to use the smart) Tj T* 0 Tw (pointer to manage memory while still passing the raw pointer to code that doesn't support smart pointers.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 627.8394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (foo_ptr) Tj (.) Tj (get) Tj (\(\);) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 595.8394 cm
q
BT 1 0 0 1 0 14 Tm 2.139653 Tw 12 TL /F1 10 Tf 0 0 0 rg (We can also free memory before exiting the code block with a unique pointer declaration using the ) Tj /F3 10 Tf (reset\(\)) Tj /F1 10 Tf  T* 0 Tw (method:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 577.0394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (foo_ptr) Tj (.) Tj (reset) Tj (\(\);) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 547.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 19.2 re B*
Q
q
BT 1 0 0 1 0 2.2 Tm 13.2 TL /F2 11 Tf .12549 .262745 .360784 rg (std::make_unique) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 517.8394 cm
q
BT 1 0 0 1 0 14 Tm .355881 Tw 12 TL /F1 10 Tf 0 0 0 rg (To make the creation of unique pointers easier and safer, the ) Tj /F3 10 Tf (std::make_unique) Tj /F1 10 Tf ( function constructs an object of) Tj T* 0 Tw (a given type and wraps it in ) Tj /F3 10 Tf (std::unique_ptr) Tj /F1 10 Tf (:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 499.0394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 .501961 0 rg (auto) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (ptr) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (make_unique) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 0 .815686 rg (13) Tj /F3 10 Tf 0 0 0 rg (\);) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 455.0394 cm
q
BT 1 0 0 1 0 26 Tm .80811 Tw 12 TL /F1 10 Tf 0 0 0 rg (This is also the preferred way to create unique pointers \(instead of using the ) Tj /F3 10 Tf (new) Tj /F1 10 Tf ( operator\). The only exception is) Tj T* 0 Tw -0.101632 Tw (when you need to customize a way to delete the object or are adopting a raw pointer from elsewhere \227. In that case,) Tj T* 0 Tw (do not use ) Tj /F3 10 Tf (std::make_unique) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 424.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F2 12 Tf .12549 .262745 .360784 rg (std::shared_ptr) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 406.6394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Similar to ) Tj /F3 10 Tf (std::unique_ptr) Tj /F1 10 Tf (, we will start with the C++ Reference definition of ) Tj /F3 10 Tf (std::shared_ptr) Tj /F1 10 Tf (:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 400.6394 cm
Q
q
1 0 0 1 40.01575 376.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 14 Tm 1.300273 Tw 12 TL /F3 10 Tf 0 0 0 rg (std::shared_ptr) Tj /F1 10 Tf ( is a smart pointer that retains shared ownership of an object through a pointer. Several) Tj T* 0 Tw (shared_ptr objects may own the same object.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 376.6394 cm
Q
q
1 0 0 1 40.01575 334.6394 cm
q
BT 1 0 0 1 0 26 Tm 2.304273 Tw 12 TL /F1 10 Tf 0 0 0 rg (This means that ) Tj /F3 10 Tf (std::shared_ptr) Tj /F1 10 Tf ( is a smart pointer with ) Tj /F2 10 Tf (shared object ownership) Tj /F1 10 Tf ( semantics. It is worth) Tj T* 0 Tw 2.384578 Tw (mentioning that the shared pointer is destroyed when the remaining ) Tj /F3 10 Tf (std::shared_ptr) Tj /F1 10 Tf ( owning the object is) Tj T* 0 Tw (destroyed.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 305.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 19.2 re B*
Q
q
BT 1 0 0 1 0 2.2 Tm 13.2 TL /F2 11 Tf .12549 .262745 .360784 rg (Syntax) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 287.4394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The shared pointer is declared as follows:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 268.6394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (shared_ptr) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (ptr) Tj (\() Tj /F5 10 Tf 0 .501961 0 rg (new) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf 0 0 0 rg (\);) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// allocation of new int on heap) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 236.6394 cm
q
BT 1 0 0 1 0 14 Tm 1.664358 Tw 12 TL /F1 10 Tf 0 0 0 rg (The allocated int \(or any other object within ) Tj /F3 10 Tf (std:shared_ptr) Tj /F1 10 Tf (\) is called a ) Tj /F2 10 Tf (managed object) Tj /F1 10 Tf (. In contrast to the) Tj T* 0 Tw (unique pointer, an object managed by a shared pointer can be shared with as many shared pointers as we like.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 205.8394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 14 Tm 12 TL /F3 10 Tf 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (shared_ptr) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (ptr2) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (ptr) Tj (;) Tj .733333 .733333 .733333 rg  T* /F5 10 Tf 0 .501961 0 rg (auto) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (ptr3) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (ptr) Tj (;) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 176.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 19.2 re B*
Q
q
BT 1 0 0 1 0 2.2 Tm 13.2 TL /F2 11 Tf .12549 .262745 .360784 rg (Usage) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 146.6394 cm
q
BT 1 0 0 1 0 14 Tm .152006 Tw 12 TL /F1 10 Tf 0 0 0 rg (Usually, you will use ) Tj /F3 10 Tf (std::shared_ptr) Tj /F1 10 Tf ( when you do want numerous references to your object and you don't want) Tj T* 0 Tw (it to be deallocated until all of these references have been removed.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 104.6394 cm
q
BT 1 0 0 1 0 26 Tm 2.102623 Tw 12 TL /F1 10 Tf 0 0 0 rg (The methods shown for ) Tj /F3 10 Tf (std::unique_ptr) Tj /F1 10 Tf ( are the same for ) Tj /F3 10 Tf (std::shared_ptr) Tj /F1 10 Tf (, like creation, calling object) Tj T* 0 Tw 2.583182 Tw (methods, dereferencing, accessing the raw pointer, and resetting it. In this part, we will focus only on those) Tj T* 0 Tw (functionalities specific to ) Tj /F3 10 Tf (std::shared_ptr) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 86.63937 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Let's start with copy initialization and via assignment.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 55.83937 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 14 Tm 12 TL /F3 10 Tf 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (shared_ptr) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (ptr2) Tj (\() Tj (ptr) Tj (\);) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (shared_ptr) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (ptr3) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (ptr) Tj (;) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3\) Modern C++) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (18) Tj T* ET
Q
Q
 
endstream
endobj
568 0 obj
<<
/Length 10766
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 763.0394 cm
q
BT 1 0 0 1 0 14 Tm .870829 Tw 12 TL /F1 10 Tf 0 0 0 rg (It's also possible to check how many instances of ) Tj /F3 10 Tf (std::shared_ptr) Tj /F1 10 Tf ( manage the same object and if the current) Tj T* 0 Tw (object is unique \(i.e., other shared pointers don't manage this object\):) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 732.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 14 Tm 12 TL /F3 10 Tf 0 0 0 rg (ptr) Tj (.) Tj (use_count) Tj (\(\);) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// returns number of shared pointers managing the same object as ptr) Tj T* /F3 10 Tf 0 0 0 rg (ptr) Tj (.) Tj (unique) Tj (\(\);) Tj .733333 .733333 .733333 rg (    ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// returns true if ptr is the only shared_ptr managing object, false otherwise) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 700.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .835256 Tw (Finally, the last functionality is the comparison operation. Two unrelated shared pointers will never be equal \(even) Tj T* 0 Tw (when they contain the same information\), but related shared pointers are always equal.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 597.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
1 .941176 .941176 rg
n 294 84 36 12 re f*
1 .941176 .941176 rg
n 294 72 36 12 re f*
BT 1 0 0 1 0 86 Tm 12 TL /F3 10 Tf 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (shared_ptr) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (string) Tj .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (pt1) Tj (\() Tj /F5 10 Tf 0 .501961 0 rg (new) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (string) Tj (\() Tj .729412 .129412 .129412 rg ("str1") Tj 0 0 0 rg (\)\);) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (shared_ptr) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (string) Tj .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (pt2) Tj (\() Tj /F5 10 Tf 0 .501961 0 rg (new) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (string) Tj (\() Tj .729412 .129412 .129412 rg ("str1") Tj 0 0 0 rg (\)\);) Tj .733333 .733333 .733333 rg  T*  T* 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (cout) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (pt1) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (==) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (pt2) Tj (;) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// return false because pt1 and pt2 are not related) Tj T* /F3 10 Tf .733333 .733333 .733333 rg  T* 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (shared_ptr) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (string) Tj .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (pt3) Tj (\() Tj (pt1) Tj (\);) Tj .733333 .733333 .733333 rg  T*  T* 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (cout) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (pt1) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (==) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (pt3) Tj (;) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// returns true because pt1 and pt3 are related) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 568.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 19.2 re B*
Q
q
BT 1 0 0 1 0 2.2 Tm 13.2 TL /F2 11 Tf .12549 .262745 .360784 rg (std::make_shared) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 538.2394 cm
q
BT 1 0 0 1 0 14 Tm .045292 Tw 12 TL /F1 10 Tf 0 0 0 rg (As in the case of ) Tj /F3 10 Tf (std::unique_ptr) Tj /F1 10 Tf (, ) Tj /F3 10 Tf (std::shared_ptr) Tj /F1 10 Tf ( includes a dedicated \(and preferred\) method for creating) Tj T* 0 Tw (pointers called ) Tj /F3 10 Tf (std::make_shared\(\)) Tj /F1 10 Tf (. It constructs an object of a given type and wraps it in ) Tj /F3 10 Tf (std::shared_ptr) Tj /F1 10 Tf (:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 519.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 .501961 0 rg (auto) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (ptr) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (make_shared) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 0 .815686 rg (13) Tj /F3 10 Tf 0 0 0 rg (\);) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 475.4394 cm
q
BT 1 0 0 1 0 26 Tm .043205 Tw 12 TL /F1 10 Tf 0 0 0 rg (Be aware that there isn't a way to release the memory for the control block and the managed object separately when) Tj T* 0 Tw .0073 Tw (using ) Tj /F3 10 Tf (std::make_shared) Tj /F1 10 Tf (. It creates a single heap allocation for both the control block and the managed object, so) Tj T* 0 Tw (we have to wait until we can release both the managed object and the control block.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 445.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F2 12 Tf .12549 .262745 .360784 rg (std::weak_ptr) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 427.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (As the C++ Reference defines:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 421.0394 cm
Q
q
1 0 0 1 40.01575 397.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 14 Tm .127888 Tw 12 TL /F3 10 Tf 0 0 0 rg (std::weak_ptr) Tj /F1 10 Tf ( is a smart pointer that holds a non-owning \("weak"\) reference to an object that is managed by) Tj T* 0 Tw /F3 10 Tf (std::shared_ptr) Tj /F1 10 Tf (. It must be converted to ) Tj /F3 10 Tf (std::shared_ptr) Tj /F1 10 Tf ( in order to access the referenced object.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 397.0394 cm
Q
q
1 0 0 1 40.01575 367.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 19.2 re B*
Q
q
BT 1 0 0 1 0 2.2 Tm 13.2 TL /F2 11 Tf .12549 .262745 .360784 rg (Syntax) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 349.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The weak pointer is declared as in the code below:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 331.0394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (weak_ptr) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (ptr) Tj (;) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 311.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (And later it can be used to observe the object of a shared pointer:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 280.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 14 Tm 12 TL /F5 10 Tf 0 .501961 0 rg (auto) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (sh_ptr) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (make_shared) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 0 .815686 rg (13) Tj /F3 10 Tf 0 0 0 rg (\)) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (ptr) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (sh_ptr) Tj (;) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// watches the managed object of sh_ptr) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 236.2394 cm
q
BT 1 0 0 1 0 26 Tm .147058 Tw 12 TL /F1 10 Tf 0 0 0 rg (Remember that a control block on a shared pointer object keeps track of the number of ) Tj /F2 10 Tf (shared and weak pointers) Tj /F1 10 Tf (.) Tj T* 0 Tw .059163 Tw (The object is removed when the shared counter hits zero, but the control block remains active until the weak counter) Tj T* 0 Tw (also reaches zero.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 207.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 19.2 re B*
Q
q
BT 1 0 0 1 0 2.2 Tm 13.2 TL /F2 11 Tf .12549 .262745 .360784 rg (Usage) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 153.0394 cm
q
BT 1 0 0 1 0 38 Tm .053528 Tw 12 TL /F1 10 Tf 0 0 0 rg (Why would we ever use a weak pointer? Generally, weak pointers are used when you do want to refer to your object) Tj T* 0 Tw .679116 Tw (from multiple places and do not want your object to be deallocated until all these references are themselves gone.) Tj T* 0 Tw .46494 Tw (Sometimes, you need to store the shared_ptr's underlying object without increasing the reference count. Often, this) Tj T* 0 Tw (issue occurs when ) Tj /F3 10 Tf (shared_ptr) Tj /F1 10 Tf ( objects have cyclic references. Let's see an example:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 62.23937 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
1 .941176 .941176 rg
n 138 24 36 12 re f*
BT 1 0 0 1 0 74 Tm 12 TL /F5 10 Tf 0 .501961 0 rg (struct) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .690196 0 .376471 rg (A) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T*  T* /F5 10 Tf 0 .501961 0 rg (struct) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .690196 0 .376471 rg (B) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (   ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (shared_ptr) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg (A) Tj .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (A_ptr) Tj (;) Tj .733333 .733333 .733333 rg  T* (   ) Tj .188235 .188235 .188235 rg (~) Tj 0 0 0 rg (B) Tj (\(\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (cout) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj .729412 .129412 .129412 rg ("~B\(\)") Tj 0 0 0 rg (;) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T*  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3\) Modern C++) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (19) Tj T* ET
Q
Q
 
endstream
endobj
569 0 obj
<<
/Length 10586
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 612.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
1 .941176 .941176 rg
n 138 132 36 12 re f*
BT 1 0 0 1 0 158 Tm 12 TL /F5 10 Tf 0 .501961 0 rg (struct) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .690196 0 .376471 rg (A) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (   ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (shared_ptr) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg (B) Tj .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (B_ptr) Tj (;) Tj .733333 .733333 .733333 rg  T* (   ) Tj .188235 .188235 .188235 rg (~) Tj 0 0 0 rg (A) Tj (\(\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (cout) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj .729412 .129412 .129412 rg ("~A\(\)") Tj 0 0 0 rg (;) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T*  T* /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .376471 .690196 rg (main) Tj /F3 10 Tf 0 0 0 rg (\(\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (   ) Tj /F5 10 Tf 0 .501961 0 rg (auto) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (BB) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (make_shared) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg (B) Tj .188235 .188235 .188235 rg (>) Tj 0 0 0 rg (\(\);) Tj .733333 .733333 .733333 rg  T* (   ) Tj /F5 10 Tf 0 .501961 0 rg (auto) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (AA) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (make_shared) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg (A) Tj .188235 .188235 .188235 rg (>) Tj 0 0 0 rg (\(\);) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj 0 0 0 rg (AA) Tj .188235 .188235 .188235 rg (-) Tj (>) Tj 0 0 0 rg (B_ptr) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (BB) Tj (;) Tj .733333 .733333 .733333 rg  T* (   ) Tj 0 0 0 rg (BB) Tj .188235 .188235 .188235 rg (-) Tj (>) Tj 0 0 0 rg (A_ptr) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (AA) Tj (;) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj /F5 10 Tf 0 .501961 0 rg (return) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 544.2394 cm
q
BT 1 0 0 1 0 50 Tm .405186 Tw 12 TL /F1 10 Tf 0 0 0 rg (The problem with the code above is that destructors will not be called so there is a memory leak. Keep in mind that) Tj T* 0 Tw 1.003561 Tw (the managed object of the shared pointer is deleted when the reference count reaches zero \227. Let's analyze the) Tj T* 0 Tw 2.372705 Tw (situation. When ) Tj /F3 10 Tf (BB) Tj /F1 10 Tf ( goes out of scope, it will be not be deleted because it still manages the object to which) Tj T* 0 Tw .213052 Tw /F3 10 Tf (AA.B_ptr) Tj /F1 10 Tf ( points. A similar situation occurs with the ) Tj /F3 10 Tf (AA) Tj /F1 10 Tf ( \227. If it goes out of scope, its managed object is not deleted) Tj T* 0 Tw (either because ) Tj /F3 10 Tf (BB.A_ptr) Tj /F1 10 Tf ( points to it. This problem can be solved with a weak pointer.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 285.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
1 .941176 .941176 rg
n 138 192 36 12 re f*
1 .941176 .941176 rg
n 138 132 36 12 re f*
BT 1 0 0 1 0 242 Tm 12 TL /F5 10 Tf 0 .501961 0 rg (struct) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .690196 0 .376471 rg (A) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T*  T* /F5 10 Tf 0 .501961 0 rg (struct) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .690196 0 .376471 rg (B) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (   ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (shared_ptr) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg (A) Tj .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (A_ptr) Tj (;) Tj .733333 .733333 .733333 rg  T* (   ) Tj .188235 .188235 .188235 rg (~) Tj 0 0 0 rg (B) Tj (\(\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (cout) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj .729412 .129412 .129412 rg ("~B\(\)") Tj 0 0 0 rg (;) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T*  T* /F5 10 Tf 0 .501961 0 rg (struct) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .690196 0 .376471 rg (A) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (   ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (weak_ptr) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg (B) Tj .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (B_ptr) Tj (;) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// using weak_ptr instead of shared_ptr) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj .188235 .188235 .188235 rg (~) Tj 0 0 0 rg (A) Tj (\(\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (cout) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj .729412 .129412 .129412 rg ("~A\(\)") Tj 0 0 0 rg (;) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T*  T* /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .376471 .690196 rg (main) Tj /F3 10 Tf 0 0 0 rg (\(\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (   ) Tj /F5 10 Tf 0 .501961 0 rg (auto) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (BB) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (make_shared) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg (B) Tj .188235 .188235 .188235 rg (>) Tj 0 0 0 rg (\(\);) Tj .733333 .733333 .733333 rg  T* (   ) Tj /F5 10 Tf 0 .501961 0 rg (auto) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (AA) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (make_shared) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg (A) Tj .188235 .188235 .188235 rg (>) Tj 0 0 0 rg (\(\);) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj 0 0 0 rg (AA) Tj .188235 .188235 .188235 rg (-) Tj (>) Tj 0 0 0 rg (B_ptr) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (BB) Tj (;) Tj .733333 .733333 .733333 rg  T* (   ) Tj 0 0 0 rg (BB) Tj .188235 .188235 .188235 rg (-) Tj (>) Tj 0 0 0 rg (A_ptr) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (AA) Tj (;) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj /F5 10 Tf 0 .501961 0 rg (return) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 229.4394 cm
q
BT 1 0 0 1 0 38 Tm .148705 Tw 12 TL /F1 10 Tf 0 0 0 rg (Now, both destructors are called when ) Tj /F3 10 Tf (BB) Tj /F1 10 Tf ( goes out of scope. It can be destroyed because a weak pointer pointed to) Tj T* 0 Tw .902459 Tw (it and later, ) Tj /F3 10 Tf (AA) Tj /F1 10 Tf ( can be destroyed because it is pointing to nothing. It doesn't matter whether ) Tj /F3 10 Tf (AA) Tj /F1 10 Tf ( or ) Tj /F3 10 Tf (BB) Tj /F1 10 Tf ( goes out of) Tj T* 0 Tw .07155 Tw (scope first. When ) Tj /F3 10 Tf (BB) Tj /F1 10 Tf ( goes out of scope, it calls for the destruction of all managed objects, like ) Tj /F3 10 Tf (A_ptr) Tj /F1 10 Tf (. So, even if ) Tj /F3 10 Tf (AA) Tj /F1 10 Tf  T* 0 Tw (went out of scope first and was not destroyed, they will be destroyed together with ) Tj /F3 10 Tf (BB) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 196.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F2 14 Tf .12549 .262745 .360784 rg (Hash Tables) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 178.6394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (This chapter covers hash tables. You will learn the following:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 172.6394 cm
Q
q
1 0 0 1 40.01575 172.6394 cm
Q
q
1 0 0 1 40.01575 160.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (1.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (What is a hash table and why should you use it?) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 154.6394 cm
Q
q
1 0 0 1 40.01575 142.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (2.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (What is hashing and a hash function?) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 136.6394 cm
Q
q
1 0 0 1 40.01575 124.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (3.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (What are the C++ standard library implementations for hash tables?) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 124.6394 cm
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3\) Modern C++) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (20) Tj T* ET
Q
Q
 
endstream
endobj
570 0 obj
<<
/Length 12951
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 772.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F2 12 Tf 14.4 TL (Introduction) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 730.6394 cm
q
BT 1 0 0 1 0 26 Tm .6621 Tw 12 TL /F1 10 Tf 0 0 0 rg (A ) Tj /F2 10 Tf (hash table) Tj /F1 10 Tf ( is a data structure that stores elements in key-value pairs. ) Tj /F2 10 Tf (Key) Tj /F1 10 Tf ( is a unique value used to compute a) Tj T* 0 Tw .605186 Tw (table index and ) Tj /F2 10 Tf (value) Tj /F1 10 Tf ( is the data associated with the key. The benefit of using a hash table is its fast access time.) Tj T* 0 Tw (Typically, the time complexity is a constant \(O\(1\) access time\).) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 701.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 19.2 re B*
Q
q
BT 1 0 0 1 0 2.2 Tm 13.2 TL /F2 11 Tf .12549 .262745 .360784 rg (Hashing Function) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 647.4394 cm
q
BT 1 0 0 1 0 38 Tm .694205 Tw 12 TL /F1 10 Tf 0 0 0 rg (As stated previously, in a hash table, a new index is processed using the key and the corresponding value for this) Tj T* 0 Tw 1.66811 Tw (key is stored in the index. This process is called hashing and the function performing this operation is called a) Tj T* 0 Tw .896894 Tw /F2 10 Tf (hashing function) Tj /F1 10 Tf (. For example, consider a hashing function as operation mod 10 and a set of key-value pairs to) Tj T* 0 Tw (insert into hash table ) Tj /F3 10 Tf ({{15,) Tj ( ) Tj (25},) Tj ( ) Tj ({23,) Tj ( ) Tj (63},) Tj ( ) Tj ({12,) Tj ( ) Tj (22},) Tj ( ) Tj ({48,) Tj ( ) Tj (78},) Tj ( ) Tj ({30,) Tj ( ) Tj (0}}) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 641.4394 cm
Q
q
1 0 0 1 40.01575 535.4394 cm
q
1 1 1 rg
n 0 106 515.2441 -16 re f*
.878431 .878431 .878431 rg
n 0 90 515.2441 -18 re f*
1 1 1 rg
n 0 72 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 54 515.2441 -18 re f*
1 1 1 rg
n 0 36 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 18 515.2441 -18 re f*
.94902 .94902 .94902 rg
n 0 106 515.2441 -16 re f*
.12549 .262745 .360784 rg
BT /F2 10 Tf 10 TL ET
q
1 0 0 1 6 93 cm
q
.94902 .94902 .94902 rg
n 0 0 116.811 10 re f*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 0 Tm /F2 10 Tf 10 TL 50.06551 0 Td (key) Tj T* -50.06551 0 Td ET
Q
Q
q
1 0 0 1 134.811 93 cm
q
.94902 .94902 .94902 rg
n 0 0 245.622 10 re f*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 0 Tm /F2 10 Tf 10 TL 44.74102 0 Td (index based on hashing function) Tj T* -44.74102 0 Td ET
Q
Q
q
1 0 0 1 392.4331 93 cm
q
.94902 .94902 .94902 rg
n 0 0 116.811 10 re f*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 0 Tm /F2 10 Tf 10 TL 45.62051 0 Td (value) Tj T* -45.62051 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (15) Tj T* ET
Q
Q
q
1 0 0 1 134.811 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (15 % 10 = 5) Tj T* ET
Q
Q
q
1 0 0 1 392.4331 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (25) Tj T* ET
Q
Q
q
1 0 0 1 6 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (23) Tj T* ET
Q
Q
q
1 0 0 1 134.811 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (23 % 10 = 3) Tj T* ET
Q
Q
q
1 0 0 1 392.4331 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (63) Tj T* ET
Q
Q
q
1 0 0 1 6 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (12) Tj T* ET
Q
Q
q
1 0 0 1 134.811 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (12 % 10 = 2) Tj T* ET
Q
Q
q
1 0 0 1 392.4331 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (22) Tj T* ET
Q
Q
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (48) Tj T* ET
Q
Q
q
1 0 0 1 134.811 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (48 % 10 = 8) Tj T* ET
Q
Q
q
1 0 0 1 392.4331 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (78) Tj T* ET
Q
Q
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (30) Tj T* ET
Q
Q
q
1 0 0 1 134.811 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (30 % 10 = 0) Tj T* ET
Q
Q
q
1 0 0 1 392.4331 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 90 m 515.2441 90 l S
n 0 72 m 515.2441 72 l S
n 0 54 m 515.2441 54 l S
n 0 36 m 515.2441 36 l S
n 0 18 m 515.2441 18 l S
n 128.811 0 m 128.811 106 l S
n 386.4331 0 m 386.4331 106 l S
n 0 106 m 515.2441 106 l S
n 0 0 m 515.2441 0 l S
n 0 0 m 0 106 l S
n 515.2441 0 m 515.2441 106 l S
Q
Q
Q
q
1 0 0 1 40.01575 535.4394 cm
Q
q
1 0 0 1 40.01575 517.4394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (This means that the positions in the hash table will be the following:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 511.4394 cm
Q
q
1 0 0 1 40.01575 475.4394 cm
q
1 1 1 rg
n 0 36 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 18 515.2441 -18 re f*
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (position) Tj T* ET
Q
Q
q
1 0 0 1 52.84037 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 99.68074 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (1) Tj T* ET
Q
Q
q
1 0 0 1 146.5211 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (2) Tj T* ET
Q
Q
q
1 0 0 1 193.3615 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3) Tj T* ET
Q
Q
q
1 0 0 1 240.2019 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (4) Tj T* ET
Q
Q
q
1 0 0 1 287.0422 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (5) Tj T* ET
Q
Q
q
1 0 0 1 333.8826 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (6) Tj T* ET
Q
Q
q
1 0 0 1 380.723 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (7) Tj T* ET
Q
Q
q
1 0 0 1 427.5634 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (8) Tj T* ET
Q
Q
q
1 0 0 1 474.4037 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (9) Tj T* ET
Q
Q
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (value) Tj T* ET
Q
Q
q
1 0 0 1 52.84037 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 146.5211 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (22) Tj T* ET
Q
Q
q
1 0 0 1 193.3615 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (63) Tj T* ET
Q
Q
q
1 0 0 1 287.0422 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (25) Tj T* ET
Q
Q
q
1 0 0 1 427.5634 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (78) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 18 m 515.2441 18 l S
n 46.84037 0 m 46.84037 36 l S
n 93.68074 0 m 93.68074 36 l S
n 140.5211 0 m 140.5211 36 l S
n 187.3615 0 m 187.3615 36 l S
n 234.2019 0 m 234.2019 36 l S
n 281.0422 0 m 281.0422 36 l S
n 327.8826 0 m 327.8826 36 l S
n 374.723 0 m 374.723 36 l S
n 421.5634 0 m 421.5634 36 l S
n 468.4037 0 m 468.4037 36 l S
n 0 36 m 515.2441 36 l S
n 0 0 m 515.2441 0 l S
n 0 0 m 0 36 l S
n 515.2441 0 m 515.2441 36 l S
Q
Q
Q
q
1 0 0 1 40.01575 475.4394 cm
Q
q
1 0 0 1 40.01575 445.4394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.020195 Tw (As you can see, there's a good chance that more than one key value will compute the same index. To solve this) Tj T* 0 Tw (problem, in a standard library, values are stored in buckets \227 so multiple values can be under the same index.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 415.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F2 12 Tf .12549 .262745 .360784 rg (C++ Standard Library Hash Tables) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 385.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .293182 Tw (In the C++ standard library, four different hash tables are available. They are the equivalents of standard containers) Tj T* 0 Tw (but with a hashing function:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 379.0394 cm
Q
q
1 0 0 1 40.01575 379.0394 cm
Q
q
1 0 0 1 40.01575 367.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (std::unordered_set \(equivalent of std::set\)) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 361.0394 cm
Q
q
1 0 0 1 40.01575 349.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (std::unordered_multiset \(equivalent of std::multiset\)) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 343.0394 cm
Q
q
1 0 0 1 40.01575 331.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (std::unordered_map \(equivalent of std::map\)) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 325.0394 cm
Q
q
1 0 0 1 40.01575 313.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (std::unordered_multimap \(equivalent of std::multimap\)) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 313.0394 cm
Q
q
1 0 0 1 40.01575 295.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Let's look at them one by one.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 265.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 19.2 re B*
Q
q
BT 1 0 0 1 0 2.2 Tm 13.2 TL /F2 11 Tf .12549 .262745 .360784 rg (Set) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 247.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Let's start with ) Tj /F2 10 Tf (std::unordered_set) Tj /F1 10 Tf (. According to the C++ Reference:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 241.8394 cm
Q
q
1 0 0 1 40.01575 217.8394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 14 Tm 2.607435 Tw 12 TL /F3 10 Tf 0 0 0 rg (std::unordered_set) Tj /F1 10 Tf ( is an associative container holding a set of unique objects of type Key. Search,) Tj T* 0 Tw (insertion, and removal have average constant time complexity.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 217.8394 cm
Q
q
1 0 0 1 40.01575 187.8394 cm
q
BT 1 0 0 1 0 14 Tm .401339 Tw 12 TL /F1 10 Tf 0 0 0 rg (The most important aspect of std::unordered_set is that it contains ) Tj /F2 10 Tf (unique objects) Tj /F1 10 Tf (, which are of type ) Tj /F2 10 Tf (key) Tj /F1 10 Tf (, and has) Tj T* 0 Tw (average access time ) Tj /F2 10 Tf (constant) Tj /F1 10 Tf (. An example of a ) Tj /F3 10 Tf (std::unordered_set) Tj /F1 10 Tf ( declaration is shown in the code below:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 169.0394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (unordered_set) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (n) Tj (;) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 137.0394 cm
q
BT 1 0 0 1 0 14 Tm 1.54694 Tw 12 TL /F1 10 Tf 0 0 0 rg (To initialize ) Tj /F3 10 Tf (std::unordered_set) Tj /F1 10 Tf (, we can simply assign values to it at declaration. Remember that the given) Tj T* 0 Tw (values have to be unique.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 118.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (unordered_set) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (n) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (2) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (3) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (4) Tj /F3 10 Tf 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 98.23937 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (As in other standard containers, we can conduct operations like the following:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 92.23937 cm
Q
q
1 0 0 1 40.01575 92.23937 cm
Q
q
1 0 0 1 40.01575 80.23937 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (size\(\),) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 74.23937 cm
Q
q
1 0 0 1 40.01575 62.23937 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (insert\(...\),) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 56.23937 cm
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3\) Modern C++) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (21) Tj T* ET
Q
Q
 
endstream
endobj
571 0 obj
<<
/Length 12248
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 775.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (erase\(...\),) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 769.0394 cm
Q
q
1 0 0 1 40.01575 757.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (count\(...\),) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 751.0394 cm
Q
q
1 0 0 1 40.01575 739.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (find\(...\),) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 733.0394 cm
Q
q
1 0 0 1 40.01575 721.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (iteration over elements.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 721.0394 cm
Q
q
1 0 0 1 40.01575 703.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Similar to ) Tj /F3 10 Tf (std::unordered_set) Tj /F1 10 Tf ( is ) Tj /F2 10 Tf (std::unordered_multiset) Tj /F1 10 Tf (. Let's start with a definition:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 697.0394 cm
Q
q
1 0 0 1 40.01575 673.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 14 Tm .586469 Tw 12 TL /F3 10 Tf 0 0 0 rg (std::unordered_multiset) Tj /F1 10 Tf ( is an associative container holding a set of possibly non-unique objects of type) Tj T* 0 Tw (Key. Search, insertion, and removal have average constant time complexity.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 673.0394 cm
Q
q
1 0 0 1 40.01575 631.0394 cm
q
BT 1 0 0 1 0 26 Tm .156175 Tw 12 TL /F1 10 Tf 0 0 0 rg (This means that the only difference between ) Tj /F3 10 Tf (std::unordered_set) Tj /F1 10 Tf ( and ) Tj /F3 10 Tf (std::unordered_multiset) Tj /F1 10 Tf ( is that the) Tj T* 0 Tw 1.028273 Tw (latter allows multiple keys to be stored. An example of the ) Tj /F3 10 Tf (std::unordered_multiset) Tj /F1 10 Tf ( declaration is shown in) Tj T* 0 Tw (code below:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 612.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (unordered_multiset) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (n) Tj (;) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 580.2394 cm
q
BT 1 0 0 1 0 14 Tm 1.103606 Tw 12 TL /F1 10 Tf 0 0 0 rg (To initialize ) Tj /F3 10 Tf (std::unordered_multiset) Tj /F1 10 Tf (, we can simply assign values to it at declaration. This time the values) Tj T* 0 Tw (may be repeated.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 561.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (unordered_multiset) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (n) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (2) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (2) Tj /F3 10 Tf 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 532.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 19.2 re B*
Q
q
BT 1 0 0 1 0 2.2 Tm 13.2 TL /F2 11 Tf .12549 .262745 .360784 rg (Map) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 514.2394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Now, we will move to the map containers, starting with ) Tj /F2 10 Tf (std::unordered_map) Tj /F1 10 Tf (. According to the C++ Reference:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 508.2394 cm
Q
q
1 0 0 1 40.01575 484.2394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 14 Tm .673675 Tw 12 TL /F3 10 Tf 0 0 0 rg (std:unordered_map) Tj /F1 10 Tf ( is an associative container holding key-value pairs with unique keys. Search, insertion,) Tj T* 0 Tw (and removal of elements have average constant time complexity.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 484.2394 cm
Q
q
1 0 0 1 40.01575 442.2394 cm
q
BT 1 0 0 1 0 26 Tm 1.616007 Tw 12 TL /F1 10 Tf 0 0 0 rg (This means that the most important information about ) Tj /F3 10 Tf (std::unordered_map) Tj /F1 10 Tf ( is that it stores ) Tj /F2 10 Tf (key-value pairs) Tj /F1 10 Tf (,) Tj T* 0 Tw 3.089116 Tw (where ) Tj /F2 10 Tf (key is unique) Tj /F1 10 Tf ( and the average access time is ) Tj /F2 10 Tf (constant) Tj /F1 10 Tf (. The code below shows an example of a) Tj T* 0 Tw /F3 10 Tf (std::unordered_map) Tj /F1 10 Tf ( declaration where key is of type ) Tj /F3 10 Tf (int) Tj /F1 10 Tf ( and value is of type ) Tj /F3 10 Tf (std::string) Tj /F1 10 Tf (:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 423.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (unordered_map) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (string) Tj .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (m) Tj (;) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 391.4394 cm
q
BT 1 0 0 1 0 14 Tm -0.008494 Tw 12 TL /F1 10 Tf 0 0 0 rg (To initialize ) Tj /F3 10 Tf (std::unordered_map) Tj /F1 10 Tf (, we can simply assign values to it at declaration. Remember that the key values) Tj T* 0 Tw (have to be unique.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 348.6394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
1 .941176 .941176 rg
n 264 24 36 12 re f*
1 .941176 .941176 rg
n 264 12 30 12 re f*
1 .941176 .941176 rg
n 264 0 30 12 re f*
BT 1 0 0 1 0 26 Tm 12 TL /F3 10 Tf 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (unordered_map) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (string) Tj .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (m) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({{) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj .729412 .129412 .129412 rg ("zero") Tj 0 0 0 rg (},) Tj .733333 .733333 .733333 rg  T* (                                        ) Tj 0 0 0 rg ({) Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj .729412 .129412 .129412 rg ("one") Tj 0 0 0 rg (},) Tj .733333 .733333 .733333 rg  T* (                                        ) Tj 0 0 0 rg ({) Tj /F5 10 Tf 0 0 .815686 rg (2) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj .729412 .129412 .129412 rg ("two") Tj 0 0 0 rg (}};) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 316.6394 cm
q
BT 1 0 0 1 0 14 Tm 1.146469 Tw 12 TL /F1 10 Tf 0 0 0 rg (Similarly, as with a set container, ) Tj /F2 10 Tf (std::unordered_multimap) Tj /F1 10 Tf ( and ) Tj /F3 10 Tf (std::unordered_map) Tj /F1 10 Tf ( have a lot in common.) Tj T* 0 Tw (Let's look at the C++ Reference definition:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 310.6394 cm
Q
q
1 0 0 1 40.01575 274.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 26 Tm 3.931409 Tw 12 TL /F3 10 Tf 0 0 0 rg (std::unordered_multimap) Tj /F1 10 Tf ( is an unordered associative container that supports equivalent keys \(an) Tj T* 0 Tw .260273 Tw (unordered_multimap may contain multiple copies of each key value\) and that associates values of another type) Tj T* 0 Tw (with the keys. \(...\) Search, insertion, and removal have average constant time complexity.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 274.6394 cm
Q
q
1 0 0 1 40.01575 232.6394 cm
q
BT 1 0 0 1 0 26 Tm .198381 Tw 12 TL /F1 10 Tf 0 0 0 rg (The only difference is that ) Tj /F3 10 Tf (std::unordered_multimap) Tj /F1 10 Tf ( allows for keys to be repeated. The code below shows an) Tj T* 0 Tw 4.310273 Tw (example of a ) Tj /F3 10 Tf (std::unordered_multimap) Tj /F1 10 Tf ( declaration where key is of type ) Tj /F3 10 Tf (int) Tj /F1 10 Tf ( and value is of type) Tj T* 0 Tw /F3 10 Tf (std::string) Tj /F1 10 Tf (:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 213.8394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (unordered_multimap) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (string) Tj .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (m) Tj (;) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 181.8394 cm
q
BT 1 0 0 1 0 14 Tm .547131 Tw 12 TL /F1 10 Tf 0 0 0 rg (To initialize ) Tj /F3 10 Tf (std::unordered_multimap) Tj /F1 10 Tf (, as before, we can assign values to it at declaration. This time the keys) Tj T* 0 Tw (don't need to be unique.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 127.0394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
1 .941176 .941176 rg
n 294 36 36 12 re f*
1 .941176 .941176 rg
n 294 24 30 12 re f*
1 .941176 .941176 rg
n 294 12 30 12 re f*
1 .941176 .941176 rg
n 294 0 36 12 re f*
BT 1 0 0 1 0 38 Tm 12 TL /F3 10 Tf 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (unordered_multimap) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (string) Tj .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (m) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({{) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj .729412 .129412 .129412 rg ("zero") Tj 0 0 0 rg (},) Tj .733333 .733333 .733333 rg  T* (                                             ) Tj 0 0 0 rg ({) Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj .729412 .129412 .129412 rg ("one") Tj 0 0 0 rg (},) Tj .733333 .733333 .733333 rg  T* (                                             ) Tj 0 0 0 rg ({) Tj /F5 10 Tf 0 0 .815686 rg (2) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj .729412 .129412 .129412 rg ("two") Tj 0 0 0 rg (},) Tj .733333 .733333 .733333 rg  T* (                                             ) Tj 0 0 0 rg ({) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj .729412 .129412 .129412 rg ("zero") Tj 0 0 0 rg (}};) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 107.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (And of course, it supports several operations like other standard library containers.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 76.63937 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F2 12 Tf 14.4 TL (Summary) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 58.63937 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (To summarize this module, we would like to compare all of the standard library associative containers.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 54.85039 cm
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3\) Modern C++) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (22) Tj T* ET
Q
Q
 
endstream
endobj
572 0 obj
<<
/Length 14176
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 593.0394 cm
q
1 1 1 rg
n 0 194 515.2441 -26 re f*
.878431 .878431 .878431 rg
n 0 168 515.2441 -18 re f*
1 1 1 rg
n 0 150 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 132 515.2441 -18 re f*
1 1 1 rg
n 0 114 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 96 515.2441 -18 re f*
1 1 1 rg
n 0 78 515.2441 -30 re f*
.878431 .878431 .878431 rg
n 0 48 515.2441 -18 re f*
1 1 1 rg
n 0 30 515.2441 -30 re f*
.94902 .94902 .94902 rg
n 0 194 515.2441 -26 re f*
.12549 .262745 .360784 rg
BT /F2 10 Tf 10 TL ET
q
1 0 0 1 6 171 cm
q
.94902 .94902 .94902 rg
n 0 0 91.04882 10 re f*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 0 Tm /F2 10 Tf 10 TL 22.18941 0 Td (Container) Tj T* -22.18941 0 Td ET
Q
Q
q
1 0 0 1 109.0488 171 cm
q
.94902 .94902 .94902 rg
n 0 0 91.04882 10 re f*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 0 Tm /F2 10 Tf 10 TL 29.68941 0 Td (Sorted) Tj T* -29.68941 0 Td ET
Q
Q
q
1 0 0 1 212.0976 171 cm
q
.94902 .94902 .94902 rg
n 0 0 91.04882 10 re f*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 0 Tm /F2 10 Tf 10 TL 32.18441 0 Td (Value) Tj T* -32.18441 0 Td ET
Q
Q
q
1 0 0 1 315.1465 171 cm
q
.94902 .94902 .94902 rg
n 0 0 91.04882 20 re f*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 10 Tm /F2 10 Tf 10 TL 12.72941 0 Td (Identical keys) Tj T* 12.51 0 Td (possible) Tj T* -25.23941 0 Td ET
Q
Q
q
1 0 0 1 418.1953 171 cm
q
.94902 .94902 .94902 rg
n 0 0 91.04882 20 re f*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 10 Tm /F2 10 Tf 10 TL 7.724409 0 Td (Average access) Tj T* 27.52 0 Td (time) Tj T* -35.24441 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 153 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (std::set) Tj T* ET
Q
Q
q
1 0 0 1 109.0488 153 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (yes) Tj T* ET
Q
Q
q
1 0 0 1 212.0976 153 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (no) Tj T* ET
Q
Q
q
1 0 0 1 315.1465 153 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (no) Tj T* ET
Q
Q
q
1 0 0 1 418.1953 153 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (logarithmic) Tj T* ET
Q
Q
q
1 0 0 1 6 135 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (std::unordered_set) Tj T* ET
Q
Q
q
1 0 0 1 109.0488 135 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (no) Tj T* ET
Q
Q
q
1 0 0 1 212.0976 135 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (no) Tj T* ET
Q
Q
q
1 0 0 1 315.1465 135 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (no) Tj T* ET
Q
Q
q
1 0 0 1 418.1953 135 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (constant) Tj T* ET
Q
Q
q
1 0 0 1 6 117 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (std::map) Tj T* ET
Q
Q
q
1 0 0 1 109.0488 117 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (yes) Tj T* ET
Q
Q
q
1 0 0 1 212.0976 117 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (yes) Tj T* ET
Q
Q
q
1 0 0 1 315.1465 117 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (no) Tj T* ET
Q
Q
q
1 0 0 1 418.1953 117 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (logarithmic) Tj T* ET
Q
Q
q
1 0 0 1 6 99 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (std::unordered_map) Tj T* ET
Q
Q
q
1 0 0 1 109.0488 99 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (no) Tj T* ET
Q
Q
q
1 0 0 1 212.0976 99 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (yes) Tj T* ET
Q
Q
q
1 0 0 1 315.1465 99 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (no) Tj T* ET
Q
Q
q
1 0 0 1 418.1953 99 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (constant) Tj T* ET
Q
Q
q
1 0 0 1 6 81 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (std::multiset) Tj T* ET
Q
Q
q
1 0 0 1 109.0488 81 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (yes) Tj T* ET
Q
Q
q
1 0 0 1 212.0976 81 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (no) Tj T* ET
Q
Q
q
1 0 0 1 315.1465 81 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (yes) Tj T* ET
Q
Q
q
1 0 0 1 418.1953 81 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (logarithmic) Tj T* ET
Q
Q
q
1 0 0 1 6 51 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (std::unordered_mult) Tj T* (iset) Tj T* ET
Q
Q
q
1 0 0 1 109.0488 63 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (no) Tj T* ET
Q
Q
q
1 0 0 1 212.0976 63 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (no) Tj T* ET
Q
Q
q
1 0 0 1 315.1465 63 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (yes) Tj T* ET
Q
Q
q
1 0 0 1 418.1953 63 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (constant) Tj T* ET
Q
Q
q
1 0 0 1 6 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (std::multimap) Tj T* ET
Q
Q
q
1 0 0 1 109.0488 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (yes) Tj T* ET
Q
Q
q
1 0 0 1 212.0976 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (yes) Tj T* ET
Q
Q
q
1 0 0 1 315.1465 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (yes) Tj T* ET
Q
Q
q
1 0 0 1 418.1953 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (logarithmic) Tj T* ET
Q
Q
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (std::unordered_mult) Tj T* (imap) Tj T* ET
Q
Q
q
1 0 0 1 109.0488 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (no) Tj T* ET
Q
Q
q
1 0 0 1 212.0976 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (yes) Tj T* ET
Q
Q
q
1 0 0 1 315.1465 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (yes) Tj T* ET
Q
Q
q
1 0 0 1 418.1953 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (constant) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 168 m 515.2441 168 l S
n 0 150 m 515.2441 150 l S
n 0 132 m 515.2441 132 l S
n 0 114 m 515.2441 114 l S
n 0 96 m 515.2441 96 l S
n 0 78 m 515.2441 78 l S
n 0 48 m 515.2441 48 l S
n 0 30 m 515.2441 30 l S
n 103.0488 0 m 103.0488 194 l S
n 206.0976 0 m 206.0976 194 l S
n 309.1465 0 m 309.1465 194 l S
n 412.1953 0 m 412.1953 194 l S
n 0 194 m 515.2441 194 l S
n 0 0 m 515.2441 0 l S
n 0 0 m 0 194 l S
n 515.2441 0 m 515.2441 194 l S
Q
Q
Q
q
1 0 0 1 40.01575 593.0394 cm
Q
q
1 0 0 1 40.01575 560.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F2 14 Tf .12549 .262745 .360784 rg (std::array Container) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 542.2394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (This chapter covers the ) Tj /F3 10 Tf (std::array) Tj /F1 10 Tf ( container. You will learn the following:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 536.2394 cm
Q
q
1 0 0 1 40.01575 536.2394 cm
Q
q
1 0 0 1 40.01575 524.2394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (1.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (What is std::array and why was it created?) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 518.2394 cm
Q
q
1 0 0 1 40.01575 506.2394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (2.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (What is the syntax of ) Tj /F3 10 Tf (std::array) Tj /F1 10 Tf (?) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 506.2394 cm
Q
q
1 0 0 1 40.01575 475.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F2 12 Tf 14.4 TL (Introduction) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 457.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Let's start with the definition.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 427.8394 cm
q
BT 1 0 0 1 0 14 Tm .616005 Tw 12 TL /F2 10 Tf 0 0 0 rg (std::array) Tj /F1 10 Tf ( is a container that is built on top of fixed-size arrays. It combines the performance and accessibility of a) Tj T* 0 Tw (C-style array with other benefits of a standard container such as:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 421.8394 cm
Q
q
1 0 0 1 40.01575 421.8394 cm
Q
q
1 0 0 1 40.01575 409.8394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (knowing its own size) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 403.8394 cm
Q
q
1 0 0 1 40.01575 391.8394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (supporting assignment) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 385.8394 cm
Q
q
1 0 0 1 40.01575 373.8394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (random access iterators) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 373.8394 cm
Q
q
1 0 0 1 40.01575 355.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (It also supports standard container operations like ) Tj /F3 10 Tf (std::sort) Tj /F1 10 Tf (, ) Tj /F3 10 Tf (std::find) Tj /F1 10 Tf (, etc.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 301.8394 cm
q
BT 1 0 0 1 0 38 Tm .559243 Tw 12 TL /F3 10 Tf 0 0 0 rg (std::array) Tj /F1 10 Tf ( is similar to a C-style array but not identical. When we pass a C-style array to a function, we have to) Tj T* 0 Tw .819719 Tw (pass the address and the size of the array. The reason is that the information about the array size gets lost when) Tj T* 0 Tw .790742 Tw (passing the array address to the function \(i.e., in form of pointer\). This problem can be solved using std::array. To) Tj T* 0 Tw (use std::array, remember to include ) Tj /F3 10 Tf (<) Tj (array) Tj (>) Tj /F1 10 Tf ( STL.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 283.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (This datatype is especially important when using SYCL as it doesn't allow dynamic memory allocation in a kernel.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 253.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F2 12 Tf .12549 .262745 .360784 rg (Syntax of std::array) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 235.4394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (An example of a ) Tj /F3 10 Tf (std::array) Tj /F1 10 Tf ( declaration is shown in the code below:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 216.6394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (array) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (5) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (n) Tj (;) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 184.6394 cm
q
BT 1 0 0 1 0 14 Tm 1.293087 Tw 12 TL /F1 10 Tf 0 0 0 rg (We need to specify the datatype that will be stored in the array \(in the example, it is ) Tj /F3 10 Tf (int) Tj /F1 10 Tf (\) and its size \() Tj /F3 10 Tf (5) Tj /F1 10 Tf ( in the) Tj T* 0 Tw (example code\).) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 166.6394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (To initialize an ) Tj /F3 10 Tf (std::array) Tj /F1 10 Tf (, we can simply assign values to it at declaration.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 135.8394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 14 Tm 12 TL /F3 10 Tf 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (array) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (5) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (n) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (2) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (3) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (4) Tj /F3 10 Tf 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (array) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (5) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (m) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (2) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (3) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (4) Tj /F3 10 Tf 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 103.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.06155 Tw (As the length of the array needs to be known at compile time, we can declare the array and later initialize it with) Tj T* 0 Tw (values.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 73.03937 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 14 Tm 12 TL /F3 10 Tf 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (array) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (n) Tj (;) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (n) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (2) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (3) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (4) Tj /F3 10 Tf 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3\) Modern C++) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (23) Tj T* ET
Q
Q
 
endstream
endobj
573 0 obj
<<
/Length 10563
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 773.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 19.2 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.2 Tm /F2 11 Tf 13.2 TL (Usage) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 743.8394 cm
q
BT 1 0 0 1 0 14 Tm .26829 Tw 12 TL /F1 10 Tf 0 0 0 rg (We can use ) Tj /F3 10 Tf (std::array) Tj /F1 10 Tf ( in every situation when we are using a C-style array. Just make sure you know its size in) Tj T* 0 Tw (advance.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 701.8394 cm
q
BT 1 0 0 1 0 26 Tm .253373 Tw 12 TL /F1 10 Tf 0 0 0 rg (To access the element at a specific position, we can use C-style brackets ) Tj /F3 10 Tf ([) Tj ( ) Tj (]) Tj /F1 10 Tf ( \(because the std::array elements are) Tj T* 0 Tw .340742 Tw (placed side by side in memory\) or the ) Tj /F3 10 Tf (at\(\)) Tj /F1 10 Tf ( method. The only difference between them is that ) Tj /F3 10 Tf (at\(\)) Tj /F1 10 Tf ( checks bound,) Tj T* 0 Tw (while using the C-style brackets doesn't check bound.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 659.0394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 26 Tm 12 TL /F3 10 Tf 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (array) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (n) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (2) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (3) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (4) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (5) Tj /F3 10 Tf 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (n) Tj ([) Tj /F5 10 Tf 0 0 .815686 rg (3) Tj /F3 10 Tf 0 0 0 rg (];) Tj .733333 .733333 .733333 rg (    ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// returns element of the array at position 3, doesn't check bound) Tj T* /F3 10 Tf 0 0 0 rg (n) Tj (.) Tj (at) Tj (\() Tj /F5 10 Tf 0 0 .815686 rg (3) Tj /F3 10 Tf 0 0 0 rg (\);) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// returns element of the array at position 3, checks bound) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 639.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (We can also access the first and last element of the array using ) Tj /F3 10 Tf (front) Tj /F1 10 Tf ( and ) Tj /F3 10 Tf (back) Tj /F1 10 Tf (:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 608.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 14 Tm 12 TL /F3 10 Tf 0 0 0 rg (n) Tj (.) Tj (front) Tj (\(\);) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// returns first element of the array) Tj T* /F3 10 Tf 0 0 0 rg (n) Tj (.) Tj (back) Tj (\(\);) Tj .733333 .733333 .733333 rg (  ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// returns last element of the array) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 588.2394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (To get the length of the ) Tj /F3 10 Tf (std::array) Tj /F1 10 Tf (, use the ) Tj /F3 10 Tf (size\(\)) Tj /F1 10 Tf ( method:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 569.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (n) Tj (.) Tj (size) Tj (\(\);) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 537.4394 cm
q
BT 1 0 0 1 0 14 Tm .244631 Tw 12 TL /F1 10 Tf 0 0 0 rg (Like other standard containers, the ) Tj /F3 10 Tf (std::array) Tj /F1 10 Tf ( provides iterator functions that allow it to iterate over the container) Tj T* 0 Tw (in a standard or reversed way.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 508.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 19.2 re B*
Q
q
BT 1 0 0 1 0 2.2 Tm 13.2 TL /F2 11 Tf .12549 .262745 .360784 rg (Multidimensional Array) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 478.2394 cm
q
BT 1 0 0 1 0 14 Tm .625227 Tw 12 TL /F1 10 Tf 0 0 0 rg (Like in C-style arrays, it's possible to create a multidimensional ) Tj /F3 10 Tf (std::array) Tj /F1 10 Tf (. Let's look at the example with a 5x3) Tj T* 0 Tw /F3 10 Tf (std::array) Tj /F1 10 Tf (:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 411.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 50 Tm 12 TL /F3 10 Tf 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (array) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (array) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (5) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (3) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (n) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (  ) Tj 0 0 0 rg ({) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (2) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (3) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (4) Tj /F3 10 Tf 0 0 0 rg (},) Tj .733333 .733333 .733333 rg  T* (  ) Tj 0 0 0 rg ({) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (2) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (3) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (4) Tj /F3 10 Tf 0 0 0 rg (},) Tj .733333 .733333 .733333 rg  T* (  ) Tj 0 0 0 rg ({) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (2) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (3) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (4) Tj /F3 10 Tf 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 391.4394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (This means that as a datatype for the outer array, we are using another array.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 385.4394 cm
Q
q
1 0 0 1 40.01575 349.4394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 1.875881 Tw (When using SYCL, consider not using an array of arrays. Instead, use a dedicated structure that contains) Tj T* 0 Tw .855535 Tw (arrays. It will improve memory optimization when storing and accessing the elements. What is more, it will be) Tj T* 0 Tw (more readable for other developers.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 349.4394 cm
Q
q
1 0 0 1 40.01575 316.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F2 14 Tf .12549 .262745 .360784 rg (Move Semantics) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 298.6394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (This chapter covers move semantics. You will learn the following:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 292.6394 cm
Q
q
1 0 0 1 40.01575 292.6394 cm
Q
q
1 0 0 1 40.01575 280.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (1.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (What are move semantics?) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 274.6394 cm
Q
q
1 0 0 1 40.01575 262.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (2.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (What are the different value categories and when should they be used?) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 256.6394 cm
Q
q
1 0 0 1 40.01575 244.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (3.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (What is universal reference T) Tj (&) Tj (&) Tj (?) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 238.6394 cm
Q
q
1 0 0 1 40.01575 226.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (4.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (How and why should std::move be used?) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 220.6394 cm
Q
q
1 0 0 1 40.01575 208.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (5.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (How is a move constructor created? \(Rule of Five\)) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 208.6394 cm
Q
q
1 0 0 1 40.01575 178.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F2 12 Tf 14.4 TL (Introduction) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 148.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 2.690273 Tw (Move semantics allows an object under certain conditions to take ownership of some other object's external) Tj T* 0 Tw (resources.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 117.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F2 12 Tf .12549 .262745 .360784 rg (Value Categories \(glvalue and rvalue\)) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 87.83937 cm
q
BT 1 0 0 1 0 14 Tm 1.444705 Tw 12 TL /F1 10 Tf 0 0 0 rg (In C++, every expression has a type and belongs to a specific ) Tj /F2 10 Tf (value category) Tj /F1 10 Tf (. These are the basic rules for a) Tj T* 0 Tw (compiler to follow when creating, copying, and moving objects during expression evaluation.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 69.83937 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Here are some C++ expression value categories:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 63.83937 cm
Q
q
1 0 0 1 40.01575 63.83937 cm
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3\) Modern C++) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (24) Tj T* ET
Q
Q
 
endstream
endobj
574 0 obj
<<
/Length 8799
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 775.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (glvalue) Tj /F1 10 Tf ( \227 Expression that has an identity; it's possible to determine if two expressions refer to the same entity.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 769.0394 cm
Q
q
1 0 0 1 40.01575 757.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (rvalue) Tj /F1 10 Tf ( \227 Expression that can be moved from.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 751.0394 cm
Q
q
1 0 0 1 40.01575 739.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (lvalue) Tj /F1 10 Tf ( \227 Has an identity and can't be moved from.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 733.0394 cm
Q
q
1 0 0 1 40.01575 721.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (xvalue) Tj /F1 10 Tf ( \227 Has an identity and can be moved from.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 715.0394 cm
Q
q
1 0 0 1 40.01575 703.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (prvalue) Tj /F1 10 Tf ( \227 Doesn't have an identity and can be moved from.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 703.0394 cm
Q
q
1 0 0 1 40.01575 685.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The diagram below shows different expression types and the dependencies between them:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 679.0394 cm
Q
q
1 0 0 1 40.01575 605.5994 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 195.102 3 cm
q
125.04 0 0 67.44 0 0 cm
/FormXob.2ffb610853e3cb0094e160b2b73415d0 Do
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 605.5994 cm
Q
q
1 0 0 1 40.01575 587.5994 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Let's look at the lvalue and rvalue in the following example:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 508.7994 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 62 Tm 12 TL /F5 10 Tf .188235 .188235 .564706 rg (size_t) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (x) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (x) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// x expression is lvalue) Tj T* /F3 10 Tf .733333 .733333 .733333 rg  T* /F5 10 Tf .188235 .188235 .564706 rg (size_t) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .376471 .690196 rg (foo) Tj /F3 10 Tf 0 0 0 rg (\(\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .501961 .501961 .501961 rg (/* ... */) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T*  T* 0 0 0 rg (foo) Tj (\(\);) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// Result of foo call expr is an rvalue) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 476.7994 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .367584 Tw (Any name of variable, function, template parameter object, or data member is an lvalue. It's important to note that it) Tj T* 0 Tw (doesn't matter how complex the expression is. As long as it maintains an identity, the expression is an lvalue.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 458.7994 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The integer constants are ) Tj /F6 10 Tf (prvalues) Tj /F1 10 Tf (, like in the code above \227 the result of a function call.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 429.5994 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 19.2 re B*
Q
q
BT 1 0 0 1 0 2.2 Tm 13.2 TL /F2 11 Tf .12549 .262745 .360784 rg (Functions Returning lvalue and prvalue) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 411.5994 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Let's imagine a function returning a ) Tj /F3 10 Tf (int) Tj /F1 10 Tf ( value:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 368.7994 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 26 Tm 12 TL /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .376471 .690196 rg (returnValue) Tj /F3 10 Tf 0 0 0 rg (\(\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (   ) Tj /F5 10 Tf 0 .501961 0 rg (return) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (3) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 336.7994 cm
q
BT 1 0 0 1 0 14 Tm .9639 Tw 12 TL /F1 10 Tf 0 0 0 rg (In this case, ) Tj /F3 10 Tf (returnValue\(\)) Tj /F1 10 Tf ( returns the temporary number ) Tj /F3 10 Tf (3) Tj /F1 10 Tf (, which is a prvalue. Now, we will try to assign the) Tj T* 0 Tw (value to it:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 317.9994 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (returnValue) Tj (\(\)) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (17) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// error) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 273.9994 cm
q
BT 1 0 0 1 0 26 Tm .134006 Tw 12 TL /F1 10 Tf 0 0 0 rg (We will receive an error: ) Tj /F3 10 Tf (lvalue) Tj ( ) Tj (required) Tj ( ) Tj (as) Tj ( ) Tj (left) Tj ( ) Tj (operand) Tj ( ) Tj (of) Tj ( ) Tj (assignment) Tj /F1 10 Tf (. That's because we are trying) Tj T* 0 Tw .1339 Tw (to use the left operand of the assignment on prvalue. But when we change the ) Tj /F3 10 Tf (returnValue\(\)) Tj /F1 10 Tf ( function to return a) Tj T* 0 Tw (reference to an already existing memory location, everything will work fine:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 159.1994 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 98 Tm 12 TL /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (globalValue) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (43) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T*  T* /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (&) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .376471 .690196 rg (returnValue) Tj /F3 10 Tf 0 0 0 rg (\(\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (   ) Tj /F5 10 Tf 0 .501961 0 rg (return) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (globalValue) Tj (;) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T*  T* /F4 10 Tf .501961 .501961 .501961 rg (// ...) Tj T* /F3 10 Tf .733333 .733333 .733333 rg  T* 0 0 0 rg (returnValue) Tj (\(\)) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (17) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// works fine) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 127.1994 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 2.316339 Tw (Even though the ability to return an lvalue may not seem intuitive, it can be useful when implementing more) Tj T* 0 Tw (advanced functions like overloaded operators.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 97.99937 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 19.2 re B*
Q
q
BT 1 0 0 1 0 2.2 Tm 13.2 TL /F2 11 Tf .12549 .262745 .360784 rg (lvalue-to-prvalue Conversion) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 67.99937 cm
q
BT 1 0 0 1 0 14 Tm .428205 Tw 12 TL /F1 10 Tf 0 0 0 rg (An lvalue may be converted to a prvalue. This is totally legal and occurs frequently. Let's look at ) Tj /F3 10 Tf (+operator) Tj /F1 10 Tf ( as an) Tj T* 0 Tw (example. According to the C++ standard, it takes two prvalues as arguments and returns a prvalue.) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3\) Modern C++) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (25) Tj T* ET
Q
Q
 
endstream
endobj
575 0 obj
<<
/Length 10557
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 756.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 14 Tm 12 TL /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (x) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (10) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (y) Tj .188235 .188235 .188235 rg (=) Tj /F5 10 Tf 0 0 .815686 rg (20) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (z) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (x) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (+) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (y) Tj (;) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 712.2394 cm
q
BT 1 0 0 1 0 26 Tm 2.79245 Tw 12 TL /F3 10 Tf 0 0 0 rg (x) Tj /F1 10 Tf ( and ) Tj /F3 10 Tf (y) Tj /F1 10 Tf ( are lvalues, but the additional operator wants prvalues. ) Tj /F6 10 Tf (How is it possible?) Tj /F1 10 Tf ( Because of an implicit) Tj T* 0 Tw 1.244161 Tw (lvalue-to-prvalue conversion. There are many more operators performing similar conversions. But what about the) Tj T* 0 Tw (opposite \227 converting prvalue to lvalue? It is not possible due to the C++ design.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 681.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F2 12 Tf .12549 .262745 .360784 rg (Universal References \() Tj (&) Tj (&) Tj (\)) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 615.8394 cm
q
BT 1 0 0 1 0 50 Tm -0.017679 Tw 12 TL /F1 10 Tf 0 0 0 rg (One of the main features related to the rvalues introduced in C++11 was rvalue reference. Usually, the ) Tj /F3 10 Tf (&) Tj (&) Tj /F1 10 Tf ( notation is) Tj T* 0 Tw .878705 Tw (known as a syntax for rvalue reference. But it is not always true. ) Tj /F3 10 Tf (T) Tj (&) Tj (&) Tj /F1 10 Tf ( can hold both lvalue and rvalue references,) Tj T* 0 Tw .014358 Tw (which is called a ) Tj /F2 10 Tf (universal reference) Tj /F1 10 Tf (. But remember that ) Tj /F3 10 Tf (&) Tj (&) Tj /F1 10 Tf ( only means a universal reference when type deduction) Tj T* 0 Tw .343822 Tw (is involved. In other cases, we can assume that it means only an rvalue reference. Let's see it in code. We will start) Tj T* 0 Tw (with a universal reference, as the ) Tj /F3 10 Tf (T) Tj /F1 10 Tf ( is deduced.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 585.0394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 14 Tm 12 TL /F5 10 Tf 0 .501961 0 rg (template) Tj /F3 10 Tf .188235 .188235 .188235 rg (<) Tj /F5 10 Tf 0 .501961 0 rg (typename) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .690196 0 .376471 rg (T) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg  T* /F5 10 Tf .188235 .188235 .564706 rg (void) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (foo) Tj (\() Tj (T) Tj .188235 .188235 .188235 rg (&) Tj (&) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (param) Tj (\);) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 565.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Now, let's move on to an rvalue reference, as there is no type deduction.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 546.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf .188235 .188235 .564706 rg (void) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .376471 .690196 rg (foo) Tj /F3 10 Tf 0 0 0 rg (\() Tj (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (string) Tj .188235 .188235 .188235 rg (&) Tj (&) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (param) Tj (\);) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 514.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.66811 Tw (Finally, the last thing is to show the concept of prefect forwarding, which is when a universal reference can be) Tj T* 0 Tw (propagated, preserving the l-r 'valueness'.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 423.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 74 Tm 12 TL /F5 10 Tf 0 .501961 0 rg (template) Tj /F3 10 Tf .188235 .188235 .188235 rg (<) Tj /F5 10 Tf 0 .501961 0 rg (typename) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .690196 0 .376471 rg (T) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg  T* /F5 10 Tf .188235 .188235 .564706 rg (void) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (foo) Tj (\() Tj (T) Tj .188235 .188235 .188235 rg (&) Tj (&) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (param) Tj (\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .501961 .501961 .501961 rg (/* ... */) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T*  T* /F5 10 Tf 0 .501961 0 rg (template) Tj /F3 10 Tf .188235 .188235 .188235 rg (<) Tj /F5 10 Tf 0 .501961 0 rg (typename) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .690196 0 .376471 rg (T) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg  T* /F5 10 Tf .188235 .188235 .564706 rg (void) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (bar) Tj (\() Tj (T) Tj .188235 .188235 .188235 rg (&) Tj (&) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (param) Tj (\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (   ) Tj 0 0 0 rg (foo) Tj (\() Tj (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (forward) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg (T) Tj .188235 .188235 .188235 rg (>) Tj 0 0 0 rg (\() Tj (param) Tj (\)\);) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// l or r value depending on the param passed to `bar`) Tj T* /F3 10 Tf 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 391.4394 cm
q
BT 1 0 0 1 0 14 Tm .657814 Tw 12 TL /F1 10 Tf 0 0 0 rg (In this case, because both functions ) Tj /F3 10 Tf (foo) Tj /F1 10 Tf ( and ) Tj /F3 10 Tf (bar) Tj /F1 10 Tf ( are using a universal reference, ) Tj /F3 10 Tf (foo) Tj /F1 10 Tf ( will receive an l or r value,) Tj T* 0 Tw (depending on the param passed to ) Tj /F3 10 Tf (bar) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 361.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F2 12 Tf .12549 .262745 .360784 rg (std::move) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 343.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Let's start by answering the question: What is ) Tj /F3 10 Tf (std::move) Tj /F1 10 Tf (?) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 325.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (According to the C++ Reference:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 319.0394 cm
Q
q
1 0 0 1 40.01575 247.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 62 Tm 1.608561 Tw 12 TL /F3 10 Tf 0 0 0 rg (std::move) Tj /F1 10 Tf ( is used to indicate that an object t may be "moved from" \(i.e., allowing the efficient transfer of) Tj T* 0 Tw 1.279205 Tw (resources from t to another object\). In other words, it is a way to efficiently transfer contents of an object to) Tj T* 0 Tw .732321 Tw (another, leaving the source in a valid but undefined state. When you move a value from a register or memory) Tj T* 0 Tw .589116 Tw (location to another place, the value on the source register or memory location is still there. And more formally,) Tj T* 0 Tw .840227 Tw /F3 10 Tf (std::move) Tj /F1 10 Tf ( is a C++ Standard Library function that's defined in the ) Tj /F3 10 Tf (<) Tj (utility) Tj (>) Tj /F1 10 Tf ( header. It is used to cast an) Tj T* 0 Tw (l-value reference to an r-value reference, which enables move semantics.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 247.0394 cm
Q
q
1 0 0 1 40.01575 229.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Let's see an example. We will start with a declaration of the function consuming the element.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 210.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf .188235 .188235 .564706 rg (void) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .376471 .690196 rg (consume_element) Tj /F3 10 Tf 0 0 0 rg (\() Tj (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (unique_ptr) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (element) Tj (\);) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 190.2394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Then, let's declare it and consume using a prepared function and ) Tj /F3 10 Tf (std:move) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 159.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 14 Tm 12 TL /F3 10 Tf 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (unique_ptr) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (element) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (make_unique) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 0 .815686 rg (30) Tj /F3 10 Tf 0 0 0 rg (\);) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (consume_element) Tj (\() Tj (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (move) Tj (\() Tj (el) Tj (\)\);) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 139.4394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (After those operations, the declared element ) Tj /F3 10 Tf (element) Tj /F1 10 Tf ( is nullptr, as it was moved.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 120.6394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (assert) Tj (\() Tj (element) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (==) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (nullptr) Tj /F3 10 Tf 0 0 0 rg (\);) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3\) Modern C++) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (26) Tj T* ET
Q
Q
 
endstream
endobj
576 0 obj
<<
/Length 12231
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 772.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F2 12 Tf .12549 .262745 .360784 rg (Move Constructor and Rule of Five) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 730.6394 cm
q
BT 1 0 0 1 0 26 Tm 1.135479 Tw 12 TL /F3 10 Tf 0 0 0 rg (std::move) Tj /F1 10 Tf ( is actually just a request to move. If the type of the object does not have a move constructor/assign) Tj T* 0 Tw 1.166705 Tw (operator defined, the move operation will fall back to a copy. In that case, we will not experience any benefits of) Tj T* 0 Tw (using the move operation.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 700.6394 cm
q
BT 1 0 0 1 0 14 Tm .456095 Tw 12 TL /F1 10 Tf 0 0 0 rg (That is why it is important to know how to create a move constructor. At the same time, in C++ we have something) Tj T* 0 Tw (called ) Tj /F2 10 Tf (Rule of Five) Tj /F1 10 Tf (, which is as follows:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 694.6394 cm
Q
q
1 0 0 1 40.01575 694.6394 cm
Q
q
1 0 0 1 40.01575 670.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (1.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 3.519578 Tw (If a class requires a user-defined destructor, a user-defined copy constructor, or a user-defined copy) Tj T* 0 Tw (assignment operator, it almost certainly requires all three.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 664.6394 cm
Q
q
1 0 0 1 40.01575 640.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (2.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 2.177131 Tw (Any class for which move semantics are desirable needs to declare the move constructor and the move) Tj T* 0 Tw (assignment operator.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 640.6394 cm
Q
q
1 0 0 1 40.01575 622.6394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Those result in creating five elements:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 616.6394 cm
Q
q
1 0 0 1 40.01575 616.6394 cm
Q
q
1 0 0 1 40.01575 604.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (1.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (user-defined destructor) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 598.6394 cm
Q
q
1 0 0 1 40.01575 586.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (2.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (user-defined copy constructor) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 580.6394 cm
Q
q
1 0 0 1 40.01575 568.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (3.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (user-defined copy assignment operator) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 562.6394 cm
Q
q
1 0 0 1 40.01575 550.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (4.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (user-defined move constructor) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 544.6394 cm
Q
q
1 0 0 1 40.01575 532.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (5.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (user-defined move assignment operator) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 532.6394 cm
Q
q
1 0 0 1 40.01575 502.6394 cm
q
BT 1 0 0 1 0 14 Tm .716123 Tw 12 TL /F1 10 Tf 0 0 0 rg (Let's show this with an example. Imagine a class called ) Tj /F3 10 Tf (MoveClass) Tj /F1 10 Tf ( with a private member called ) Tj /F3 10 Tf (str_ptr) Tj /F1 10 Tf ( being) Tj T* 0 Tw /F3 10 Tf (char*) Tj /F1 10 Tf (. To show the Rule of Five, we need to declare the following:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 496.6394 cm
Q
q
1 0 0 1 40.01575 496.6394 cm
Q
q
1 0 0 1 40.01575 484.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (custom destructor) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 478.6394 cm
Q
q
1 0 0 1 40.01575 466.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (custom copy constructor) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 460.6394 cm
Q
q
1 0 0 1 40.01575 448.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (custom move constructor) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 442.6394 cm
Q
q
1 0 0 1 40.01575 430.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (custom copy assignment operator) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 424.6394 cm
Q
q
1 0 0 1 40.01575 412.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (custom move assignment operator) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 412.6394 cm
Q
q
1 0 0 1 40.01575 57.83937 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
1 .941176 .941176 rg
n 228 288 12 12 re f*
BT 1 0 0 1 0 338 Tm 12 TL /F5 10 Tf 0 .501961 0 rg (class) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .690196 0 .376471 rg (MoveClass) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (   ) Tj /F5 10 Tf .188235 .188235 .564706 rg (char) Tj /F3 10 Tf .188235 .188235 .188235 rg (*) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (str_ptr) Tj (;) Tj .733333 .733333 .733333 rg  T*  T* /F5 10 Tf 0 .501961 0 rg (public) Tj /F3 10 Tf .188235 .188235 .188235 rg (:) Tj .733333 .733333 .733333 rg  T* (   ) Tj /F5 10 Tf 0 .501961 0 rg (explicit) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (MoveClass) Tj (\() Tj /F5 10 Tf 0 .501961 0 rg (const) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .188235 .188235 .564706 rg (char) Tj /F3 10 Tf .188235 .188235 .188235 rg (*) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (s) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj .729412 .129412 .129412 rg ("") Tj 0 0 0 rg (\)) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (:) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (str_ptr) Tj (\() Tj /F5 10 Tf 0 .501961 0 rg (nullptr) Tj /F3 10 Tf 0 0 0 rg (\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (      ) Tj /F5 10 Tf 0 .501961 0 rg (if) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (\() Tj (s) Tj (\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (         ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj /F5 10 Tf .188235 .188235 .564706 rg (size_t) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (size) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (strlen) Tj (\() Tj (s) Tj (\)) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (+) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* (         ) Tj 0 0 0 rg (str_ptr) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (new) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .188235 .188235 .564706 rg (char) Tj /F3 10 Tf 0 0 0 rg ([) Tj (size) Tj (];) Tj .733333 .733333 .733333 rg (      ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// allocate) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (         ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (memcpy) Tj (\() Tj (str_ptr) Tj (,) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (s) Tj (,) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (size) Tj (\);) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// populate) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (      ) Tj 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* (   ) Tj 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// Destructor - we need to deallocate str_ptr) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj .188235 .188235 .188235 rg (~) Tj 0 0 0 rg (MoveClass) Tj (\(\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (      ) Tj /F5 10 Tf 0 .501961 0 rg (delete) Tj /F3 10 Tf 0 0 0 rg ([]) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (str_ptr) Tj (;) Tj .733333 .733333 .733333 rg  T* (   ) Tj 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// Copy constructor - uses explicit constructor, parameter passed is const) Tj (&) Tj  T* /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj 0 0 0 rg (MoveClass) Tj (\() Tj /F5 10 Tf 0 .501961 0 rg (const) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (MoveClass) Tj .188235 .188235 .188235 rg (&) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (other) Tj (\)) Tj .733333 .733333 .733333 rg  T* (      ) Tj .188235 .188235 .188235 rg (:) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (MoveClass) Tj (\() Tj (other) Tj (.) Tj (str_ptr) Tj (\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({}) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// Move constructor - uses std::exchange function, parameter passed is ) Tj (&) Tj (&) Tj  T* /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj 0 0 0 rg (MoveClass) Tj (\() Tj (MoveClass) Tj .188235 .188235 .188235 rg (&) Tj (&) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (other) Tj (\)) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (noexcept) Tj /F3 10 Tf .733333 .733333 .733333 rg  T* (      ) Tj .188235 .188235 .188235 rg (:) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (std_ptr) Tj (\() Tj (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (exchange) Tj (\() Tj (other) Tj (.) Tj (str_ptr) Tj (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (nullptr) Tj /F3 10 Tf 0 0 0 rg (\)\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({}) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// Copy assignment operator - uses copy constructor,) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// passed parameter similarly to copy constructor is const) Tj (&) Tj  T* /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj 0 0 0 rg (MoveClass) Tj .188235 .188235 .188235 rg (&) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (operator) Tj /F3 10 Tf .188235 .188235 .188235 rg (=) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 .501961 0 rg (const) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (MoveClass) Tj .188235 .188235 .188235 rg (&) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (other) Tj (\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (      ) Tj /F5 10 Tf 0 .501961 0 rg (return) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (*) Tj /F5 10 Tf 0 .501961 0 rg (this) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (MoveClass) Tj (\() Tj (other) Tj (\);) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3\) Modern C++) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (27) Tj T* ET
Q
Q
 
endstream
endobj
577 0 obj
<<
/Length 10377
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 672.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 98 Tm 12 TL /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// Move assignment operator - uses std::swap function,) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// passed parameter similarly to copy constructor is ) Tj (&) Tj (&) Tj  T* /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj 0 0 0 rg (MoveClass) Tj .188235 .188235 .188235 rg (&) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (operator) Tj /F3 10 Tf .188235 .188235 .188235 rg (=) Tj 0 0 0 rg (\() Tj (MoveClass) Tj .188235 .188235 .188235 rg (&) Tj (&) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (other) Tj (\)) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (noexcept) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (      ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (swap) Tj (\() Tj (str_ptr) Tj (,) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (other) Tj (.) Tj (str_ptr) Tj (\);) Tj .733333 .733333 .733333 rg  T* (      ) Tj /F5 10 Tf 0 .501961 0 rg (return) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (*) Tj /F5 10 Tf 0 .501961 0 rg (this) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* (   ) Tj 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 639.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F2 14 Tf .12549 .262745 .360784 rg (Lambdas) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 621.4394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (This chapter covers lambdas. You will learn the following:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 615.4394 cm
Q
q
1 0 0 1 40.01575 615.4394 cm
Q
q
1 0 0 1 40.01575 603.4394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (1.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (What is a C++ lambda expression?) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 597.4394 cm
Q
q
1 0 0 1 40.01575 585.4394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (2.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (What are the parts of a lambda?) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 579.4394 cm
Q
q
1 0 0 1 40.01575 567.4394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (3.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (How can a lambda expression be used in C++ code?) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 567.4394 cm
Q
q
1 0 0 1 40.01575 537.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F2 12 Tf 14.4 TL (Introduction) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 495.0394 cm
q
BT 1 0 0 1 0 26 Tm 1.425256 Tw 12 TL /F2 10 Tf 0 0 0 rg (C++ lambda expression) Tj /F1 10 Tf ( \227 often called a lambda \227 allows us to define anonymous function objects \(functors\)) Tj T* 0 Tw 1.667058 Tw (which can be used inline or passed as an argument. This was introduced in C++11 as a more convenient and) Tj T* 0 Tw (concise way for creating anonymous functors. Let's take a look at a few simple lambda examples:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 380.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
1 .941176 .941176 rg
n 108 84 84 12 re f*
1 .941176 .941176 rg
n 192 84 12 12 re f*
1 .941176 .941176 rg
n 204 84 6 12 re f*
BT 1 0 0 1 0 98 Tm 12 TL /F4 10 Tf .501961 .501961 .501961 rg (// Simple lambda printing string) Tj T* /F3 10 Tf 0 0 0 rg ([]) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (cout) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj .729412 .129412 .129412 rg ("Simple lambda) Tj /F5 10 Tf .376471 .376471 .376471 rg (\\n) Tj /F3 10 Tf .729412 .129412 .129412 rg (") Tj 0 0 0 rg (;) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T*  T* /F4 10 Tf .501961 .501961 .501961 rg (// Simple lambda returning sum of two elements) Tj T* /F5 10 Tf 0 .501961 0 rg (auto) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (lambda_sum) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ([]\() Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (x) Tj (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (y) Tj (\){) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (return) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (x) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (+) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (y) Tj (;) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T*  T* /F4 10 Tf .501961 .501961 .501961 rg (// Simple lambda for sorting elements of the vector using std::sort) Tj T* /F3 10 Tf 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (vector) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (vec) Tj ({) Tj /F5 10 Tf 0 0 .815686 rg (23) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (2) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (44) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (56) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (37) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (4) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (9) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (sort) Tj (\() Tj (vec) Tj (.) Tj (begin) Tj (\(\),) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (vec) Tj (.) Tj (end) Tj (\(\),) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ([]\() Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (a) Tj (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (b) Tj (\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (return) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (a) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (b) Tj (;) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (}\);) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 349.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F2 12 Tf .12549 .262745 .360784 rg (Parts of the Lambda Expression) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 331.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (There are six basic parts of a lambda expression:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 325.8394 cm
Q
q
1 0 0 1 40.01575 325.8394 cm
Q
q
1 0 0 1 40.01575 313.8394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (1.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (capture clause) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 307.8394 cm
Q
q
1 0 0 1 40.01575 295.8394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (2.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (parameter list \227 ) Tj /F6 10 Tf (optional) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 289.8394 cm
Q
q
1 0 0 1 40.01575 277.8394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (3.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (mutable specification \227 ) Tj /F6 10 Tf (optional) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 271.8394 cm
Q
q
1 0 0 1 40.01575 259.8394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (4.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (exception specification \227 ) Tj /F6 10 Tf (optional) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 253.8394 cm
Q
q
1 0 0 1 40.01575 241.8394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (5.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (trailing-return-type \227 ) Tj /F6 10 Tf (optional) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 235.8394 cm
Q
q
1 0 0 1 40.01575 223.8394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (6.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (lambda body) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 223.8394 cm
Q
q
1 0 0 1 40.01575 205.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The image below shows them in a practical example.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 199.8394 cm
Q
q
1 0 0 1 40.01575 121.5994 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 187.782 3 cm
q
139.68 0 0 72.24 0 0 cm
/FormXob.c5988efa39addfac5c86f59ca9570145 Do
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 121.5994 cm
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3\) Modern C++) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (28) Tj T* ET
Q
Q
 
endstream
endobj
578 0 obj
<<
/Length 13157
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 773.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 19.2 re B*
Q
q
BT 1 0 0 1 0 2.2 Tm 13.2 TL /F2 11 Tf .12549 .262745 .360784 rg (Capture Clause) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 731.8394 cm
q
BT 1 0 0 1 0 26 Tm .917888 Tw 12 TL /F2 10 Tf 0 0 0 rg (Capture clause) Tj /F1 10 Tf ( is also called ) Tj /F2 10 Tf (capture list) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (lambda-introducer) Tj /F1 10 Tf (. It is the beginning of the lambda expression. It) Tj T* 0 Tw .124116 Tw (specifies which variables are captured and whether the capture is by value or by reference. Examples of the capture) Tj T* 0 Tw (clause are as follows:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 725.8394 cm
Q
q
1 0 0 1 40.01575 725.8394 cm
Q
q
1 0 0 1 40.01575 713.8394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg ([]) Tj /F1 10 Tf ( \227 capture nothing) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 707.8394 cm
Q
q
1 0 0 1 40.01575 695.8394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg ([=]) Tj /F1 10 Tf ( \227 capture local objects like variables and parameters by value) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 689.8394 cm
Q
q
1 0 0 1 40.01575 677.8394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg ([) Tj (&) Tj (]) Tj /F1 10 Tf ( \227 capture local objects like variables and parameters by reference) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 671.8394 cm
Q
q
1 0 0 1 40.01575 659.8394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg ([this]) Tj /F1 10 Tf ( \227 capture ) Tj /F3 10 Tf (this) Tj /F1 10 Tf ( by reference) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 653.8394 cm
Q
q
1 0 0 1 40.01575 641.8394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg ([a,) Tj ( ) Tj (&) Tj (b]) Tj /F1 10 Tf ( \227 capture objects ) Tj /F3 10 Tf (a) Tj /F1 10 Tf ( by value and ) Tj /F3 10 Tf (b) Tj /F1 10 Tf ( by reference) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 641.8394 cm
Q
q
1 0 0 1 40.01575 623.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Let's see them in an example.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 461.0394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 146 Tm 12 TL /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (number) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (7) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T*  T* /F4 10 Tf .501961 .501961 .501961 rg (// Lambda returning vale of number by using [=]) Tj T* /F5 10 Tf 0 .501961 0 rg (auto) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (getNumber) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg (  ) Tj 0 0 0 rg ([) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg (]) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (return) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (number) Tj (;) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (getNumber) Tj (\(\);) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// returns 7) Tj T* /F3 10 Tf .733333 .733333 .733333 rg  T* /F4 10 Tf .501961 .501961 .501961 rg (// Lambda returning sum of number and passed argument as a value by using [=]) Tj T* /F5 10 Tf 0 .501961 0 rg (auto) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (addNumbers) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ([) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg (]\() Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (y) Tj (\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (return) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (number) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (+) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (y) Tj (;) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (addNumbers) Tj (\() Tj /F5 10 Tf 0 0 .815686 rg (6) Tj /F3 10 Tf 0 0 0 rg (\);) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// returns 13 \(7+6=13\)) Tj T* /F3 10 Tf .733333 .733333 .733333 rg  T* /F4 10 Tf .501961 .501961 .501961 rg (// Lambda returning reference to the number by using [) Tj (&) Tj (]) Tj T* /F5 10 Tf 0 .501961 0 rg (auto) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (getReference) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ([) Tj .188235 .188235 .188235 rg (&) Tj 0 0 0 rg (]\(\)) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (-) Tj (>) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (&) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (return) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (number) Tj (;) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (getReference) Tj (\(\);) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// returns int) Tj (&) Tj ( to number) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 405.0394 cm
q
BT 1 0 0 1 0 38 Tm .155783 Tw 12 TL /F1 10 Tf 0 0 0 rg (There is also a feature called ) Tj /F2 10 Tf (generalized capture) Tj /F1 10 Tf (. We can use this feature to introduce and initialize new variables) Tj T* 0 Tw .571894 Tw (in the capture clause, without the need to have those variables exist in the lambda function's enclosing scope. The) Tj T* 0 Tw -0.053615 Tw (type of the variable is deduced from the type produced by the expression. This feature is useful when we want to use) Tj T* 0 Tw (it in lambda move-only variables from the surrounding scope:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 350.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 38 Tm 12 TL /F5 10 Tf 0 .501961 0 rg (auto) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (ptr) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (make_unique) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 0 .815686 rg (8) Tj /F3 10 Tf 0 0 0 rg (\);) Tj .733333 .733333 .733333 rg  T*  T* /F4 10 Tf .501961 .501961 .501961 rg (// Lambda using generalized capture) Tj T* /F5 10 Tf 0 .501961 0 rg (auto) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (lambda) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ([) Tj (capturedValue) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (move) Tj (\() Tj (ptr) Tj (\)]) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .501961 .501961 .501961 rg (/* use ptr*/) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 321.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 19.2 re B*
Q
q
BT 1 0 0 1 0 2.2 Tm 13.2 TL /F2 11 Tf .12549 .262745 .360784 rg (Parameter List) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 279.0394 cm
q
BT 1 0 0 1 0 26 Tm 1.320256 Tw 12 TL /F1 10 Tf 0 0 0 rg (Lambdas can capture variables and accept ) Tj /F6 10 Tf (input parameters) Tj /F1 10 Tf (. A ) Tj /F2 10 Tf (parameter list) Tj /F1 10 Tf ( is optional and, in most aspects,) Tj T* 0 Tw 1.350205 Tw (resembles the parameter list for a function. Let's see the same simple code in a function form and as a lambda) Tj T* 0 Tw (expression.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 212.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 50 Tm 12 TL /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .376471 .690196 rg (add) Tj /F3 10 Tf 0 0 0 rg (\() Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (x) Tj (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (y) Tj (\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (   ) Tj /F5 10 Tf 0 .501961 0 rg (return) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (x) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (+) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (y) Tj (;) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T*  T* /F5 10 Tf 0 .501961 0 rg (auto) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (lambdaAdd) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ([]\() Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (x) Tj (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (y) Tj (\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (return) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (x) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (+) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (y) Tj (;) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 180.2394 cm
q
BT 1 0 0 1 0 14 Tm .009743 Tw 12 TL /F1 10 Tf 0 0 0 rg (In lambdas, it's possible to use the ) Tj /F3 10 Tf (auto) Tj /F1 10 Tf ( keyword as the type specifier in a parameter list if the type is generic. It can) Tj T* 0 Tw (also take another lambda expression as an argument.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 161.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 .501961 0 rg (auto) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (lambdaAdd) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ([]\() Tj /F5 10 Tf 0 .501961 0 rg (auto) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (x) Tj (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (auto) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (y) Tj (\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (return) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (x) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (+) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (y) Tj (;) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 132.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 19.2 re B*
Q
q
BT 1 0 0 1 0 2.2 Tm 13.2 TL /F2 11 Tf .12549 .262745 .360784 rg (Mutable Specification) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 90.23937 cm
q
BT 1 0 0 1 0 26 Tm .222273 Tw 12 TL /F1 10 Tf 0 0 0 rg (By default, value captures cannot be modified inside the lambda because the compiler-generated method is marked) Tj T* 0 Tw -0.017406 Tw (as ) Tj /F3 10 Tf (const) Tj /F1 10 Tf (, but using the ) Tj /F3 10 Tf (mutable) Tj /F1 10 Tf ( keyword cancels this out. This means that the ) Tj /F2 10 Tf (mutable specification) Tj /F1 10 Tf ( enables the) Tj T* 0 Tw (body of a lambda expression to modify variables that are captured by value.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 59.43937 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 14 Tm 12 TL /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (number) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (7) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T*  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3\) Modern C++) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (29) Tj T* ET
Q
Q
 
endstream
endobj
579 0 obj
<<
/Length 12654
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 684.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 86 Tm 12 TL /F4 10 Tf .501961 .501961 .501961 rg (// number is reference, so the lambda modifies original) Tj T* /F5 10 Tf 0 .501961 0 rg (auto) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (lambdaReference) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ([) Tj .188235 .188235 .188235 rg (&) Tj 0 0 0 rg (number) Tj (]) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (number) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (2) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T*  T* /F4 10 Tf .501961 .501961 .501961 rg (// Error - lambda can perform const-only operations on number) Tj T* /F5 10 Tf 0 .501961 0 rg (auto) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (lambdaValue) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ([) Tj (number) Tj (]) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (number) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (2) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T*  T* /F4 10 Tf .501961 .501961 .501961 rg (// Due to usage of mutable lambda can modify number) Tj T* /F5 10 Tf 0 .501961 0 rg (auto) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (lambdaMutable) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ([) Tj (number) Tj (]) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (\(\)) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (mutable) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (number) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (2) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 655.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 19.2 re B*
Q
q
BT 1 0 0 1 0 2.2 Tm 13.2 TL /F2 11 Tf .12549 .262745 .360784 rg (Exception Specification) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 625.0394 cm
q
BT 1 0 0 1 0 14 Tm .633373 Tw 12 TL /F1 10 Tf 0 0 0 rg (You can specify that the lambda will not throw any exception using the ) Tj /F3 10 Tf (noexcept) Tj /F1 10 Tf ( keyword. You can see what will) Tj T* 0 Tw (happen if you compile and run the following code:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 606.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg ([]\(\)) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (noexcept) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (throw) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (13) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (}) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 574.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.204672 Tw (Most C++ compilers should show the warning during compilation, but other than that, the code will not throw the) Tj T* 0 Tw (exception.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 545.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 19.2 re B*
Q
q
BT 1 0 0 1 0 2.2 Tm 13.2 TL /F2 11 Tf .12549 .262745 .360784 rg (Return Type) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 515.0394 cm
q
BT 1 0 0 1 0 14 Tm 1.16811 Tw 12 TL /F1 10 Tf 0 0 0 rg (In general, the returned type of the lambda expression is automatically deduced and there is no need to use the) Tj T* 0 Tw /F3 10 Tf (auto) Tj /F1 10 Tf ( keyword for that, as shown below:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 496.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
1 .941176 .941176 rg
n 120 0 90 12 re f*
1 .941176 .941176 rg
n 210 0 12 12 re f*
1 .941176 .941176 rg
n 222 0 6 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg ([]\(\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (cout) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj .729412 .129412 .129412 rg ("Sample output.) Tj /F5 10 Tf .376471 .376471 .376471 rg (\\n) Tj /F3 10 Tf .729412 .129412 .129412 rg (") Tj 0 0 0 rg (;) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (};) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// deduced type of the lambda is void) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 452.2394 cm
q
BT 1 0 0 1 0 26 Tm 1.748864 Tw 12 TL /F1 10 Tf 0 0 0 rg (You can specify ) Tj /F2 10 Tf (trailing-return-type) Tj /F1 10 Tf (, which resembles the return-type part of the standard function. But please) Tj T* 0 Tw 1.044957 Tw (remember that it must follow the parameter list \(even if it is empty\) and you must use the ) Tj /F3 10 Tf (-) Tj (>) Tj /F1 10 Tf ( keyword before the) Tj T* 0 Tw (return-type.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 421.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 14 Tm 12 TL /F4 10 Tf .501961 .501961 .501961 rg (// lambda returning int as trailing-return-type specifies) Tj T* /F3 10 Tf 0 0 0 rg ([]\(\)) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (-) Tj (>) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (return) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (13) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 389.4394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .277705 Tw (You can omit the return-type part of a lambda expression if the lambda body contains just one return statement or if) Tj T* 0 Tw (the expression doesn't return a value.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 358.6394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 14 Tm 12 TL /F4 10 Tf .501961 .501961 .501961 rg (// lambda returning int as deduced type from the single return statement) Tj T* /F3 10 Tf 0 0 0 rg ([]\() Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (x) Tj (\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (return) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (x) Tj (;) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (}\() Tj /F5 10 Tf 0 0 .815686 rg (7) Tj /F3 10 Tf 0 0 0 rg (\);) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 329.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 19.2 re B*
Q
q
BT 1 0 0 1 0 2.2 Tm 13.2 TL /F2 11 Tf .12549 .262745 .360784 rg (Lambda Body) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 299.4394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL -0.07189 Tw (Because the lambda expression is the same as an ordinary function, its body can contain anything that's allowed in a) Tj T* 0 Tw (function body. This means that a lambda body, similar to a function body, can access the following:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 293.4394 cm
Q
q
1 0 0 1 40.01575 293.4394 cm
Q
q
1 0 0 1 40.01575 281.4394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Captured variables from the enclosing scope) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 275.4394 cm
Q
q
1 0 0 1 40.01575 263.4394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Parameter) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 257.4394 cm
Q
q
1 0 0 1 40.01575 245.4394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Locally declared variables) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 239.4394 cm
Q
q
1 0 0 1 40.01575 227.4394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Class data members \(when lambda is declared inside a class and ) Tj /F3 10 Tf (this) Tj /F1 10 Tf ( is captured\)) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 221.4394 cm
Q
q
1 0 0 1 40.01575 209.4394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Variables with static storage duration \(like global variables\)) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 209.4394 cm
Q
q
1 0 0 1 40.01575 179.4394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL -0.123295 Tw (Let's look at a code example. We would like to print the elements of the declared vector together with information that) Tj T* 0 Tw (includes whether the number is even or odd. The vector declaration is as follows:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 160.6394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (vector) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (v) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (2) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (3) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (4) Tj /F3 10 Tf 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 140.6394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Now, we can prepare the function printing number and the phrase "is even" or "is odd.") Tj T* ET
Q
Q
q
1 0 0 1 40.01575 61.83937 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
1 .941176 .941176 rg
n 114 0 54 12 re f*
1 .941176 .941176 rg
n 168 0 12 12 re f*
1 .941176 .941176 rg
n 180 0 6 12 re f*
BT 1 0 0 1 0 62 Tm 12 TL /F4 10 Tf .501961 .501961 .501961 rg (// lambda returning int as deduced type from the single return statement) Tj T* /F5 10 Tf .188235 .188235 .564706 rg (void) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .376471 .690196 rg (isEvenOrOdd) Tj /F3 10 Tf 0 0 0 rg (\() Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (n) Tj (\){) Tj .733333 .733333 .733333 rg  T* (   ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (cout) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (n) Tj (;) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj /F5 10 Tf 0 .501961 0 rg (if) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (\() Tj (n) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (%) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (2) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (==) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (      ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (cout) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj .729412 .129412 .129412 rg (" is even) Tj /F5 10 Tf .376471 .376471 .376471 rg (\\n) Tj /F3 10 Tf .729412 .129412 .129412 rg (") Tj 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3\) Modern C++) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (30) Tj T* ET
Q
Q
 
endstream
endobj
580 0 obj
<<
/Length 10319
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 732.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
1 .941176 .941176 rg
n 114 24 48 12 re f*
1 .941176 .941176 rg
n 162 24 12 12 re f*
1 .941176 .941176 rg
n 174 24 6 12 re f*
BT 1 0 0 1 0 38 Tm 12 TL /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj 0 0 0 rg (}) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (else) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (      ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (cout) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj .729412 .129412 .129412 rg (" is odd) Tj /F5 10 Tf .376471 .376471 .376471 rg (\\n) Tj /F3 10 Tf .729412 .129412 .129412 rg (") Tj 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* (   ) Tj 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 712.2394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (To apply this function to all vector elements, we are using the ) Tj /F3 10 Tf (for_each) Tj /F1 10 Tf ( function from the algorithms library.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 693.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (for_each) Tj (\() Tj (v) Tj (.) Tj (begin) Tj (\(\),) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (v) Tj (.) Tj (end) Tj (\(\),) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (isEvenOrOdd) Tj (\);) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 673.4394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The same result can be achieved by using a lambda expression instead of the ) Tj /F3 10 Tf (isEvenOrOdd) Tj /F1 10 Tf ( function:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 558.6394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
1 .941176 .941176 rg
n 114 48 54 12 re f*
1 .941176 .941176 rg
n 168 48 12 12 re f*
1 .941176 .941176 rg
n 180 48 6 12 re f*
1 .941176 .941176 rg
n 114 24 48 12 re f*
1 .941176 .941176 rg
n 162 24 12 12 re f*
1 .941176 .941176 rg
n 174 24 6 12 re f*
BT 1 0 0 1 0 98 Tm 12 TL /F3 10 Tf 0 0 0 rg (for_each) Tj (\() Tj (v) Tj (.) Tj (begin) Tj (\(\),) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (v) Tj (.) Tj (end) Tj (\(\),) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ([]\() Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (n) Tj (\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (   ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (cout) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (n) Tj (;) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj /F5 10 Tf 0 .501961 0 rg (if) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (\() Tj (n) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (%) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (2) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (==) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (      ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (cout) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj .729412 .129412 .129412 rg (" is even) Tj /F5 10 Tf .376471 .376471 .376471 rg (\\n) Tj /F3 10 Tf .729412 .129412 .129412 rg (") Tj 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* (   ) Tj 0 0 0 rg (}) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (else) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (      ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (cout) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj .729412 .129412 .129412 rg (" is odd) Tj /F5 10 Tf .376471 .376471 .376471 rg (\\n) Tj /F3 10 Tf .729412 .129412 .129412 rg (") Tj 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* (   ) Tj 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (}\);) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 526.6394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .0967 Tw (As you can see, there are no limitations related to the size of the lambda. The only limit may be the readability of the) Tj T* 0 Tw (code, as lambdas are typically used as small helper functions.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 493.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F2 14 Tf .12549 .262745 .360784 rg (Type Inference in C++ \(auto and decltype\)) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 475.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (This chapter covers type inference. You will learn:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 469.8394 cm
Q
q
1 0 0 1 40.01575 469.8394 cm
Q
q
1 0 0 1 40.01575 457.8394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (1.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (What is type reference in C++?) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 451.8394 cm
Q
q
1 0 0 1 40.01575 439.8394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (2.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (How should the keywords ) Tj /F3 10 Tf (auto) Tj /F1 10 Tf ( and ) Tj /F3 10 Tf (decltype) Tj /F1 10 Tf ( be used?) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 433.8394 cm
Q
q
1 0 0 1 40.01575 421.8394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (3.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (What are the differences between ) Tj /F3 10 Tf (auto) Tj /F1 10 Tf ( and ) Tj /F3 10 Tf (decltype) Tj /F1 10 Tf (?) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 421.8394 cm
Q
q
1 0 0 1 40.01575 391.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F2 12 Tf 14.4 TL (Introduction) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 313.4394 cm
q
BT 1 0 0 1 0 62 Tm 1.241417 Tw 12 TL /F2 10 Tf 0 0 0 rg (Type inference) Tj /F1 10 Tf ( refers to the automatic deduction of the data type of an expression in a programming language.) Tj T* 0 Tw .154116 Tw (Since C++11, many keywords were included that allow type inference to be left to the compiler. Before C++11, each) Tj T* 0 Tw 1.019672 Tw (data type needed to be ) Tj /F6 10 Tf (explicitly declared) Tj /F1 10 Tf ( at compile time. Now, using type inference, we can avoid wasting time) Tj T* 0 Tw .055705 Tw (writing out things that the compiler already knows or can deduce. As all the types are deduced in the compiler phase) Tj T* 0 Tw .046531 Tw (only, the compilation time increases slightly; at the same time, it doesn't affect the runtime of the created program. In) Tj T* 0 Tw (C++, two keywords are introduced for type inference:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 307.4394 cm
Q
q
1 0 0 1 40.01575 307.4394 cm
Q
q
1 0 0 1 40.01575 295.4394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (auto) Tj /F1 10 Tf ( keyword) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 289.4394 cm
Q
q
1 0 0 1 40.01575 277.4394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (decltype) Tj /F1 10 Tf ( type specifier) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 277.4394 cm
Q
q
1 0 0 1 40.01575 247.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F3 12 Tf 0 0 0 rg (auto) Tj /F2 12 Tf .12549 .262745 .360784 rg ( Keyword) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 193.0394 cm
q
BT 1 0 0 1 0 38 Tm -0.035328 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F3 10 Tf (auto) Tj /F1 10 Tf ( keyword indicates the type of declared variable to be deduced automatically from its initializer. If the return) Tj T* 0 Tw .459243 Tw (type of a function is ) Tj /F3 10 Tf (auto) Tj /F1 10 Tf (, it will be evaluated at runtime by the returned type expression. It's important to note that) Tj T* 0 Tw 1.245881 Tw (the variable declared with the ) Tj /F3 10 Tf (auto) Tj /F1 10 Tf ( keyword needs to be initialized at declaration time. Otherwise, a compilation) Tj T* 0 Tw (error occurs. Let's see an example of ) Tj /F3 10 Tf (auto) Tj /F1 10 Tf ( usage:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 181.0394 cm
Q
q
1 0 0 1 40.01575 124.2394 cm
q
.933333 .933333 .933333 rg
n 0 56.8 515.2441 -56.8 re f*
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 6 38.8 Tm  T* ET
q
1 0 0 1 8 32 cm
q
0 0 0 rg
BT 1 0 0 1 0 2.8 Tm /F2 14 Tf 16.8 TL (Note) Tj T* ET
Q
Q
q
1 0 0 1 8 8 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (In these examples, we are using ) Tj /F3 10 Tf (typeid) Tj /F1 10 Tf ( to get the type of the variables.) Tj T* ET
Q
Q
q
1 J
1 j
.8 .8 .8 RG
.5 w
n 0 56.8 m 515.2441 56.8 l S
n 0 0 m 515.2441 0 l S
n 0 0 m 0 56.8 l S
n 515.2441 0 m 515.2441 56.8 l S
Q
Q
Q
q
1 0 0 1 40.01575 118.2394 cm
Q
q
1 0 0 1 40.01575 63.43937 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 38 Tm 12 TL /F3 10 Tf .313725 .439216 .564706 rg (#include) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .25098 .501961 .501961 rg (<) Tj (iostream) Tj (>) Tj /F3 10 Tf .313725 .439216 .564706 rg  T* (#include) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .25098 .501961 .501961 rg (<) Tj (typeinfo) Tj (>) Tj /F3 10 Tf .313725 .439216 .564706 rg  T* .733333 .733333 .733333 rg  T* /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .376471 .690196 rg (main) Tj /F3 10 Tf 0 0 0 rg (\(\){) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3\) Modern C++) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (31) Tj T* ET
Q
Q
 
endstream
endobj
581 0 obj
<<
/Length 10096
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 672.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 98 Tm 12 TL /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj /F5 10 Tf 0 .501961 0 rg (auto) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (x) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* (   ) Tj /F5 10 Tf 0 .501961 0 rg (auto) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (y) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .376471 0 .878431 rg (3.7) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// checking type of declared variables) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (cout) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (typeid) Tj /F3 10 Tf 0 0 0 rg (\() Tj (x) Tj (\).) Tj (name) Tj (\(\)) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj 0 .25098 .815686 rg ('\\n') Tj 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* (   ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (cout) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (typeid) Tj /F3 10 Tf 0 0 0 rg (\() Tj (y) Tj (\).) Tj (name) Tj (\(\)) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj 0 .25098 .815686 rg ('\\n') Tj 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj /F5 10 Tf 0 .501961 0 rg (return) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 652.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The output of the code above is:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 621.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 14 Tm 12 TL /F3 10 Tf 0 0 0 rg (i) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (d) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 589.4394 cm
q
BT 1 0 0 1 0 14 Tm 2.309205 Tw 12 TL /F1 10 Tf 0 0 0 rg (This means that variable ) Tj /F3 10 Tf (x) Tj /F1 10 Tf ( is type of ) Tj /F3 10 Tf (int) Tj /F1 10 Tf ( when variable ) Tj /F3 10 Tf (y) Tj /F1 10 Tf ( is type of ) Tj /F3 10 Tf (double) Tj /F1 10 Tf (. Using ) Tj /F3 10 Tf (auto) Tj /F1 10 Tf ( helps avoid long) Tj T* 0 Tw (initializations \(e.g., when creating iterators for containers\).) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 559.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F3 12 Tf 0 0 0 rg (decltype) Tj /F2 12 Tf .12549 .262745 .360784 rg ( Type Specifier) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 529.0394 cm
q
BT 1 0 0 1 0 14 Tm 1.7439 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F3 10 Tf (decltype) Tj /F1 10 Tf ( specifier inspects the declared type of an entity or the type of an expression. We can say that) Tj T* 0 Tw /F3 10 Tf (decltype) Tj /F1 10 Tf ( is more like an operator that evaluates the type of passed expression.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 499.0394 cm
q
BT 1 0 0 1 0 14 Tm .686005 Tw 12 TL /F1 10 Tf 0 0 0 rg (When you use ) Tj /F3 10 Tf (auto) Tj /F1 10 Tf (, you declare a variable with a particular type, but when using ) Tj /F3 10 Tf (decltype) Tj /F1 10 Tf ( you extract the type) Tj T* 0 Tw (from the variable. Let's see an example of ) Tj /F3 10 Tf (decltype) Tj /F1 10 Tf ( usage:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 324.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 158 Tm 12 TL /F3 10 Tf .313725 .439216 .564706 rg (#include) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .25098 .501961 .501961 rg (<) Tj (iostream) Tj (>) Tj /F3 10 Tf .313725 .439216 .564706 rg  T* (#include) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .25098 .501961 .501961 rg (<) Tj (typeinfo) Tj (>) Tj /F3 10 Tf .313725 .439216 .564706 rg  T* .733333 .733333 .733333 rg  T* /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .376471 .690196 rg (foo) Tj /F3 10 Tf 0 0 0 rg (\(\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (return) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (13) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T*  T* /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .376471 .690196 rg (main) Tj /F3 10 Tf 0 0 0 rg (\(\){) Tj .733333 .733333 .733333 rg  T* (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// x has the same type as a type returned by foo function) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj /F5 10 Tf 0 .501961 0 rg (decltype) Tj /F3 10 Tf 0 0 0 rg (\() Tj (foo) Tj (\(\)\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (x) Tj (;) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// checking type of x) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (cout) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (typeid) Tj /F3 10 Tf 0 0 0 rg (\() Tj (x) Tj (\).) Tj (name) Tj (\(\);) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj /F5 10 Tf 0 .501961 0 rg (return) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 304.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The output of this code is:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 285.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (i) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 265.4394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (This means that variable ) Tj /F3 10 Tf (x) Tj /F1 10 Tf ( is type ) Tj /F3 10 Tf (int) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 247.4394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Now, let's see an example using both ) Tj /F3 10 Tf (auto) Tj /F1 10 Tf ( and ) Tj /F3 10 Tf (decltype) Tj /F1 10 Tf (:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 60.63937 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 170 Tm 12 TL /F3 10 Tf .313725 .439216 .564706 rg (#include) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .25098 .501961 .501961 rg (<) Tj (iostream) Tj (>) Tj /F3 10 Tf .313725 .439216 .564706 rg  T* (#include) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .25098 .501961 .501961 rg (<) Tj (vector) Tj (>) Tj /F3 10 Tf .313725 .439216 .564706 rg  T* .733333 .733333 .733333 rg  T* /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .376471 .690196 rg (main) Tj /F3 10 Tf 0 0 0 rg (\(\){) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (vector) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (vec) Tj (\() Tj /F5 10 Tf 0 0 .815686 rg (10) Tj /F3 10 Tf 0 0 0 rg (\);) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// using auto for type deduction) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj /F5 10 Tf 0 .501961 0 rg (for) Tj /F3 10 Tf 0 0 0 rg (\() Tj /F5 10 Tf 0 .501961 0 rg (auto) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (vec) Tj (.) Tj (begin) Tj (\(\);) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (vec) Tj (.) Tj (end) Tj (\(\);) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj .188235 .188235 .188235 rg (++) Tj 0 0 0 rg (\){) Tj .733333 .733333 .733333 rg  T* (      ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (cin) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (>) Tj (>) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg (i) Tj (;) Tj .733333 .733333 .733333 rg  T* (   ) Tj 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// using decltype for type deduction) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj /F5 10 Tf 0 .501961 0 rg (for) Tj /F3 10 Tf 0 0 0 rg (\() Tj /F5 10 Tf 0 .501961 0 rg (decltype) Tj /F3 10 Tf 0 0 0 rg (\() Tj (vec) Tj (.) Tj (begin) Tj (\(\)\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (vec) Tj (.) Tj (begin) Tj (\(\);) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (vec) Tj (.) Tj (end) Tj (\(\);) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj .188235 .188235 .188235 rg (++) Tj 0 0 0 rg (\){) Tj .733333 .733333 .733333 rg  T* (      ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (cin) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (>) Tj (>) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg (i) Tj (;) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3\) Modern C++) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (32) Tj T* ET
Q
Q
 
endstream
endobj
582 0 obj
<<
/Length 7661
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 732.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 38 Tm 12 TL /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj /F5 10 Tf 0 .501961 0 rg (return) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 712.2394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (In this example, we are using ) Tj /F3 10 Tf (auto) Tj /F1 10 Tf ( and ) Tj /F3 10 Tf (decltype) Tj /F1 10 Tf ( for the same purpose \227 deduction of the iterator type.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 700.2394 cm
Q
q
1 0 0 1 40.01575 643.4394 cm
q
.933333 .933333 .933333 rg
n 0 56.8 515.2441 -56.8 re f*
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 6 38.8 Tm  T* ET
q
1 0 0 1 8 32 cm
q
0 0 0 rg
BT 1 0 0 1 0 2.8 Tm /F2 14 Tf 16.8 TL (Note) Tj T* ET
Q
Q
q
1 0 0 1 8 8 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The type denoted by ) Tj /F3 10 Tf (decltype) Tj /F1 10 Tf ( can be different from the type deduced by ) Tj /F3 10 Tf (auto) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 J
1 j
.8 .8 .8 RG
.5 w
n 0 56.8 m 515.2441 56.8 l S
n 0 0 m 515.2441 0 l S
n 0 0 m 0 56.8 l S
n 515.2441 0 m 515.2441 56.8 l S
Q
Q
Q
q
1 0 0 1 40.01575 637.4394 cm
Q
q
1 0 0 1 40.01575 607.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F2 12 Tf 14.4 TL (Summary) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 553.0394 cm
q
BT 1 0 0 1 0 38 Tm .914947 Tw 12 TL /F1 10 Tf 0 0 0 rg (It's important to understand that ) Tj /F3 10 Tf (auto) Tj /F1 10 Tf ( and ) Tj /F3 10 Tf (decltype) Tj /F1 10 Tf ( serve different purposes, so they are not exactly the same.) Tj T* 0 Tw 1.510256 Tw /F3 10 Tf (auto) Tj /F1 10 Tf ( is used for automatic type deduction whereas ) Tj /F3 10 Tf (decltype) Tj /F1 10 Tf ( yields the type of a specified expression. Unlike) Tj T* 0 Tw .732594 Tw /F3 10 Tf (auto) Tj /F1 10 Tf (, which deduces types based on values being assigned to the variable, ) Tj /F3 10 Tf (decltype) Tj /F1 10 Tf ( deduces the type from an) Tj T* 0 Tw (expression passed to it.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 520.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F2 14 Tf .12549 .262745 .360784 rg (Initializers in if and switch Statements) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 502.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (This chapter covers initializer statements in if and switch blocks. You will learn the following:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 496.2394 cm
Q
q
1 0 0 1 40.01575 496.2394 cm
Q
q
1 0 0 1 40.01575 484.2394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (1.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (What is an initializer statement?) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 478.2394 cm
Q
q
1 0 0 1 40.01575 466.2394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (2.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (How can you benefit from using it inside the if-else and switch blocks?) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 460.2394 cm
Q
q
1 0 0 1 40.01575 448.2394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (3.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (What is the syntax of initializer statements in if and switch blocks?) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 448.2394 cm
Q
q
1 0 0 1 40.01575 417.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F2 12 Tf 14.4 TL (Introduction) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 387.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .030783 Tw (There are many situations when we need to check the value returned by a function or perform conditional operations) Tj T* 0 Tw (based on the value of the function. Let's look at the example pseudocode below:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 249.0394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 122 Tm 12 TL /F4 10 Tf .501961 .501961 .501961 rg (// some function declaration) Tj T* /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (foo) Tj (\() Tj /F4 10 Tf .501961 .501961 .501961 rg (/*...*/) Tj /F3 10 Tf 0 0 0 rg (\)) Tj .733333 .733333 .733333 rg  T*  T* /F4 10 Tf .501961 .501961 .501961 rg (// function call and return value storing in variable) Tj T* /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (var) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (foo) Tj (\() Tj /F4 10 Tf .501961 .501961 .501961 rg (/*...*/) Tj /F3 10 Tf 0 0 0 rg (\);) Tj .733333 .733333 .733333 rg  T*  T* /F5 10 Tf 0 .501961 0 rg (if) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (\() Tj (var) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (==) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .501961 .501961 .501961 rg (/*some value*/) Tj /F3 10 Tf 0 0 0 rg (\){) Tj .733333 .733333 .733333 rg  T* (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// do something) Tj T* /F3 10 Tf 0 0 0 rg (}) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (else) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// do something else) Tj T* /F3 10 Tf 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 193.0394 cm
q
BT 1 0 0 1 0 38 Tm 1.084205 Tw 12 TL /F1 10 Tf 0 0 0 rg (There is nothing wrong with this code, but it can be improved in certain situations. As shown in the example, the) Tj T* 0 Tw 1.184705 Tw (variable ) Tj /F3 10 Tf (var) Tj /F1 10 Tf ( is used only for this if-else statement. At the same time, it leaks into the surrounding scope. In that) Tj T* 0 Tw .784732 Tw (case, we need to make sure to not mix it up with other variables. Also, if the compiler can explicitly know that this) Tj T* 0 Tw (variable will only be used there, it may potentially produce more optimized code.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 162.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F2 12 Tf 14.4 TL (Syntax) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 144.6394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Let's look at the syntax of the if-else and switch blocks.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 115.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 19.2 re B*
Q
q
BT 1 0 0 1 0 2.2 Tm 13.2 TL /F2 11 Tf .12549 .262745 .360784 rg (Initializer Statement Outside the Conditional Blocks) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 73.43937 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL -0.059773 Tw (You may notice that if-else conditional blocks and switch blocks have a generic format. First, we have an initialization) Tj T* 0 Tw .751205 Tw (of a variable that will be checked, and then there is a conditional block using this initialized variable. For an if-else) Tj T* 0 Tw (block, it usually looks like this:) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3\) Modern C++) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (33) Tj T* ET
Q
Q
 
endstream
endobj
583 0 obj
<<
/Length 7647
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 696.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 74 Tm 12 TL /F4 10 Tf .501961 .501961 .501961 rg (// initializer-statement) Tj T* /F3 10 Tf .733333 .733333 .733333 rg  T* /F5 10 Tf 0 .501961 0 rg (if) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (\() Tj (condition) Tj (\){) Tj .733333 .733333 .733333 rg  T* (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// do something) Tj T* /F3 10 Tf 0 0 0 rg (}) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (else) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// do something else) Tj T* /F3 10 Tf 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 676.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (And for switch block, similarly, like this:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 609.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 50 Tm 12 TL /F4 10 Tf .501961 .501961 .501961 rg (// initializer-statement) Tj T* /F3 10 Tf .733333 .733333 .733333 rg  T* /F5 10 Tf 0 .501961 0 rg (switch) Tj /F3 10 Tf 0 0 0 rg (\() Tj (variable) Tj (\){) Tj .733333 .733333 .733333 rg  T* (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// cases) Tj T* /F3 10 Tf 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 580.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 19.2 re B*
Q
q
BT 1 0 0 1 0 2.2 Tm 13.2 TL /F2 11 Tf .12549 .262745 .360784 rg (Initializer Statements in if and switch Blocks) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 562.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Starting with C++17, it is possible to initialize a variable inside if and switch statements:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 495.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 50 Tm 12 TL /F5 10 Tf 0 .501961 0 rg (if) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (\() Tj (initializer) Tj .188235 .188235 .188235 rg (-) Tj 0 0 0 rg (statement) Tj (;) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (condition) Tj (\){) Tj .733333 .733333 .733333 rg  T* (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// do something) Tj T* /F3 10 Tf 0 0 0 rg (}) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (else) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// do something else) Tj T* /F3 10 Tf 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 444.6394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 26 Tm 12 TL /F5 10 Tf 0 .501961 0 rg (switch) Tj /F3 10 Tf 0 0 0 rg (\() Tj (initializer) Tj .188235 .188235 .188235 rg (-) Tj 0 0 0 rg (statement) Tj (;) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (variable) Tj (\){) Tj .733333 .733333 .733333 rg  T* (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// cases) Tj T* /F3 10 Tf 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 414.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F2 12 Tf 14.4 TL (Summary) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 372.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 1.228637 Tw (Initializers in if and switch statements allow the variable to be assigned to the scope of this statement. Note that) Tj T* 0 Tw 2.298273 Tw (using this language feature can result in more complex code when initialization and comparison are separate) Tj T* 0 Tw (concerns.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 339.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F2 14 Tf .12549 .262745 .360784 rg (Standard Template Library \(STL\) on Concurrent and Parallel Algorithms) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 321.4394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (This chapter covers concurrent and parallel STL algorithms. You will learn the following:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 315.4394 cm
Q
q
1 0 0 1 40.01575 315.4394 cm
Q
q
1 0 0 1 40.01575 303.4394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (1.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (What are STL algorithms?) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 297.4394 cm
Q
q
1 0 0 1 40.01575 285.4394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (2.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (What execution policies are available as part of the STL?) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 279.4394 cm
Q
q
1 0 0 1 40.01575 267.4394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (3.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (How are different execution policies used?) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 261.4394 cm
Q
q
1 0 0 1 40.01575 249.4394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (4.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (What are the benefits and drawbacks of using specific execution policies?) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 243.4394 cm
Q
q
1 0 0 1 40.01575 231.4394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (5.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (What are the best practices when using concurrent and parallel STL algorithms?) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 231.4394 cm
Q
q
1 0 0 1 40.01575 201.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F2 12 Tf 14.4 TL (Introduction) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 159.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .937756 Tw (The STL offers over 150 algorithms including those that run sequentially. To take advantage of parallel hardware,) Tj T* 0 Tw 1.116721 Tw (programmers must parallelize these libraries using low-level threading APIs, which is not easy. Fortunately, since) Tj T* 0 Tw (C++17, most of the STL algorithms are parallelized and support for vectorization has been added.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 128.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F2 12 Tf .12549 .262745 .360784 rg (What are STL Algorithms?) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 62.63937 cm
q
BT 1 0 0 1 0 50 Tm .979653 Tw 12 TL /F1 10 Tf 0 0 0 rg (STL algorithms are a set of powerful functions that enable the execution of various operations on data containers) Tj T* 0 Tw .2939 Tw (such as vectors, lists, and arrays. These algorithms are designed to be generic, making them ideal for a wide range) Tj T* 0 Tw 1.310292 Tw (of applications. The STL helps avoid repeatedly implementing simple functions, and instead focus on addressing) Tj T* 0 Tw 2.397008 Tw (higher-level problems. Examples of algorithms available within the STL include ) Tj /F3 10 Tf (std::find) Tj /F1 10 Tf (, ) Tj /F3 10 Tf (std::sort) Tj /F1 10 Tf (, and) Tj T* 0 Tw /F3 10 Tf (std::replace) Tj /F1 10 Tf (. These algorithms can drastically improve the efficiency and readability of the code.) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3\) Modern C++) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (34) Tj T* ET
Q
Q
 
endstream
endobj
584 0 obj
<<
/Length 10232
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 772.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F2 12 Tf .12549 .262745 .360784 rg (Execution Policies) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 730.6394 cm
q
BT 1 0 0 1 0 26 Tm .825479 Tw 12 TL /F1 10 Tf 0 0 0 rg (To use the STL parallel algorithms, you need to include the ) Tj /F3 10 Tf (<) Tj (execution) Tj (>) Tj /F1 10 Tf ( header. The next step is to invoke the) Tj T* 0 Tw 1.177888 Tw (chosen algorithm with an execution policy, which allows you to specify how the algorithm should be executed. In) Tj T* 0 Tw (C++, the following execution policies are available:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 724.6394 cm
Q
q
1 0 0 1 40.01575 724.6394 cm
Q
q
1 0 0 1 40.01575 700.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm .972409 Tw 12 TL /F1 10 Tf 0 0 0 rg (sequenced_policy \(and the corresponding global object ) Tj /F3 10 Tf (std::execution::seq) Tj /F1 10 Tf (\) \227 sequential execution of) Tj T* 0 Tw (the algorithm.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 694.6394 cm
Q
q
1 0 0 1 40.01575 670.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm 2.098554 Tw 12 TL /F1 10 Tf 0 0 0 rg (parallel_policy \(and the corresponding global object ) Tj /F3 10 Tf (std::execution::par) Tj /F1 10 Tf (\) \227 parallel execution of the) Tj T* 0 Tw (algorithm.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 664.6394 cm
Q
q
1 0 0 1 40.01575 640.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm 4.267728 Tw 12 TL /F1 10 Tf 0 0 0 rg (parallel_unsequenced_policy \(and the corresponding global object ) Tj /F3 10 Tf (std::execution::par_unseq) Tj /F1 10 Tf (\) \227) Tj T* 0 Tw (parallel execution of the algorithm with the ability to use vector instructions.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 634.6394 cm
Q
q
1 0 0 1 40.01575 610.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm 1.828409 Tw 12 TL /F1 10 Tf 0 0 0 rg (unsequenced_policy \(and the corresponding global object ) Tj /F3 10 Tf (std::execution::unseq) Tj /F1 10 Tf (\) \227 execution of the) Tj T* 0 Tw (algorithm with the ability to use vector instructions.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 610.6394 cm
Q
q
1 0 0 1 40.01575 592.6394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Let's see examples of the use of these policies.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 580.6394 cm
Q
q
1 0 0 1 40.01575 511.8394 cm
q
.933333 .933333 .933333 rg
n 0 68.8 515.2441 -68.8 re f*
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 6 50.8 Tm  T* ET
q
1 0 0 1 8 44 cm
q
0 0 0 rg
BT 1 0 0 1 0 2.8 Tm /F2 14 Tf 16.8 TL (Note) Tj T* ET
Q
Q
q
1 0 0 1 8 8 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.230205 Tw (We will be using small data sets just to show how the policies work, but remember that the benefits of using) Tj T* 0 Tw (policies usually comes from dealing with large amounts of data.) Tj T* ET
Q
Q
q
1 J
1 j
.8 .8 .8 RG
.5 w
n 0 68.8 m 515.2441 68.8 l S
n 0 0 m 515.2441 0 l S
n 0 0 m 0 68.8 l S
n 515.2441 0 m 515.2441 68.8 l S
Q
Q
Q
q
1 0 0 1 40.01575 505.8394 cm
Q
q
1 0 0 1 40.01575 476.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 19.2 re B*
Q
q
BT 1 0 0 1 0 2.2 Tm 13.2 TL /F2 11 Tf .12549 .262745 .360784 rg (sequenced_policy) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 458.6394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (We will use the ) Tj /F3 10 Tf (std::sort) Tj /F1 10 Tf ( algorithm to demonstrate the sequential execution policy:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 247.8394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 194 Tm 12 TL /F3 10 Tf .313725 .439216 .564706 rg (#include) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .25098 .501961 .501961 rg (<) Tj (algorithm) Tj (>) Tj /F3 10 Tf .313725 .439216 .564706 rg  T* (#include) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .25098 .501961 .501961 rg (<) Tj (iostream) Tj (>) Tj /F3 10 Tf .313725 .439216 .564706 rg  T* (#include) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .25098 .501961 .501961 rg (<) Tj (vector) Tj (>) Tj /F3 10 Tf .313725 .439216 .564706 rg  T* (#include) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .25098 .501961 .501961 rg (<) Tj (execution) Tj (>) Tj /F3 10 Tf .313725 .439216 .564706 rg  T* .733333 .733333 .733333 rg  T* /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .376471 .690196 rg (main) Tj /F3 10 Tf 0 0 0 rg (\(\){) Tj .733333 .733333 .733333 rg  T* (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// container creation with unsorted elements) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (vector) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (vec) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj /F5 10 Tf 0 0 .815686 rg (7) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (13) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (4) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (2) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (56) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (24) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F3 10 Tf 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// using std::sort on the prepared container vec with sequential execution policy) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (sort) Tj (\() Tj (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (execution) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (seq) Tj (,) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (vec) Tj (.) Tj (begin) Tj (\(\),) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (vec) Tj (.) Tj (end) Tj (\(\)\);) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj /F5 10 Tf 0 .501961 0 rg (for) Tj /F3 10 Tf 0 0 0 rg (\() Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (:) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (vec) Tj (\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (      ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (cout) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj 0 .25098 .815686 rg (' ') Tj 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* (   ) Tj 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* (   ) Tj /F5 10 Tf 0 .501961 0 rg (return) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 227.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Using sequenced_policy has several advantages:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 221.8394 cm
Q
q
1 0 0 1 40.01575 221.8394 cm
Q
q
1 0 0 1 40.01575 209.8394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (It is ideal for small tasks that don't warrant the parallel overhead.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 203.8394 cm
Q
q
1 0 0 1 40.01575 191.8394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Data races can be avoided.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 185.8394 cm
Q
q
1 0 0 1 40.01575 173.8394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (It is simple and predictable.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 173.8394 cm
Q
q
1 0 0 1 40.01575 155.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (At the same time, sequenced_policy is not efficient for large tasks with a lot of data.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 126.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 19.2 re B*
Q
q
BT 1 0 0 1 0 2.2 Tm 13.2 TL /F2 11 Tf .12549 .262745 .360784 rg (parallel_policy) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 108.6394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (We will use the ) Tj /F3 10 Tf (std::find) Tj /F1 10 Tf ( algorithm to demonstrated the parallel execution policy:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 65.83937 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 26 Tm 12 TL /F3 10 Tf .313725 .439216 .564706 rg (#include) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .25098 .501961 .501961 rg (<) Tj (algorithm) Tj (>) Tj /F3 10 Tf .313725 .439216 .564706 rg  T* (#include) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .25098 .501961 .501961 rg (<) Tj (iostream) Tj (>) Tj /F3 10 Tf .313725 .439216 .564706 rg  T* (#include) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .25098 .501961 .501961 rg (<) Tj (vector) Tj (>) Tj /F3 10 Tf .313725 .439216 .564706 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3\) Modern C++) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (35) Tj T* ET
Q
Q
 
endstream
endobj
585 0 obj
<<
/Length 11219
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 612.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 158 Tm 12 TL /F3 10 Tf .313725 .439216 .564706 rg (#include) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .25098 .501961 .501961 rg (<) Tj (execution) Tj (>) Tj /F3 10 Tf .313725 .439216 .564706 rg  T* .733333 .733333 .733333 rg  T* /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .376471 .690196 rg (main) Tj /F3 10 Tf 0 0 0 rg (\(\){) Tj .733333 .733333 .733333 rg  T* (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// container creation) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (vector) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (vec) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj /F5 10 Tf 0 0 .815686 rg (7) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (13) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (4) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (2) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (56) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (24) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F3 10 Tf 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// using std::find on the prepared container vec with parallel execution policy) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj /F5 10 Tf 0 .501961 0 rg (auto) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (it) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (find) Tj (\() Tj (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (execution) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (par) Tj (,) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (vec) Tj (.) Tj (begin) Tj (\(\),) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (vec) Tj (.) Tj (end) Tj (\(\),) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (4) Tj /F3 10 Tf 0 0 0 rg (\);) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj /F5 10 Tf 0 .501961 0 rg (if) Tj /F3 10 Tf 0 0 0 rg (\() Tj (it) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (!=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (vec) Tj (.) Tj (end) Tj (\(\)\){) Tj .733333 .733333 .733333 rg  T* (       ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (cout) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg (it) Tj (;) Tj .733333 .733333 .733333 rg  T* (   ) Tj 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* (   ) Tj /F5 10 Tf 0 .501961 0 rg (return) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 592.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (When using parallel_policy, we can benefit from the following:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 586.2394 cm
Q
q
1 0 0 1 40.01575 586.2394 cm
Q
q
1 0 0 1 40.01575 574.2394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Faster execution for larger tasks and on larger datasets) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 568.2394 cm
Q
q
1 0 0 1 40.01575 556.2394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Optimal usage of multicore systems) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 556.2394 cm
Q
q
1 0 0 1 40.01575 538.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (At the same time, it is important to remember that:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 532.2394 cm
Q
q
1 0 0 1 40.01575 532.2394 cm
Q
q
1 0 0 1 40.01575 520.2394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (It may introduce overhead. If that's the case, it is not always faster than sequential execution.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 514.2394 cm
Q
q
1 0 0 1 40.01575 502.2394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (It is the programmer's responsibility to avoid data races and deadlocks.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 502.2394 cm
Q
q
1 0 0 1 40.01575 473.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 19.2 re B*
Q
q
BT 1 0 0 1 0 2.2 Tm 13.2 TL /F2 11 Tf .12549 .262745 .360784 rg (parallel_unsequenced_policy) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 431.0394 cm
q
BT 1 0 0 1 0 26 Tm 1.152008 Tw 12 TL /F1 10 Tf 0 0 0 rg (For parallel_unsequenced_policy, we used the ) Tj /F3 10 Tf (std::transform) Tj /F1 10 Tf ( algorithm with a prepared lambda function that) Tj T* 0 Tw -0.013615 Tw (returns a number squared. It's important to understand that the result can be every permutation of {1, 4, 9, 16, 25} as) Tj T* 0 Tw (the operations are performed nonsequentially.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 160.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 254 Tm 12 TL /F3 10 Tf .313725 .439216 .564706 rg (#include) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .25098 .501961 .501961 rg (<) Tj (algorithm) Tj (>) Tj /F3 10 Tf .313725 .439216 .564706 rg  T* (#include) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .25098 .501961 .501961 rg (<) Tj (iostream) Tj (>) Tj /F3 10 Tf .313725 .439216 .564706 rg  T* (#include) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .25098 .501961 .501961 rg (<) Tj (vector) Tj (>) Tj /F3 10 Tf .313725 .439216 .564706 rg  T* (#include) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .25098 .501961 .501961 rg (<) Tj (execution) Tj (>) Tj /F3 10 Tf .313725 .439216 .564706 rg  T* .733333 .733333 .733333 rg  T* /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .376471 .690196 rg (main) Tj /F3 10 Tf 0 0 0 rg (\(\){) Tj .733333 .733333 .733333 rg  T* (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// container creation) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (vector) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (vec) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (2) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (3) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (4) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (5) Tj /F3 10 Tf 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// using std::transform on the prepared container vec) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// with parallel unsequential execution policy) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (transform) Tj (\() Tj (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (execution) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (par_unseq) Tj (,) Tj .733333 .733333 .733333 rg  T* (     ) Tj 0 0 0 rg (vec) Tj (.) Tj (begin) Tj (\(\),) Tj .733333 .733333 .733333 rg  T* (     ) Tj 0 0 0 rg (vec) Tj (.) Tj (end) Tj (\(\),) Tj .733333 .733333 .733333 rg  T* (     ) Tj 0 0 0 rg (vec) Tj (.) Tj (begin) Tj (\(\),) Tj .733333 .733333 .733333 rg  T* (     ) Tj 0 0 0 rg ([]\() Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (x) Tj (\){) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (return) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (x) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg (x) Tj (;) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (}\);) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj /F5 10 Tf 0 .501961 0 rg (for) Tj /F3 10 Tf 0 0 0 rg (\() Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (:) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (vec) Tj (\){) Tj .733333 .733333 .733333 rg  T* (       ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (cout) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj 0 .25098 .815686 rg (' ') Tj 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* (   ) Tj 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* (   ) Tj /F5 10 Tf 0 .501961 0 rg (return) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 140.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Here, similar to the parallel_policy, we can:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 134.2394 cm
Q
q
1 0 0 1 40.01575 134.2394 cm
Q
q
1 0 0 1 40.01575 122.2394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Realize faster execution for repetitive operations) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 116.2394 cm
Q
q
1 0 0 1 40.01575 104.2394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Benefit from using hardware with vector instructions) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 104.2394 cm
Q
q
1 0 0 1 40.01575 74.23937 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .100641 Tw (On the other hand, we need to remember that it is not suitable for all tasks \(e.g., tasks where the order of operations) Tj T* 0 Tw (is important\).) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3\) Modern C++) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (36) Tj T* ET
Q
Q
 
endstream
endobj
586 0 obj
<<
/Length 9111
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 773.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 19.2 re B*
Q
q
BT 1 0 0 1 0 2.2 Tm 13.2 TL /F2 11 Tf .12549 .262745 .360784 rg (unsequenced_policy) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 755.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (For the last policy \227 unsequenced_policy \227 we are using the ) Tj /F3 10 Tf (std::for_each) Tj /F1 10 Tf ( algorithm:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 533.0394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 206 Tm 12 TL /F3 10 Tf .313725 .439216 .564706 rg (#include) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .25098 .501961 .501961 rg (<) Tj (algorithm) Tj (>) Tj /F3 10 Tf .313725 .439216 .564706 rg  T* (#include) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .25098 .501961 .501961 rg (<) Tj (iostream) Tj (>) Tj /F3 10 Tf .313725 .439216 .564706 rg  T* (#include) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .25098 .501961 .501961 rg (<) Tj (vector) Tj (>) Tj /F3 10 Tf .313725 .439216 .564706 rg  T* (#include) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .25098 .501961 .501961 rg (<) Tj (execution) Tj (>) Tj /F3 10 Tf .313725 .439216 .564706 rg  T* .733333 .733333 .733333 rg  T* /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .376471 .690196 rg (main) Tj /F3 10 Tf 0 0 0 rg (\(\){) Tj .733333 .733333 .733333 rg  T* (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// container creation) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (vector) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (vec) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (2) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (3) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (4) Tj /F3 10 Tf 0 0 0 rg (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (5) Tj /F3 10 Tf 0 0 0 rg (};) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// using std::for_each on the prepared container vec) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// with unsequential execution policy) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (for_each) Tj (\() Tj (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (execution) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (unseq) Tj (,) Tj .733333 .733333 .733333 rg  T* (     ) Tj 0 0 0 rg (vec) Tj (.) Tj (begin) Tj (\(\),) Tj .733333 .733333 .733333 rg  T* (     ) Tj 0 0 0 rg (vec) Tj (.) Tj (end) Tj (\(\),) Tj .733333 .733333 .733333 rg  T* (     ) Tj 0 0 0 rg ([]\() Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (x) Tj (\){) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (cout) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (x) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj 0 .25098 .815686 rg (' ') Tj 0 0 0 rg (;}\);) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj /F5 10 Tf 0 .501961 0 rg (return) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 513.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Using unsequenced_policy, we can:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 507.0394 cm
Q
q
1 0 0 1 40.01575 507.0394 cm
Q
q
1 0 0 1 40.01575 495.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Experience fast execution on a single thread) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 489.0394 cm
Q
q
1 0 0 1 40.01575 477.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Avoid race conditions) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 477.0394 cm
Q
q
1 0 0 1 40.01575 447.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .428822 Tw (At the same time, the execution of the sequence is not deterministic, so we need to make sure that the order is not) Tj T* 0 Tw (important for the task we are doing.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 416.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F2 12 Tf .12549 .262745 .360784 rg (Best Practices) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 398.6394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (To make the most of STL on concurrent and parallel algorithms, it's worth considering the following best practices:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 392.6394 cm
Q
q
1 0 0 1 40.01575 392.6394 cm
Q
q
1 0 0 1 40.01575 356.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (1.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 26 Tm .809064 Tw 12 TL /F2 10 Tf 0 0 0 rg (Choose the right algorithm) Tj /F1 10 Tf ( \227 The STL provides many different algorithms, so it is important to choose the) Tj T* 0 Tw .149653 Tw (right one and select the appropriate execution policy. Ensure that you fully understand the problem you want to) Tj T* 0 Tw (solve.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 350.6394 cm
Q
q
1 0 0 1 40.01575 326.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (2.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm .5773 Tw 12 TL /F2 10 Tf 0 0 0 rg (Profile your code) Tj /F1 10 Tf ( \227 It can be useful to profile your code to identify the performance bottlenecks. Remember) Tj T* 0 Tw (that you can achieve the best results by optimizing the critical sections of the code.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 320.6394 cm
Q
q
1 0 0 1 40.01575 296.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (3.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm 1.460241 Tw 12 TL /F2 10 Tf 0 0 0 rg (Minimize shared data) Tj /F1 10 Tf ( \227 Minimizing the amount of shared data allows you to reduce the chances of race) Tj T* 0 Tw (conditions and synchronization overhead.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 296.6394 cm
Q
q
1 0 0 1 40.01575 266.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F2 12 Tf 14.4 TL (Summary) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 224.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 2.69493 Tw (STL algorithms and concurrent programming approaches are useful additions to data scientists and software) Tj T* 0 Tw .332756 Tw (engineers' toolkits. Try it yourself and create the code that compares the performance of different execution policies) Tj T* 0 Tw (on the same task. Remember to work on a large set of data.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 191.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F2 14 Tf .12549 .262745 .360784 rg (Nested Namespaces) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 173.4394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (This chapter covers C++ namespaces. You will learn the following:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 167.4394 cm
Q
q
1 0 0 1 40.01575 167.4394 cm
Q
q
1 0 0 1 40.01575 155.4394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (1.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (What is a namespace?) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 149.4394 cm
Q
q
1 0 0 1 40.01575 137.4394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (2.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (How can you declare your own namespace?) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 131.4394 cm
Q
q
1 0 0 1 40.01575 119.4394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2 0 Td (3.) Tj T* -2 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (How do nested namespaces work in C++?) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 119.4394 cm
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3\) Modern C++) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (37) Tj T* ET
Q
Q
 
endstream
endobj
587 0 obj
<<
/Length 8620
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 772.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F2 12 Tf 14.4 TL (Introduction) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 694.6394 cm
q
BT 1 0 0 1 0 62 Tm 1.274947 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F2 10 Tf (namespace) Tj /F1 10 Tf ( is a declarative region that provides scope to the identifiers like names of types, functions, and) Tj T* 0 Tw .031339 Tw (variables. Namespaces are usually used to organize the code into logical groups and to avoid name collisions. It can) Tj T* 0 Tw .999653 Tw (be especially important when you're using different libraries. One of the examples of the namespace scope is the) Tj T* 0 Tw 1.077756 Tw (C++ Standard Template Library \(STL\), where all the classes, methods, and templates are declared. You can find) Tj T* 0 Tw .282435 Tw (STL namespace in the code ) Tj /F3 10 Tf (std::`) Tj ( ) Tj (before) Tj ( ) Tj (multiple) Tj ( ) Tj (class) Tj ( ) Tj (or) Tj ( ) Tj (function) Tj ( ) Tj (declarations) Tj ( ) Tj (from) Tj ( ) Tj (STL) Tj ( ) Tj (i) Tj  T* 0 Tw (n) Tj ( ) Tj (C++.) Tj ( ) Tj (Sometimes) Tj ( ) Tj (you) Tj ( ) Tj (can) Tj ( ) Tj (also) Tj ( ) Tj (find) Tj ( ) Tj (the) Tj ( ) Tj (directive) Tj ( ) Tj (:code:`using) Tj ( ) Tj (namespace) Tj ( ) Tj (std;) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 665.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 19.2 re B*
Q
q
BT 1 0 0 1 0 2.2 Tm 13.2 TL /F2 11 Tf .12549 .262745 .360784 rg (Defining a Namespace) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 647.4394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (To define a namespace, you have to start with the ) Tj /F3 10 Tf (namespace) Tj /F1 10 Tf ( keyword followed by the name:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 580.6394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 50 Tm 12 TL /F5 10 Tf 0 .501961 0 rg (namespace) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (your_namespace_name) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// ...) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// declarations) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// ...) Tj T* /F3 10 Tf 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 548.6394 cm
q
BT 1 0 0 1 0 14 Tm 1.820215 Tw 12 TL /F1 10 Tf 0 0 0 rg (Note that there is no semicolon ) Tj /F3 10 Tf (;) Tj /F1 10 Tf ( after the closing bracket. To call the function or variable declared within the) Tj T* 0 Tw (namespace, prepend the namespace name as shown below:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 517.8394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 14 Tm 12 TL /F3 10 Tf 0 0 0 rg (your_namespace_name) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (function_name) Tj (\() Tj /F4 10 Tf .501961 .501961 .501961 rg (/*...*/) Tj /F3 10 Tf 0 0 0 rg (\);) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (your_namespace_name) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (variable_name) Tj (;) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 487.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F2 12 Tf 14.4 TL (Nested Namespaces) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 457.4394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 2.708381 Tw (In C++, namespaces can be nested, which makes it possible to define one namespace inside another. The) Tj T* 0 Tw (resolution of namespace variables is hierarchical. The syntax is shown below:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 306.6394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 134 Tm 12 TL /F5 10 Tf 0 .501961 0 rg (namespace) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (A) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// ...) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// declarations) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj /F5 10 Tf 0 .501961 0 rg (namespace) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (B) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// ...) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// declarations) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (      ) Tj /F5 10 Tf 0 .501961 0 rg (namespace) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (C) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (      ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// ...) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (      ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// declarations) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (      ) Tj 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* (   ) Tj 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 274.6394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.708766 Tw (As you can see, those declarations take a lot of space and sometimes it's difficult to track all the levels of the) Tj T* 0 Tw (declared namespaces. But in modern C++, writing nested namespaces can be simplified:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 219.8394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 38 Tm 12 TL /F5 10 Tf 0 .501961 0 rg (namespace) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (A) Tj /F3 10 Tf .188235 .188235 .188235 rg (::) Tj /F5 10 Tf .054902 .517647 .709804 rg (B) Tj /F3 10 Tf .188235 .188235 .188235 rg (::) Tj /F5 10 Tf .054902 .517647 .709804 rg (C) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (      ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// ...) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (      ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// declarations) Tj T* /F3 10 Tf 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 175.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .388705 Tw (It is useful when you want to declare functions and variables in the deepest namespace. It also allows you to easily) Tj T* 0 Tw 1.362006 Tw (track the namespace in which you're writing your declarations. Similarly, as with a single namespace, to call the) Tj T* 0 Tw (function or variable declared within the nested namespace, you need to write all levels of the namespaces:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 145.0394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 14 Tm 12 TL /F3 10 Tf 0 0 0 rg (A) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (B) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (C) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (function_name) Tj (\() Tj /F4 10 Tf .501961 .501961 .501961 rg (/*..*/) Tj /F3 10 Tf 0 0 0 rg (\);) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (A) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (B) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (C) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (variable_name) Tj (;) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 125.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Now, let's see it in the real example:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 58.23937 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 50 Tm 12 TL /F3 10 Tf .313725 .439216 .564706 rg (#include) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .25098 .501961 .501961 rg (<) Tj (iostream) Tj (>) Tj /F3 10 Tf .313725 .439216 .564706 rg  T* .733333 .733333 .733333 rg  T* /F4 10 Tf .501961 .501961 .501961 rg (// outer namespace declaration) Tj T* /F5 10 Tf 0 .501961 0 rg (namespace) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (outer) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (   ) Tj /F5 10 Tf .188235 .188235 .564706 rg (void) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .376471 .690196 rg (foo) Tj /F3 10 Tf 0 0 0 rg (\(\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3\) Modern C++) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (38) Tj T* ET
Q
Q
 
endstream
endobj
588 0 obj
<<
/Length 7395
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 564.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
1 .941176 .941176 rg
n 114 204 168 12 re f*
1 .941176 .941176 rg
n 282 204 12 12 re f*
1 .941176 .941176 rg
n 294 204 6 12 re f*
1 .941176 .941176 rg
n 132 132 168 12 re f*
1 .941176 .941176 rg
n 300 132 12 12 re f*
1 .941176 .941176 rg
n 312 132 6 12 re f*
BT 1 0 0 1 0 206 Tm 12 TL /F3 10 Tf .733333 .733333 .733333 rg (      ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (cout) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj .729412 .129412 .129412 rg ("Outer foo\(\) function call. ) Tj /F5 10 Tf .376471 .376471 .376471 rg (\\n) Tj /F3 10 Tf .729412 .129412 .129412 rg (") Tj 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* (   ) Tj 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// inner namespace declaration) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj /F5 10 Tf 0 .501961 0 rg (namespace) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (inner) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (      ) Tj /F5 10 Tf .188235 .188235 .564706 rg (void) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .376471 .690196 rg (foo) Tj /F3 10 Tf 0 0 0 rg (\(\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (         ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (cout) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj .729412 .129412 .129412 rg ("Inner foo\(\) function call. ) Tj /F5 10 Tf .376471 .376471 .376471 rg (\\n) Tj /F3 10 Tf .729412 .129412 .129412 rg (") Tj 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* (      ) Tj 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* (   ) Tj 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T*  T*  T* /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (main) Tj (\(\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (   ) Tj 0 0 0 rg (outer) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (inner) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (foo) Tj (\(\);) Tj .733333 .733333 .733333 rg  T* (   ) Tj 0 0 0 rg (outer) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (foo) Tj (\(\);) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj /F5 10 Tf 0 .501961 0 rg (return) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 544.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The output of the code will look like this:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 513.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F3 10 Tf 12 TL (Inner foo\(\) function call.) Tj T* (Outer foo\(\) function call.) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 493.4394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (This means that the inner foo function was called first, followed by the outer foo function.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 458.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 25.2 re B*
Q
q
BT 1 0 0 1 0 3.2 Tm 19.2 TL /F2 16 Tf .12549 .262745 .360784 rg (4\) SYCL Implementations of Modern C++) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 425.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.8 Tm /F2 14 Tf 16.8 TL (Introduction) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 347.4394 cm
q
BT 1 0 0 1 0 62 Tm 1.144947 Tw 12 TL /F1 10 Tf 0 0 0 rg (Vector addition is a fundamental operation in parallel computing, often serving as a basic building block for more) Tj T* 0 Tw .70694 Tw (complex algorithms. It involves adding corresponding elements of two vectors to produce a resulting vector. ) Tj /F2 10 Tf (When) Tj T* 0 Tw 1.523099 Tw (implemented efficiently, vector addition can significantly enhance the performance) Tj /F1 10 Tf ( of various applications,) Tj T* 0 Tw 3.691281 Tw (ranging from scientific simulations to real-time graphics rendering. As technology advances, heterogeneous) Tj T* 0 Tw 1.37294 Tw (computing using platforms such as CPUs and GPUs has become increasingly prevalent, prompting the need for) Tj T* 0 Tw (efficient and portable programming models.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 257.4394 cm
q
BT 1 0 0 1 0 74 Tm 2.123409 Tw 12 TL /F1 10 Tf 0 0 0 rg (Traditionally, ) Tj /F2 10 Tf (the conventional approach of heterogeneous systems programming required developers to) Tj T* 0 Tw 2.068864 Tw (manage memory explicitly, leading to intricate and error-prone code.) Tj /F1 10 Tf ( However, with the advent of Unified) Tj T* 0 Tw -0.134744 Tw (Shared Memory \(USM\) in SYCL, the process has become streamlined. USM enables the creation of memory regions) Tj T* 0 Tw 2.10815 Tw (that are accessible across different devices. Therefore, ) Tj /F2 10 Tf (USM eliminates the need for explicit data transfers) Tj T* 0 Tw .517238 Tw (between host and device memories.) Tj /F1 10 Tf ( This simplifies memory management and accelerates development that can) Tj T* 0 Tw -0.071727 Tw (drastically enhance both code readability, portability, and performance. Programmers can use USM to focus more on) Tj T* 0 Tw (algorithmic design and less on memory-related intricacies.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 215.4394 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL -0.103494 Tw (In this exploration, we delve into two approaches for performing vector addition: the conventional method with explicit) Tj T* 0 Tw .503606 Tw (host-device data transfer and the modern USM-enabled approach using SYCL. We'll examine the steps involved in) Tj T* 0 Tw (both techniques, highlighting their individual strengths and limitations.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 182.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F2 14 Tf .12549 .262745 .360784 rg (Conventional vector_add with SYCL) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 140.6394 cm
q
BT 1 0 0 1 0 26 Tm 2.20894 Tw 12 TL /F1 10 Tf 0 0 0 rg (In the following code, we dissect the conventional vector addition technique that uses ) Tj /F3 10 Tf (buffer) Tj /F1 10 Tf (, ) Tj /F3 10 Tf (handler) Tj /F1 10 Tf ( and) Tj T* 0 Tw .501853 Tw /F3 10 Tf (accessor) Tj /F1 10 Tf (. This approach typically requires explicit memory management, including allocating memory on the host) Tj T* 0 Tw (and devices, copying data between them, and synchronizing their operations:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 61.83937 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 62 Tm 12 TL /F4 10 Tf .501961 .501961 .501961 rg (//==============================================================) Tj T* (// Copyright \251 Intel Corporation) Tj T* (//) Tj T* (// SPDX-License-Identifier: MIT) Tj T* (// =============================================================) Tj T* /F3 10 Tf .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (4\) SYCL Implementations of Modern C++) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (39) Tj T* ET
Q
Q
 
endstream
endobj
589 0 obj
<<
/Length 12334
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 264.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
1 .941176 .941176 rg
n 84 60 6 12 re f*
1 .941176 .941176 rg
n 90 60 12 12 re f*
1 .941176 .941176 rg
n 102 60 96 12 re f*
1 .941176 .941176 rg
n 318 48 18 12 re f*
1 .941176 .941176 rg
n 84 36 6 12 re f*
1 .941176 .941176 rg
n 90 36 12 12 re f*
1 .941176 .941176 rg
n 102 36 6 12 re f*
BT 1 0 0 1 0 506 Tm 12 TL /F3 10 Tf .313725 .439216 .564706 rg (#include) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .25098 .501961 .501961 rg (<) Tj (CL/sycl.hpp) Tj (>) Tj /F3 10 Tf .313725 .439216 .564706 rg  T* .733333 .733333 .733333 rg  T* /F5 10 Tf 0 .501961 0 rg (using) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (namespace) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (sycl) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T*  T* /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .376471 .690196 rg (main) Tj /F3 10 Tf 0 0 0 rg (\(\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (   ) Tj /F5 10 Tf 0 .501961 0 rg (const) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (N) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (256) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// STEP 1 : Initialize vectors) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (vector) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (vector1) Tj (\() Tj (N) Tj (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (10) Tj /F3 10 Tf 0 0 0 rg (\);) Tj .733333 .733333 .733333 rg  T* (   ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (vector) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (vector2) Tj (\() Tj (N) Tj (,) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (20) Tj /F3 10 Tf 0 0 0 rg (\);) Tj .733333 .733333 .733333 rg  T* (   ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (vector) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (vectorR) Tj (\() Tj (N) Tj (,) Tj .733333 .733333 .733333 rg (  ) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (\);) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// STEP 2 : Create buffer for the vectors) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj 0 0 0 rg (buffer) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (vector1_buffer) Tj (\() Tj (vector1) Tj (\);) Tj .733333 .733333 .733333 rg  T* (   ) Tj 0 0 0 rg (buffer) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (vector2_buffer) Tj (\() Tj (vector2) Tj (\);) Tj .733333 .733333 .733333 rg  T* (   ) Tj 0 0 0 rg (buffer) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (vectorR_buffer) Tj (\() Tj (vectorR) Tj (\);) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// STEP 3 : Submit task to add vector) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj 0 0 0 rg (queue) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (q) Tj (;) Tj .733333 .733333 .733333 rg  T* (   ) Tj 0 0 0 rg (q) Tj (.) Tj (submit) Tj (\([) Tj .188235 .188235 .188235 rg (&) Tj 0 0 0 rg (]\() Tj (handler) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (&) Tj 0 0 0 rg (h) Tj (\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T*  T* (      ) Tj /F4 10 Tf .501961 .501961 .501961 rg (//# STEP 4 : Create vectors accessors) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (      ) Tj 0 0 0 rg (accessor) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (vector1_accessor) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (\() Tj (vector1_buffer) Tj (,) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (h) Tj (,) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (read_only) Tj (\);) Tj .733333 .733333 .733333 rg  T* (      ) Tj 0 0 0 rg (accessor) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (vector2_accessor) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (\() Tj (vector2_buffer) Tj (,) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (h) Tj (,) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (read_only) Tj (\);) Tj .733333 .733333 .733333 rg  T* (      ) Tj 0 0 0 rg (accessor) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (vectorR_accessor) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (\() Tj (vectorR_buffer) Tj (,) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (h) Tj (\);) Tj .733333 .733333 .733333 rg  T*  T* (      ) Tj /F4 10 Tf .501961 .501961 .501961 rg (//# STEP 5 : Proceed with the calculation) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (      ) Tj 0 0 0 rg (h) Tj (.) Tj (parallel_for) Tj (\() Tj (range) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj 0 0 0 rg (\() Tj (N) Tj (\),) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ([) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg (]\() Tj (id) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (index) Tj (\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (         ) Tj 0 0 0 rg (vectorR_accessor) Tj ([) Tj (index) Tj (]) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (vector1_accessor) Tj ([) Tj (index) Tj (]) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (+) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (vector2_accessor) Tj ([) Tj (index) Tj (];) Tj .733333 .733333 .733333 rg  T* (      ) Tj 0 0 0 rg (}\);) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj 0 0 0 rg (}\);) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// STEP 6 : Create a host accessor to copy data from device to host) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj 0 0 0 rg (host_accessor) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (h_a) Tj (\() Tj (vectorR_buffer) Tj (,) Tj (read_only) Tj (\);) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// STEP 7 : Print output values) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (cout) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .729412 .129412 .129412 rg (") Tj /F5 10 Tf .376471 .376471 .376471 rg (\\n) Tj /F3 10 Tf .729412 .129412 .129412 rg (Output Values: ") Tj 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* (   ) Tj /F5 10 Tf 0 .501961 0 rg (for) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (\() Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (N) Tj (;) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj .188235 .188235 .188235 rg (++) Tj 0 0 0 rg (\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (cout) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (h_a) Tj ([) Tj (i) Tj (]) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj .729412 .129412 .129412 rg (" ") Tj 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* (   ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (cout) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .729412 .129412 .129412 rg (") Tj /F5 10 Tf .376471 .376471 .376471 rg (\\n) Tj /F3 10 Tf .729412 .129412 .129412 rg (") Tj 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj /F5 10 Tf 0 .501961 0 rg (return) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 244.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (These are the main SYCL steps to read from the code:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 238.2394 cm
Q
q
1 0 0 1 40.01575 238.2394 cm
Q
q
1 0 0 1 40.01575 202.2394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 26 Tm .449631 Tw 12 TL /F2 10 Tf 0 0 0 rg (Vector Initialization:) Tj /F1 10 Tf ( Three vectors ) Tj /F3 10 Tf (vector1) Tj /F1 10 Tf (, ) Tj /F3 10 Tf (vector2) Tj /F1 10 Tf (, and ) Tj /F3 10 Tf (vectorR) Tj /F1 10 Tf ( of size N are created on the host and) Tj T* 0 Tw 2.072131 Tw (initialized with specific values. They represent the input vectors and the result vector of a vector addition) Tj T* 0 Tw (operation.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 196.2394 cm
Q
q
1 0 0 1 40.01575 160.2394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 26 Tm 2.301566 Tw 12 TL /F2 10 Tf 0 0 0 rg (Create Buffers:) Tj /F1 10 Tf ( Three SYCL buffers, ) Tj /F3 10 Tf (vector1_buffer) Tj /F1 10 Tf (, ) Tj /F3 10 Tf (vector2_buffer) Tj /F1 10 Tf (, and ) Tj /F3 10 Tf (vectorR_buffer) Tj /F1 10 Tf (, are) Tj T* 0 Tw -0.068795 Tw (created to hold the data of the vectors. These buffers are used for data transfer between the host and the SYCL) Tj T* 0 Tw (device \(e.g., GPU\).) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 154.2394 cm
Q
q
1 0 0 1 40.01575 130.2394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm .2239 Tw 12 TL /F2 10 Tf 0 0 0 rg (Submit SYCL Task:) Tj /F1 10 Tf ( A SYCL queue q is created, and a task is submitted to the queue using the ) Tj /F3 10 Tf (q.submit\(\)) Tj /F1 10 Tf  T* 0 Tw (method. This task will execute on a SYCL device, such as a GPU.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 124.2394 cm
Q
q
1 0 0 1 40.01575 100.2394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm 3.514508 Tw 12 TL /F2 10 Tf 0 0 0 rg (Create Accessors:) Tj /F1 10 Tf ( Accessors are created for the input and output buffers. ) Tj /F3 10 Tf (vector1_accessor) Tj /F1 10 Tf ( and) Tj T* 0 Tw /F3 10 Tf (vector2_accessor) Tj /F1 10 Tf ( are read-only accessors, while ) Tj /F3 10 Tf (vectorR_accessor) Tj /F1 10 Tf ( is a regular accessor.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 94.23937 cm
Q
q
1 0 0 1 40.01575 58.23937 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 26 Tm 1.386721 Tw 12 TL /F2 10 Tf 0 0 0 rg (Parallel For:) Tj /F1 10 Tf ( A parallel loop is launched using ) Tj /F3 10 Tf (h.parallel_for\(\)) Tj /F1 10 Tf (, which will execute the vector addition) Tj T* 0 Tw .840241 Tw (operation in parallel across multiple work items. Each work item is responsible for adding one element of the) Tj T* 0 Tw (vectors. ) Tj /F2 10 Tf (Note that this function uses the accessors, not the buffers or the initial vectors.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 54.85039 cm
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (4\) SYCL Implementations of Modern C++) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (40) Tj T* ET
Q
Q
 
endstream
endobj
590 0 obj
<<
/Length 12107
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 763.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm -0.12623 Tw 12 TL /F2 10 Tf 0 0 0 rg (Host Accessor:) Tj /F1 10 Tf ( After the SYCL task is completed, a host accessor ) Tj /F3 10 Tf (h_a) Tj /F1 10 Tf ( is created for the ) Tj /F3 10 Tf (vectorR_buffer) Tj /F1 10 Tf ( to) Tj T* 0 Tw (copy the data from the device to the host.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 763.0394 cm
Q
q
1 0 0 1 40.01575 733.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 3.614006 Tw (While effective, this method can lead to intricate code and hinder productivity due to its manual memory) Tj T* 0 Tw (management requirements. In the next section, we'll implement vector_add using USM.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 700.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F2 14 Tf .12549 .262745 .360784 rg (USM vector_add with SYCL) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 646.2394 cm
q
BT 1 0 0 1 0 38 Tm 1.004273 Tw 12 TL /F1 10 Tf 0 0 0 rg (In this discussion, we implement vector addition using Unified Shared Memory \(USM\), highlighting how the SYCL) Tj T* 0 Tw .201721 Tw (programming model simplifies the utilization of heterogeneous computing resources. The main takeaway is that with) Tj T* 0 Tw 4.55494 Tw (USM there is no requirement to define ) Tj /F3 10 Tf (buffers) Tj /F1 10 Tf (, ) Tj /F3 10 Tf (handlers) Tj /F1 10 Tf (, and ) Tj /F3 10 Tf (accessors) Tj /F1 10 Tf (. In this case, the USM) Tj T* 0 Tw /F3 10 Tf (malloc_shared) Tj /F1 10 Tf ( function is sufficient to allocate and manage memory access:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 87.43937 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
1 .941176 .941176 rg
n 96 348 66 12 re f*
1 .941176 .941176 rg
n 480 348 6 12 re f*
1 .941176 .941176 rg
n 486 348 12 12 re f*
1 .941176 .941176 rg
n 498 348 6 12 re f*
1 .941176 .941176 rg
n 336 108 18 12 re f*
1 .941176 .941176 rg
n 96 96 6 12 re f*
1 .941176 .941176 rg
n 102 96 12 12 re f*
1 .941176 .941176 rg
n 114 96 6 12 re f*
BT 1 0 0 1 0 542 Tm 12 TL /F4 10 Tf .501961 .501961 .501961 rg (//==============================================================) Tj T* (// Copyright \251 Intel Corporation) Tj T* (//) Tj T* (// SPDX-License-Identifier: MIT) Tj T* (// =============================================================) Tj T* /F3 10 Tf .733333 .733333 .733333 rg  T* .313725 .439216 .564706 rg (#include) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .25098 .501961 .501961 rg (<) Tj (CL/sycl.hpp) Tj (>) Tj /F3 10 Tf .313725 .439216 .564706 rg  T* .733333 .733333 .733333 rg  T* /F5 10 Tf 0 .501961 0 rg (using) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (namespace) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (sycl) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T*  T* /F5 10 Tf 0 .501961 0 rg (static) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (const) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (N) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (256) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T*  T* /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .376471 .690196 rg (main) Tj /F3 10 Tf 0 0 0 rg (\(\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (   ) Tj 0 0 0 rg (queue) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (q) Tj (;) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// STEP 1 : Get device information) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (cout) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj .729412 .129412 .129412 rg ("Device : ") Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (q) Tj (.) Tj (get_device) Tj (\(\).) Tj (get_info) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg (info) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (device) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (name) Tj .188235 .188235 .188235 rg (>) Tj 0 0 0 rg (\(\)) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj .729412 .129412 .129412 rg (") Tj /F5 10 Tf .376471 .376471 .376471 rg (\\n) Tj /F3 10 Tf .729412 .129412 .129412 rg (") Tj 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// STEP 2 : Initialize vectors in shared memory) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg (data1) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (malloc_shared) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj 0 0 0 rg (\() Tj (N) Tj (,) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (q) Tj (\);) Tj .733333 .733333 .733333 rg  T* (   ) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg (data2) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (malloc_shared) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj 0 0 0 rg (\() Tj (N) Tj (,) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (q) Tj (\);) Tj .733333 .733333 .733333 rg  T* (   ) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg (dataR) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (malloc_shared) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj 0 0 0 rg (\() Tj (N) Tj (,) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (q) Tj (\);) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// STEP 3 : Asign values to vectors) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj /F5 10 Tf 0 .501961 0 rg (for) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (\() Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (N) Tj (;) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj .188235 .188235 .188235 rg (++) Tj 0 0 0 rg (\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (      ) Tj 0 0 0 rg (data1) Tj ([) Tj (i) Tj (]) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (10) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* (      ) Tj 0 0 0 rg (data2) Tj ([) Tj (i) Tj (]) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (20) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* (      ) Tj 0 0 0 rg (dataR) Tj ([) Tj (i) Tj (]) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg (  ) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* (   ) Tj 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// STEP 4 : Proceed with the calculation) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj 0 0 0 rg (q) Tj (.) Tj (parallel_for) Tj (\() Tj (range) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj 0 0 0 rg (\() Tj (N) Tj (\),) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ([) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg (]\() Tj (id) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj (\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (      ) Tj 0 0 0 rg (dataR) Tj ([) Tj (i) Tj (]) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (data1) Tj ([) Tj (i) Tj (]) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (+) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (data2) Tj ([) Tj (i) Tj (];) Tj .733333 .733333 .733333 rg  T* (   ) Tj 0 0 0 rg (}\).) Tj (wait) Tj (\(\);) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// STEP 5 : Print output values) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj /F5 10 Tf 0 .501961 0 rg (for) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (\() Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (N) Tj (;) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj .188235 .188235 .188235 rg (++) Tj 0 0 0 rg (\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (cout) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (dataR) Tj ([) Tj (i) Tj (]) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj .729412 .129412 .129412 rg (" ") Tj 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* (   ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (cout) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj .729412 .129412 .129412 rg (") Tj /F5 10 Tf .376471 .376471 .376471 rg (\\n) Tj /F3 10 Tf .729412 .129412 .129412 rg (") Tj 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// STEP 6 : Release memory) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (   ) Tj 0 0 0 rg (free) Tj (\() Tj (data1) Tj (,) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (q) Tj (\);) Tj .733333 .733333 .733333 rg  T* (   ) Tj 0 0 0 rg (free) Tj (\() Tj (data2) Tj (,) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (q) Tj (\);) Tj .733333 .733333 .733333 rg  T* (   ) Tj 0 0 0 rg (free) Tj (\() Tj (dataR) Tj (,) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (q) Tj (\);) Tj .733333 .733333 .733333 rg  T*  T* (   ) Tj /F5 10 Tf 0 .501961 0 rg (return) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 67.43937 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (This part of the code:) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (4\) SYCL Implementations of Modern C++) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (41) Tj T* ET
Q
Q
 
endstream
endobj
591 0 obj
<<
/Length 13710
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 768.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
1 .941176 .941176 rg
n 78 0 66 12 re f*
1 .941176 .941176 rg
n 462 0 6 12 re f*
1 .941176 .941176 rg
n 468 0 12 12 re f*
1 .941176 .941176 rg
n 480 0 6 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (cout) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj .729412 .129412 .129412 rg ("Device : ") Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (q) Tj (.) Tj (get_device) Tj (\(\).) Tj (get_info) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg (info) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (device) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (name) Tj .188235 .188235 .188235 rg (>) Tj 0 0 0 rg (\(\)) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj .729412 .129412 .129412 rg (") Tj /F5 10 Tf .376471 .376471 .376471 rg (\\n) Tj /F3 10 Tf .729412 .129412 .129412 rg (") Tj 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 748.2394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (gets device information from the ) Tj /F3 10 Tf (q) Tj /F1 10 Tf (, and prints information about the selected device.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 730.2394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (USM) Tj /F1 10 Tf ( gets established here:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 687.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 26 Tm 12 TL /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg (data1) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (malloc_shared) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj 0 0 0 rg (\() Tj (N) Tj (,) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (q) Tj (\);) Tj .733333 .733333 .733333 rg  T* /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg (data2) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (malloc_shared) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj 0 0 0 rg (\() Tj (N) Tj (,) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (q) Tj (\);) Tj .733333 .733333 .733333 rg  T* /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg (dataR) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (malloc_shared) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj 0 0 0 rg (\() Tj (N) Tj (,) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (q) Tj (\);) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 643.4394 cm
q
BT 1 0 0 1 0 26 Tm .001084 Tw 12 TL /F1 10 Tf 0 0 0 rg (where three shared memory arrays ) Tj /F3 10 Tf (data1) Tj /F1 10 Tf (, ) Tj /F3 10 Tf (data2) Tj /F1 10 Tf (, and ) Tj /F3 10 Tf (dataR) Tj /F1 10 Tf ( are allocated using ) Tj /F3 10 Tf (malloc_shared) Tj (<) Tj (int) Tj (>) Tj (\(N,) Tj ( ) Tj (q\)) Tj /F1 10 Tf (.) Tj T* 0 Tw 2.43294 Tw (They are accessible during computation by both the host and device. USM also offers ) Tj /F3 10 Tf (malloc_device) Tj /F1 10 Tf ( and) Tj T* 0 Tw /F3 10 Tf (malloc_host) Tj /F1 10 Tf ( to explicitly allocate memory on the host or device, but they will not be covered in this course.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 613.4394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.544672 Tw (So, when should you use USM versus the conventional SYCL? In summary, using USM is a good approach to) Tj T* 0 Tw (consider when:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 607.4394 cm
Q
q
1 0 0 1 40.01575 607.4394 cm
Q
q
1 0 0 1 40.01575 595.4394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The code has many pointers that are susceptible to future changes.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 589.4394 cm
Q
q
1 0 0 1 40.01575 577.4394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (When it is expected that the application will gain complexity over time.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 577.4394 cm
Q
q
1 0 0 1 40.01575 544.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F2 14 Tf .12549 .262745 .360784 rg (SYCL matrix_multiplication Using USM) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 454.6394 cm
q
0 0 0 rg
BT 1 0 0 1 0 74 Tm /F1 10 Tf 12 TL 1.768476 Tw (Matrix multiplication is a fundamental operation in linear algebra. It plays a crucial role in various scientific and) Tj T* 0 Tw -0.0843 Tw (engineering applications, such as image processing, simulation, and machine learning. The operation involves taking) Tj T* 0 Tw 1.406531 Tw (the dot product of rows from one matrix with the columns of another matrix to produce a resulting matrix. While) Tj T* 0 Tw 1.884161 Tw (conceptually simple, efficient computation of matrix multiplication becomes a challenge when dealing with large) Tj T* 0 Tw .156339 Tw (matrices due to the inherent parallelism that can be leveraged for optimization. This is where SYCL comes into play.) Tj T* 0 Tw .555205 Tw (SYCL is a programming model and API that enables developers to write code that can be executed on a variety of) Tj T* 0 Tw (heterogeneous platforms, including CPUs, GPUs, FPGAs, and other accelerators, using a single-source approach.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 400.6394 cm
q
BT 1 0 0 1 0 38 Tm 2.537131 Tw 12 TL /F1 10 Tf 0 0 0 rg (In this context, leveraging SYCL for matrix multiplication offers the potential to harness the power of various) Tj T* 0 Tw .51493 Tw (computing devices while maintaining a unified codebase. ) Tj /F2 10 Tf (By expressing parallelism with SYCL, developers can) Tj T* 0 Tw 2.680409 Tw (achieve optimized matrix multiplication routines that efficiently distribute computation across different) Tj T* 0 Tw (devices.) Tj /F1 10 Tf ( In the code below we present the matrix multiplication code in SYCL format using USM:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 57.83937 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
1 .941176 .941176 rg
n 102 132 66 12 re f*
1 .941176 .941176 rg
n 486 132 6 12 re f*
1 .941176 .941176 rg
n 492 132 12 12 re f*
1 .941176 .941176 rg
n 504 132 6 12 re f*
BT 1 0 0 1 0 326 Tm 12 TL /F4 10 Tf .501961 .501961 .501961 rg (//==============================================================) Tj T* (// Copyright \251 Intel Corporation) Tj T* (//) Tj T* (// SPDX-License-Identifier: MIT) Tj T* (// =============================================================) Tj T* /F3 10 Tf .733333 .733333 .733333 rg  T* .313725 .439216 .564706 rg (#include) Tj .733333 .733333 .733333 rg ( ) Tj /F4 10 Tf .25098 .501961 .501961 rg (<) Tj (CL/sycl.hpp) Tj (>) Tj /F3 10 Tf .313725 .439216 .564706 rg  T* .733333 .733333 .733333 rg  T* /F5 10 Tf 0 .501961 0 rg (using) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (namespace) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (sycl) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T*  T* /F5 10 Tf 0 .501961 0 rg (static) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (const) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (N) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (3) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T*  T* /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 .376471 .690196 rg (main) Tj /F3 10 Tf 0 0 0 rg (\(\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (    ) Tj 0 0 0 rg (queue) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (q) Tj (;) Tj .733333 .733333 .733333 rg  T*  T* (    ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// STEP 1 : Get device information) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (    ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (cout) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj .729412 .129412 .129412 rg ("Device : ") Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (q) Tj (.) Tj (get_device) Tj (\(\).) Tj (get_info) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg (info) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (device) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (name) Tj .188235 .188235 .188235 rg (>) Tj 0 0 0 rg (\(\)) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj .729412 .129412 .129412 rg (") Tj /F5 10 Tf .376471 .376471 .376471 rg (\\n) Tj /F3 10 Tf .729412 .129412 .129412 rg (") Tj 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T*  T* (    ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// STEP 2 : Initialize vectors in shared memory) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (    ) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg (data1) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (malloc_shared) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj 0 0 0 rg (\() Tj (N) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (*) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (N) Tj (,) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (q) Tj (\);) Tj .733333 .733333 .733333 rg  T* (    ) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg (data2) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (malloc_shared) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj 0 0 0 rg (\() Tj (N) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (*) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (N) Tj (,) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (q) Tj (\);) Tj .733333 .733333 .733333 rg  T* (    ) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg (dataR) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (malloc_shared) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj 0 0 0 rg (\() Tj (N) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (*) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (N) Tj (,) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (q) Tj (\);) Tj .733333 .733333 .733333 rg  T*  T* (    ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// STEP 3 : Asign values to vectors) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (    ) Tj /F5 10 Tf 0 .501961 0 rg (for) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (\() Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (N) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (*) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (N) Tj (;) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj .188235 .188235 .188235 rg (++) Tj 0 0 0 rg (\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ({) Tj .733333 .733333 .733333 rg  T* (        ) Tj 0 0 0 rg (data1) Tj ([) Tj (i) Tj (]) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (10) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* (        ) Tj 0 0 0 rg (data2) Tj ([) Tj (i) Tj (]) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (20) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* (        ) Tj 0 0 0 rg (dataR) Tj ([) Tj (i) Tj (]) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg (  ) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (4\) SYCL Implementations of Modern C++) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (42) Tj T* ET
Q
Q
 
endstream
endobj
592 0 obj
<<
/Length 12306
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 516.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
1 .941176 .941176 rg
n 366 108 18 12 re f*
1 .941176 .941176 rg
n 102 96 6 12 re f*
1 .941176 .941176 rg
n 108 96 12 12 re f*
1 .941176 .941176 rg
n 120 96 6 12 re f*
BT 1 0 0 1 0 254 Tm 12 TL /F3 10 Tf .733333 .733333 .733333 rg (    ) Tj 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T*  T* (    ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// STEP 4 : Proceed with the calculation) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (    ) Tj 0 0 0 rg (q) Tj (.) Tj (parallel_for) Tj (\() Tj (range) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf 0 0 .815686 rg (2) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj 0 0 0 rg ({) Tj (N) Tj (,) Tj (N) Tj (},) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ([) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg (]\() Tj (item) Tj .188235 .188235 .188235 rg (<) Tj /F5 10 Tf 0 0 .815686 rg (2) Tj /F3 10 Tf .188235 .188235 .188235 rg (>) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (item) Tj (\){) Tj .733333 .733333 .733333 rg  T* (        ) Tj /F5 10 Tf 0 .501961 0 rg (const) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (j) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (item) Tj (.) Tj (get_id) Tj (\() Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (\);) Tj .733333 .733333 .733333 rg  T* (        ) Tj /F5 10 Tf 0 .501961 0 rg (const) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (item) Tj (.) Tj (get_id) Tj (\() Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F3 10 Tf 0 0 0 rg (\);) Tj .733333 .733333 .733333 rg  T*  T* (        ) Tj /F5 10 Tf 0 .501961 0 rg (for) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (\() Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (k) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (k) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (N) Tj (;) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (++) Tj 0 0 0 rg (k) Tj (\)) Tj .733333 .733333 .733333 rg  T* (            ) Tj 0 0 0 rg (dataR) Tj ([) Tj (i) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg (N) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg (j) Tj (]) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (+=) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (data1) Tj ([) Tj (i) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg (N) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg (k) Tj (]) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (*) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (data2) Tj ([) Tj (k) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg (N) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg (j) Tj (];) Tj .733333 .733333 .733333 rg  T* (    ) Tj 0 0 0 rg (}\).) Tj (wait) Tj (\(\);) Tj .733333 .733333 .733333 rg  T*  T* (    ) Tj /F4 10 Tf .501961 .501961 .501961 rg (// STEP 5 : Print output values) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (    ) Tj /F5 10 Tf 0 .501961 0 rg (for) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (\() Tj /F5 10 Tf .188235 .188235 .564706 rg (int) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (N) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (*) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (N) Tj (;) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (i) Tj .188235 .188235 .188235 rg (++) Tj 0 0 0 rg (\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (cout) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (dataR) Tj ([) Tj (i) Tj (]) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj .729412 .129412 .129412 rg (" ") Tj 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* (    ) Tj 0 0 0 rg (std) Tj .188235 .188235 .188235 rg (::) Tj 0 0 0 rg (cout) Tj .733333 .733333 .733333 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj (<) Tj .733333 .733333 .733333 rg ( ) Tj .729412 .129412 .129412 rg (") Tj /F5 10 Tf .376471 .376471 .376471 rg (\\n) Tj /F3 10 Tf .729412 .129412 .129412 rg (") Tj 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T*  T* (    ) Tj /F4 10 Tf .501961 .501961 .501961 rg (//# STEP 6 : Release memory) Tj T* /F3 10 Tf .733333 .733333 .733333 rg (    ) Tj 0 0 0 rg (free) Tj (\() Tj (data1) Tj (,) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (q) Tj (\);) Tj .733333 .733333 .733333 rg  T* (    ) Tj 0 0 0 rg (free) Tj (\() Tj (data2) Tj (,) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (q) Tj (\);) Tj .733333 .733333 .733333 rg  T* (    ) Tj 0 0 0 rg (free) Tj (\() Tj (dataR) Tj (,) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (q) Tj (\);) Tj .733333 .733333 .733333 rg  T*  T* (    ) Tj /F5 10 Tf 0 .501961 0 rg (return) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F3 10 Tf 0 0 0 rg (;) Tj .733333 .733333 .733333 rg  T* 0 0 0 rg (}) Tj .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 496.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (This program produces the following output:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 465.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
BT 1 0 0 1 0 14 Tm 12 TL /F5 10 Tf .564706 .439216 0 rg (Device) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (:) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (Intel) Tj (\() Tj (R) Tj (\)) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (UHD) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg (Graphics) Tj .733333 .733333 .733333 rg ( ) Tj 0 0 0 rg ([) Tj /F5 10 Tf 0 .313725 .501961 rg (0x9a60) Tj /F3 10 Tf 0 0 0 rg (]) Tj .733333 .733333 .733333 rg  T* /F5 10 Tf 0 0 .815686 rg (600) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (600) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (600) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (600) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (600) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (600) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (600) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (600) Tj /F3 10 Tf .733333 .733333 .733333 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (600) Tj /F3 10 Tf .733333 .733333 .733333 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 432.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.8 Tm /F2 14 Tf 16.8 TL (Summary) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 402.6394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .003005 Tw (Using buffers, handlers, and accessors versus using USM \(Unified Shared Memory\) in SYCL each has its own set of) Tj T* 0 Tw (advantages and disadvantages. Here's a comparison of the two approaches:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 372.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F2 12 Tf .12549 .262745 .360784 rg (Advantages of Using Buffers, Handlers, and Accessors:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 360.2394 cm
Q
q
1 0 0 1 40.01575 360.2394 cm
Q
q
1 0 0 1 40.01575 312.2394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 38 Tm 5.544409 Tw 12 TL /F2 10 Tf 0 0 0 rg (Fine-Grained Control:) Tj /F1 10 Tf ( Buffers, handlers, and accessors provide fine-grained control over memory) Tj T* 0 Tw 2.366721 Tw (management and data transfer. This can be advantageous when you need precise control over memory) Tj T* 0 Tw 1.320273 Tw (allocation, data movement, and synchronization. It can also be more flexible when multiple devices need to) Tj T* 0 Tw (access the same data.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 306.2394 cm
Q
q
1 0 0 1 40.01575 270.2394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 26 Tm 2.569578 Tw 12 TL /F2 10 Tf 0 0 0 rg (Explicit Data Movement:) Tj /F1 10 Tf ( Buffers and accessors allow you to explicitly control when data is transferred) Tj T* 0 Tw 2.06094 Tw (between the host and device. This can be useful when optimizing data movement for specific application) Tj T* 0 Tw (requirements.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 264.2394 cm
Q
q
1 0 0 1 40.01575 240.2394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm 1.237756 Tw 12 TL /F2 10 Tf 0 0 0 rg (Data Safety:) Tj /F1 10 Tf ( Accessors help enforce data safety by ensuring that data is accessed and modified within the) Tj T* 0 Tw (appropriate scope and access mode, reducing the risk of data races and synchronization issues.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 234.2394 cm
Q
q
1 0 0 1 40.01575 210.2394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm .10315 Tw 12 TL /F2 10 Tf 0 0 0 rg (Parallelism:) Tj /F1 10 Tf ( Handlers and accessors facilitate the creation of parallel tasks and dependencies, enabling you to) Tj T* 0 Tw (express complex parallelism patterns in your code.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 204.2394 cm
Q
q
1 0 0 1 40.01575 180.2394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm 1.817888 Tw 12 TL /F2 10 Tf 0 0 0 rg (Device Selection:) Tj /F1 10 Tf ( Buffers and accessors can be used to specify and control the choice of the device for) Tj T* 0 Tw (computation, allowing you to target specific hardware.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 180.2394 cm
Q
q
1 0 0 1 40.01575 149.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F2 12 Tf .12549 .262745 .360784 rg (Disadvantages of Using Buffers, Handlers, and Accessors:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 137.8394 cm
Q
q
1 0 0 1 40.01575 137.8394 cm
Q
q
1 0 0 1 40.01575 113.8394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm 2.380315 Tw 12 TL /F2 10 Tf 0 0 0 rg (Complexity:) Tj /F1 10 Tf ( Managing buffers, handlers, and accessors can add complexity to your code, especially for) Tj T* 0 Tw (applications that require extensive data movement and synchronization.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 107.8394 cm
Q
q
1 0 0 1 40.01575 83.83937 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm 1.247606 Tw 12 TL /F2 10 Tf 0 0 0 rg (Verbose Code:) Tj /F1 10 Tf ( SYCL code using buffers, handlers, and accessors can be verbose, requiring more lines of) Tj T* 0 Tw (code compared to USM for simple operations.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 77.83937 cm
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (4\) SYCL Implementations of Modern C++) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (43) Tj T* ET
Q
Q
 
endstream
endobj
593 0 obj
<<
/Length 8473
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 763.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm .431606 Tw 12 TL /F2 10 Tf 0 0 0 rg (Learning Curve:) Tj /F1 10 Tf ( Beginners may find it challenging to grasp the concepts of buffers, handlers, and accessors,) Tj T* 0 Tw (particularly if they are new to parallel programming and SYCL.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 763.0394 cm
Q
q
1 0 0 1 40.01575 732.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F2 12 Tf .12549 .262745 .360784 rg (Advantages of Using USM:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 720.6394 cm
Q
q
1 0 0 1 40.01575 720.6394 cm
Q
q
1 0 0 1 40.01575 684.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 26 Tm .386721 Tw 12 TL /F2 10 Tf 0 0 0 rg (Simplicity:) Tj /F1 10 Tf ( USM simplifies memory management by providing a unified memory space accessible by both the) Tj T* 0 Tw -0.046619 Tw (host and device. It reduces the need for explicit memory allocation and synchronization, resulting in simpler and) Tj T* 0 Tw (more concise code.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 678.6394 cm
Q
q
1 0 0 1 40.01575 654.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm 1.046705 Tw 12 TL /F2 10 Tf 0 0 0 rg (Ease of Use:) Tj /F1 10 Tf ( USM is easier to learn and use, making it an attractive option for developers new to SYCL or) Tj T* 0 Tw (parallel programming in general.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 648.6394 cm
Q
q
1 0 0 1 40.01575 624.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm 1.934578 Tw 12 TL /F2 10 Tf 0 0 0 rg (Implicit Data Movement:) Tj /F1 10 Tf ( With USM, data movement between the host and device is managed implicitly,) Tj T* 0 Tw (reducing the need for manual data transfers and synchronization points.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 618.6394 cm
Q
q
1 0 0 1 40.01575 594.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm 1.526469 Tw 12 TL /F2 10 Tf 0 0 0 rg (Reduced Boilerplate:) Tj /F1 10 Tf ( USM reduces the amount of SYCL-specific code needed to express parallelism and) Tj T* 0 Tw (manage memory, leading to less boilerplate in your application.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 594.6394 cm
Q
q
1 0 0 1 40.01575 564.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F2 12 Tf .12549 .262745 .360784 rg (Disadvantages of Using USM:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 552.2394 cm
Q
q
1 0 0 1 40.01575 552.2394 cm
Q
q
1 0 0 1 40.01575 516.2394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 26 Tm .234578 Tw 12 TL /F2 10 Tf 0 0 0 rg (Limited Control:) Tj /F1 10 Tf ( While USM simplifies memory management, it also limits your control over low-level memory) Tj T* 0 Tw 1.058864 Tw (operations. This may be a disadvantage in scenarios where fine-grained control is essential for performance) Tj T* 0 Tw (optimization.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 510.2394 cm
Q
q
1 0 0 1 40.01575 486.2394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm 2.950341 Tw 12 TL /F2 10 Tf 0 0 0 rg (Performance Trade-offs:) Tj /F1 10 Tf ( Depending on the hardware and use case, USM may introduce performance) Tj T* 0 Tw (tradeoffs compared to using buffers and explicit data movement control.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 480.2394 cm
Q
q
1 0 0 1 40.01575 456.2394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm 1.022435 Tw 12 TL /F2 10 Tf 0 0 0 rg (Compatibility:) Tj /F1 10 Tf ( Not all SYCL-compatible devices and platforms support USM, so there may be limitations on) Tj T* 0 Tw (where you can deploy USM-based code.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 456.2394 cm
Q
q
1 0 0 1 40.01575 390.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 50 Tm /F1 10 Tf 12 TL 1.460256 Tw (In summary, the choice between using buffers, handlers, and accessors versus USM in SYCL depends on your) Tj T* 0 Tw 1.765341 Tw (specific application requirements and your familiarity with SYCL programming. Buffers, handlers, and accessors) Tj T* 0 Tw 1.0173 Tw (provide more control but can be more complex, while USM simplifies memory management but may not offer the) Tj T* 0 Tw 2.876711 Tw (same level of control in all situations. Consider the tradeoffs and choose the approach that best suits your) Tj T* 0 Tw (application's needs and your development expertise.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 355.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 25.2 re B*
Q
q
BT 1 0 0 1 0 3.2 Tm 19.2 TL /F2 16 Tf .12549 .262745 .360784 rg (5\) Next step: SYCL Essentials) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 322.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F2 14 Tf .12549 .262745 .360784 rg (Introduction to SYCL Essentials) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 280.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 1.250829 Tw (Congratulations on embarking on your first SYCL journey with "SYCL 101"!!, your gateway to the world of SYCL) Tj T* 0 Tw .6073 Tw (programming. As you delve into the foundational aspects of SYCL, you're building a strong base that will empower) Tj T* 0 Tw (you to explore the possibilities of parallel programming.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 250.2394 cm
q
BT 1 0 0 1 0 14 Tm .616005 Tw 12 TL /F1 10 Tf 0 0 0 rg (Now that you have completed the SYCL 101 course, ) Tj /F2 10 Tf (why stop here?) Tj /F1 10 Tf ( Would you like to elevate your SYCL skills?) Tj T* 0 Tw (Join ) Tj /F2 10 Tf (SYCL Essentials!) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 184.2394 cm
q
BT 1 0 0 1 0 50 Tm .384426 Tw 12 TL /F2 10 Tf 0 0 0 rg (SYCL Essentials) Tj /F1 10 Tf ( is the next FREE step in your SYCL education. As you're starting to grasp the basics, you'll soon) Tj T* 0 Tw .258776 Tw (realize the incredible potential SYCL holds for optimizing code performance, harnessing parallelism, and unleashing) Tj T* 0 Tw .105205 Tw (the full power of modern hardware. You will have access to the most advanced Intel\256 CPUs and GPUs, and you will) Tj T* 0 Tw .896339 Tw (learn how to target them with your code! SYCL Essentials is a more advanced course that has been meticulously) Tj T* 0 Tw (crafted to take your skills to the next level and open doors to a deeper understanding of SYCL.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 166.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (What Awaits You in SYCL Essentials?) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 136.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.260273 Tw (Module 1: oneAPI Intro: Dive into the comprehensive oneAPI ecosystem and its significance in creating efficient,) Tj T* 0 Tw (high-performance code across diverse hardware architectures.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 106.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 3.059508 Tw (Module 2: DPCPP Program Structure: Uncover advanced program structuring techniques that facilitate code) Tj T* 0 Tw (organization and maintainability, ensuring your SYCL programs are not only powerful but also elegant.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 76.23937 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .731506 Tw (Module 3: DPCPP Unified Shared Memory: Learn how to seamlessly share data between devices to improve data) Tj T* 0 Tw (access efficiency and enhance performance across your applications.) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (5\) Next step: SYCL Essentials) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (44) Tj T* ET
Q
Q
 
endstream
endobj
594 0 obj
<<
/Length 8013
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 763.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.112594 Tw (Module 4: DPCPP Sub Groups: Explore the intricacies of sub-groups, a vital concept in SYCL that enables more) Tj T* 0 Tw (fine-grained control over work-item execution, leading to optimized parallel processing.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 697.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 50 Tm /F1 10 Tf 12 TL .379672 Tw (Module 5: Intel\256 Advisor: Master the use of Intel Advisor to analyze and fine-tune your SYCL code, ensuring you're) Tj T* 0 Tw .443864 Tw (making the most of your hardware's capabilities...and that's just the beginning. From efficient memory management) Tj T* 0 Tw -0.00185 Tw (to advanced debugging tools, from enhanced data manipulation to leveraging sub-group capabilities, each module in) Tj T* 0 Tw 2.196273 Tw ("SYCL Essentials" is designed to equip you with the skills needed to tackle complex programming challenges) Tj T* 0 Tw (head-on.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 679.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (Why Should You Take the Leap?) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 637.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL -0.032869 Tw (Unlock Unprecedented Performance: SYCL Essentials will empower you to create code that not only runs but thrives) Tj T* 0 Tw 1.96494 Tw (on modern hardware. Unleash the full potential of parallelism and witness your applications running faster and) Tj T* 0 Tw (smoother than ever before.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 607.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.772131 Tw (Stay Ahead of the Curve: The tech landscape is evolving rapidly, and mastering advanced SYCL concepts will) Tj T* 0 Tw (position you as a trailblazer in the field of parallel programming. Be at the forefront of innovation.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 577.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.010881 Tw (Dive Deeper into Optimization: SYCL Essentials arms you with the tools to fine-tune your code, optimize memory) Tj T* 0 Tw (access patterns, and squeeze every ounce of performance from your applications.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 559.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (Are You Ready to Take the Next Step?) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 529.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .310829 Tw (If "SYCL 101" has sparked your curiosity and ignited your passion for SYCL programming, "SYCL Essentials" is the) Tj T* 0 Tw (natural progression that will catapult your skills to new heights.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 487.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .031894 Tw (In the next sections, we present descriptions for the modules along with their learning objectives more in detail. Take) Tj T* 0 Tw .395479 Tw (a look at them and get ready to tackle complex challenges, write code that's not just functional but exceptional, and) Tj T* 0 Tw (become a true SYCL expert!) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 445.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 2.526123 Tw (Enroll in "SYCL Essentials" today and embark on a journey that promises to transform you into a proficient,) Tj T* 0 Tw .240292 Tw (confident, and innovative SYCL programmer. Your future in parallel programming awaits, seize the opportunity now.) Tj T* 0 Tw (It is totally FREE!!) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 427.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (Start SYCL Essentials) Tj /F1 10 Tf ( ) Tj 0 .4 .6 rg (here.) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 394.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F2 14 Tf .12549 .262745 .360784 rg (Module 1: oneAPI Intro) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 352.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .652273 Tw (This module introduces you to oneAPI and oneAPI's implementation of SYCL \(Data Parallel C++/DPC++\). You will) Tj T* 0 Tw 1.63745 Tw (learn about the basic SYCL hello world program and how to compile SYCL code for Intel hardware using Data) Tj T* 0 Tw (Parallel C++ Compiler.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 321.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F2 12 Tf .12549 .262745 .360784 rg (Learning Objectives) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 309.8394 cm
Q
q
1 0 0 1 40.01575 309.8394 cm
Q
q
1 0 0 1 40.01575 285.8394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.493864 Tw (Explain how the oneAPI programming model can solve the challenges of programming in a heterogeneous) Tj T* 0 Tw (world.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 279.8394 cm
Q
q
1 0 0 1 40.01575 267.8394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Use oneAPI projects to enable your workflows.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 261.8394 cm
Q
q
1 0 0 1 40.01575 249.8394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Understand the SYCL language and programming model.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 243.8394 cm
Q
q
1 0 0 1 40.01575 231.8394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Familiarize yourself with the use Jupyter Notebooks for training throughout the course.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 231.8394 cm
Q
q
1 0 0 1 40.01575 199.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F2 14 Tf .12549 .262745 .360784 rg (Module 2: DPCPP Program Structure) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 157.0394 cm
q
BT 1 0 0 1 0 26 Tm .263606 Tw 12 TL /F1 10 Tf 0 0 0 rg (This module demonstrates basic ) Tj /F2 10 Tf (SYCL code anatomy) Tj /F1 10 Tf ( and program structure. You will learn about important ) Tj /F2 10 Tf (SYCL) Tj T* 0 Tw 4.224273 Tw (classes) Tj /F1 10 Tf ( and different types of kernels. You will also learn about ) Tj /F2 10 Tf (buffer accessor memory model) Tj /F1 10 Tf ( and) Tj T* 0 Tw (synchronization when using buffers.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 126.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F2 12 Tf 14.4 TL (Learning Objectives) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 114.6394 cm
Q
q
1 0 0 1 40.01575 114.6394 cm
Q
q
1 0 0 1 40.01575 102.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Explain the SYCL fundamental classes.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 96.63937 cm
Q
q
1 0 0 1 40.01575 84.63937 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Use device selection to offload kernel workloads.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 78.63937 cm
Q
q
1 0 0 1 40.01575 66.63937 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Decide when to use basic parallel kernels and ND Range kernels.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 60.63937 cm
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (5\) Next step: SYCL Essentials) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (45) Tj T* ET
Q
Q
 
endstream
endobj
595 0 obj
<<
/Length 9210
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 775.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Create a host accessor.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 769.0394 cm
Q
q
1 0 0 1 40.01575 757.0394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Build a sample SYCL application through hands-on lab exercises.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 757.0394 cm
Q
q
1 0 0 1 40.01575 724.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F2 14 Tf .12549 .262745 .360784 rg (Module 3: DPCPP Unified Shared Memory) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 694.2394 cm
q
BT 1 0 0 1 0 14 Tm .455881 Tw 12 TL /F1 10 Tf 0 0 0 rg (This module demonstrates how to implement different modes of ) Tj /F2 10 Tf (Unified Shared Memory \(USM\)) Tj /F1 10 Tf ( in SYCL code, as) Tj T* 0 Tw (well as how to solve for data dependencies for in-order and out-of-order tasks.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 663.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F2 12 Tf 14.4 TL (Learning Objectives) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 651.8394 cm
Q
q
1 0 0 1 40.01575 651.8394 cm
Q
q
1 0 0 1 40.01575 639.8394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Use new SYCL2020 features such as USM to simplify programming.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 633.8394 cm
Q
q
1 0 0 1 40.01575 621.8394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Understand implicit and explicit ways of moving memory using USM.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 615.8394 cm
Q
q
1 0 0 1 40.01575 603.8394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Solve data dependency between kernel tasks optimally.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 603.8394 cm
Q
q
1 0 0 1 40.01575 571.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F2 14 Tf .12549 .262745 .360784 rg (Module 4: DPCPP Sub-Groups) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 541.0394 cm
q
BT 1 0 0 1 0 14 Tm 1.81894 Tw 12 TL /F1 10 Tf 0 0 0 rg (This module examines SYCL ) Tj /F2 10 Tf (sub-groups) Tj /F1 10 Tf ( and why they are important. The code samples demonstrate how to) Tj T* 0 Tw (implement a query for sub-group info, sub-group shuffles, and sub-group algorithms.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 510.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F2 12 Tf 14.4 TL (Learning Objectives) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 498.6394 cm
Q
q
1 0 0 1 40.01575 498.6394 cm
Q
q
1 0 0 1 40.01575 486.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Understand the advantages of using sub-groups in SYCL.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 480.6394 cm
Q
q
1 0 0 1 40.01575 468.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Take advantage of sub-group algorithms for performance and productivity.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 462.6394 cm
Q
q
1 0 0 1 40.01575 450.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Use sub-group shuffle operations to avoid explicit memory operations.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 450.6394 cm
Q
q
1 0 0 1 40.01575 417.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F2 14 Tf .12549 .262745 .360784 rg (Module 5: Intel\256 Advisor) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 363.8394 cm
q
BT 1 0 0 1 0 38 Tm 1.58694 Tw 12 TL /F1 10 Tf 0 0 0 rg (This module demonstrates various aspects of ) Tj /F2 10 Tf (Intel\256 Advisor) Tj /F1 10 Tf (. The first uses Intel Advisor to show performance) Tj T* 0 Tw .79315 Tw (offload opportunities found in a sample application, followed by additional command-line options for getting offload) Tj T* 0 Tw 1.076273 Tw (advisor results. The second gives an example of ) Tj /F2 10 Tf (roofline analysis) Tj /F1 10 Tf ( and command-line options for getting Advisor) Tj T* 0 Tw (results.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 333.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F2 12 Tf 14.4 TL (Learning Objectives) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 321.4394 cm
Q
q
1 0 0 1 40.01575 321.4394 cm
Q
q
1 0 0 1 40.01575 297.4394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .876705 Tw (Show how Intel Advisor can help you decide which part of the code should or should not be offloaded to the) Tj T* 0 Tw (accelerator.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 291.4394 cm
Q
q
1 0 0 1 40.01575 279.4394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Run Offload Advisor and generate an HTML report.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 273.4394 cm
Q
q
1 0 0 1 40.01575 261.4394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Read and understand the metrics in the report.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 255.4394 cm
Q
q
1 0 0 1 40.01575 243.4394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Get a performance estimation of your application on the target hardware.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 237.4394 cm
Q
q
1 0 0 1 40.01575 225.4394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Decide which loops are good candidates for accelerator offload.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 225.4394 cm
Q
q
1 0 0 1 40.01575 192.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F2 14 Tf .12549 .262745 .360784 rg (Module 6: VTune\231 Profiler) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 150.6394 cm
q
BT 1 0 0 1 0 26 Tm .113606 Tw 12 TL /F1 10 Tf 0 0 0 rg (This module demonstrates using ) Tj /F2 10 Tf (VTune\231 Profiler on the command line) Tj /F1 10 Tf ( to collect and analyze gpu_hotspots. You) Tj T* 0 Tw .990227 Tw (will learn how to collect performance metrics and explore the results with the HTML output rendered inside of the) Tj T* 0 Tw (notebook. This module is meant for exploration and familiarization. It does not require any code modification.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 120.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F2 12 Tf 14.4 TL (Learning Objectives) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 108.2394 cm
Q
q
1 0 0 1 40.01575 108.2394 cm
Q
q
1 0 0 1 40.01575 96.23937 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Profile a SYCL application using the VTune profiling tool on Intel\256 DevCloud) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 90.23937 cm
Q
q
1 0 0 1 40.01575 78.23937 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Understand the basics of VTune command-line options for collecting data and generating reports.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 78.23937 cm
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (5\) Next step: SYCL Essentials) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (46) Tj T* ET
Q
Q
 
endstream
endobj
596 0 obj
<<
/Length 9308
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 770.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F2 14 Tf .12549 .262745 .360784 rg (Module 7: DPCPP Library) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 728.2394 cm
q
BT 1 0 0 1 0 26 Tm .8057 Tw 12 TL /F1 10 Tf 0 0 0 rg (This module demonstrates using ) Tj /F2 10 Tf (Intel\256 oneAPI DPC++ Library \(oneDPL\)) Tj /F1 10 Tf ( for heterogeneous computing. You will) Tj T* 0 Tw .210256 Tw (learn how to use various Parallel STL algorithms for heterogeneous computing and also look at a gamma-correction) Tj T* 0 Tw (sample code that uses oneDPL.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 697.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F2 12 Tf 14.4 TL (Learning Objectives) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 685.8394 cm
Q
q
1 0 0 1 40.01575 685.8394 cm
Q
q
1 0 0 1 40.01575 673.8394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Explain oneDPL Parallel API Algorithms with examples.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 667.8394 cm
Q
q
1 0 0 1 40.01575 655.8394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Explain oneDPL Parallel API Iterators with examples.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 649.8394 cm
Q
q
1 0 0 1 40.01575 637.8394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Explain oneDPL Extension API Utility classes with examples.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 637.8394 cm
Q
q
1 0 0 1 40.01575 605.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F2 14 Tf .12549 .262745 .360784 rg (Module 8: DPCPP Reduction) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 575.0394 cm
q
BT 1 0 0 1 0 14 Tm .263606 Tw 12 TL /F1 10 Tf 0 0 0 rg (This module demonstrates how reductions can be parallelized. You will learn about the ) Tj /F2 10 Tf (reduction group algorithm) Tj /F1 10 Tf  T* 0 Tw (and ) Tj /F2 10 Tf (kernel reductions in SYCL) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 544.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F2 12 Tf 14.4 TL (Learning Objectives) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 532.6394 cm
Q
q
1 0 0 1 40.01575 532.6394 cm
Q
q
1 0 0 1 40.01575 520.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Understand how reductions can be performed with parallel kernels.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 514.6394 cm
Q
q
1 0 0 1 40.01575 502.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Take advantage of the reduce group function to make reductions at the sub_group and work_group level.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 496.6394 cm
Q
q
1 0 0 1 40.01575 484.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Use the reduction object to simplify reduction with parallel kernels.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 478.6394 cm
Q
q
1 0 0 1 40.01575 466.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Use multiple reductions in a single kernel.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 466.6394 cm
Q
q
1 0 0 1 40.01575 433.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F2 14 Tf .12549 .262745 .360784 rg (Module 9: DPCPP Buffers And Accessors In Depth) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 391.8394 cm
q
BT 1 0 0 1 0 26 Tm .72377 Tw 12 TL /F1 10 Tf 0 0 0 rg (This module demonstrates various ways to create ) Tj /F2 10 Tf (buffers in SYCL) Tj /F1 10 Tf (. You will learn how to use ) Tj /F2 10 Tf (sub-buffers) Tj /F1 10 Tf (, buffer) Tj T* 0 Tw 2.136469 Tw (properties, and when to use_host_ptr, set_final_data, and set_write_data. You will also learn about accessors,) Tj T* 0 Tw (host_accessors, and their use cases.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 361.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F2 12 Tf 14.4 TL (Learning Objectives) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 349.4394 cm
Q
q
1 0 0 1 40.01575 349.4394 cm
Q
q
1 0 0 1 40.01575 337.4394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Explain buffers and accessors in depth.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 331.4394 cm
Q
q
1 0 0 1 40.01575 319.4394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Understand how to create and use sub-buffers.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 313.4394 cm
Q
q
1 0 0 1 40.01575 301.4394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Explain buffer properties and when to use_host_ptr, set_final_data, and set_write_data.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 295.4394 cm
Q
q
1 0 0 1 40.01575 283.4394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Explain accessors and the modes of accessor creation.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 277.4394 cm
Q
q
1 0 0 1 40.01575 265.4394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Explain host accessors and their different use cases.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 265.4394 cm
Q
q
1 0 0 1 40.01575 232.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F2 14 Tf .12549 .262745 .360784 rg (Module 10: DPCPP Graphs Scheduling Data Management) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 178.6394 cm
q
BT 1 0 0 1 0 38 Tm 1.78094 Tw 12 TL /F1 10 Tf 0 0 0 rg (This module demonstrates how to utilize USM, buffers, and accessors to apply memory management and take) Tj T* 0 Tw .799006 Tw (control over ) Tj /F2 10 Tf (data movement implicitly and explicitly) Tj /F1 10 Tf ( to help utilize different types of data dependencies that are) Tj T* 0 Tw 2.681417 Tw (important for ensuring the execution of graph scheduling. You will also learn to select the correct modes of) Tj T* 0 Tw /F2 10 Tf (dependencies in graphs scheduling) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 148.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F2 12 Tf 14.4 TL (Learning Objectives) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 136.2394 cm
Q
q
1 0 0 1 40.01575 136.2394 cm
Q
q
1 0 0 1 40.01575 112.2394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 2.012435 Tw (Utilize USM, buffers, and accessors to apply memory management and take control over data movement) Tj T* 0 Tw (implicitly and explicitly.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 106.2394 cm
Q
q
1 0 0 1 40.01575 94.23937 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Utilize different types of data dependencies that are important for ensuring the execution of graph scheduling.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 88.23937 cm
Q
q
1 0 0 1 40.01575 76.23937 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Select the correct modes of dependencies in graphs scheduling.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 76.23937 cm
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (5\) Next step: SYCL Essentials) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (47) Tj T* ET
Q
Q
 
endstream
endobj
597 0 obj
<<
/Length 4318
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 770.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F2 14 Tf .12549 .262745 .360784 rg (Module 11: Intel\256 Distribution for GDB) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 752.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (This module demonstrates how to use Intel\256 Distribution for GDB to debug kernels running on GPUs.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 721.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F2 12 Tf 14.4 TL (Learning Objectives) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 709.8394 cm
Q
q
1 0 0 1 40.01575 709.8394 cm
Q
q
1 0 0 1 40.01575 697.8394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Show how Intel Distribution for GDB can help you debug GPU kernels.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 691.8394 cm
Q
q
1 0 0 1 40.01575 679.8394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Run Intel Distribution for GDB.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 673.8394 cm
Q
q
1 0 0 1 40.01575 661.8394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Understand inferiors, threads, and SIMD lanes as shown in GDB.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 655.8394 cm
Q
q
1 0 0 1 40.01575 643.8394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Use different methods to examine local variables for different threads and lanes.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 643.8394 cm
Q
q
1 0 0 1 40.01575 611.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F2 14 Tf .12549 .262745 .360784 rg (Module 12: DPCPP Local Memory And Atomics) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 569.0394 cm
q
BT 1 0 0 1 0 26 Tm .804358 Tw 12 TL /F1 10 Tf 0 0 0 rg (This module demonstrates how to utilize a device's ) Tj /F2 10 Tf (shared local memory) Tj /F1 10 Tf ( to reduce latency in accessing data for) Tj T* 0 Tw 1.073864 Tw (kernel computation. The module also introduces ) Tj /F2 10 Tf (atomic operations) Tj /F1 10 Tf (, which help avoid data race conditions when) Tj T* 0 Tw (multiple work items are updating the same memory object.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 538.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F2 12 Tf 14.4 TL (Learning Objectives) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 526.6394 cm
Q
q
1 0 0 1 40.01575 526.6394 cm
Q
q
1 0 0 1 40.01575 514.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Use local memory to avoid repeated global memory access.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 508.6394 cm
Q
q
1 0 0 1 40.01575 496.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Understand the usage of group barriers to synchronize all work items.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 490.6394 cm
Q
q
1 0 0 1 40.01575 478.6394 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Use atomic operations to perform reduction.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 40.01575 478.6394 cm
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (5\) Next step: SYCL Essentials) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (48) Tj T* ET
Q
Q
 
endstream
endobj
598 0 obj
<<
/Nums [ 0 599 0 R 1 600 0 R 2 601 0 R 3 602 0 R 4 603 0 R 
  5 604 0 R 6 605 0 R 7 606 0 R 8 607 0 R 9 608 0 R 
  10 609 0 R 11 610 0 R 12 611 0 R 13 612 0 R 14 613 0 R 
  15 614 0 R 16 615 0 R 17 616 0 R 18 617 0 R 19 618 0 R 
  20 619 0 R 21 620 0 R 22 621 0 R 23 622 0 R 24 623 0 R 
  25 624 0 R 26 625 0 R 27 626 0 R 28 627 0 R 29 628 0 R 
  30 629 0 R 31 630 0 R 32 631 0 R 33 632 0 R 34 633 0 R 
  35 634 0 R 36 635 0 R 37 636 0 R 38 637 0 R 39 638 0 R 
  40 639 0 R 41 640 0 R 42 641 0 R 43 642 0 R 44 643 0 R 
  45 644 0 R 46 645 0 R 47 646 0 R 48 647 0 R 49 648 0 R 
  50 649 0 R 51 650 0 R 52 651 0 R 53 652 0 R ]
>>
endobj
599 0 obj
<<
/S /D /St 1
>>
endobj
600 0 obj
<<
/S /D /St 2
>>
endobj
601 0 obj
<<
/S /r /St 1
>>
endobj
602 0 obj
<<
/S /r /St 2
>>
endobj
603 0 obj
<<
/S /r /St 3
>>
endobj
604 0 obj
<<
/S /r /St 4
>>
endobj
605 0 obj
<<
/S /D /St 1
>>
endobj
606 0 obj
<<
/S /D /St 2
>>
endobj
607 0 obj
<<
/S /D /St 3
>>
endobj
608 0 obj
<<
/S /D /St 4
>>
endobj
609 0 obj
<<
/S /D /St 5
>>
endobj
610 0 obj
<<
/S /D /St 6
>>
endobj
611 0 obj
<<
/S /D /St 7
>>
endobj
612 0 obj
<<
/S /D /St 8
>>
endobj
613 0 obj
<<
/S /D /St 9
>>
endobj
614 0 obj
<<
/S /D /St 10
>>
endobj
615 0 obj
<<
/S /D /St 11
>>
endobj
616 0 obj
<<
/S /D /St 12
>>
endobj
617 0 obj
<<
/S /D /St 13
>>
endobj
618 0 obj
<<
/S /D /St 14
>>
endobj
619 0 obj
<<
/S /D /St 15
>>
endobj
620 0 obj
<<
/S /D /St 16
>>
endobj
621 0 obj
<<
/S /D /St 17
>>
endobj
622 0 obj
<<
/S /D /St 18
>>
endobj
623 0 obj
<<
/S /D /St 19
>>
endobj
624 0 obj
<<
/S /D /St 20
>>
endobj
625 0 obj
<<
/S /D /St 21
>>
endobj
626 0 obj
<<
/S /D /St 22
>>
endobj
627 0 obj
<<
/S /D /St 23
>>
endobj
628 0 obj
<<
/S /D /St 24
>>
endobj
629 0 obj
<<
/S /D /St 25
>>
endobj
630 0 obj
<<
/S /D /St 26
>>
endobj
631 0 obj
<<
/S /D /St 27
>>
endobj
632 0 obj
<<
/S /D /St 28
>>
endobj
633 0 obj
<<
/S /D /St 29
>>
endobj
634 0 obj
<<
/S /D /St 30
>>
endobj
635 0 obj
<<
/S /D /St 31
>>
endobj
636 0 obj
<<
/S /D /St 32
>>
endobj
637 0 obj
<<
/S /D /St 33
>>
endobj
638 0 obj
<<
/S /D /St 34
>>
endobj
639 0 obj
<<
/S /D /St 35
>>
endobj
640 0 obj
<<
/S /D /St 36
>>
endobj
641 0 obj
<<
/S /D /St 37
>>
endobj
642 0 obj
<<
/S /D /St 38
>>
endobj
643 0 obj
<<
/S /D /St 39
>>
endobj
644 0 obj
<<
/S /D /St 40
>>
endobj
645 0 obj
<<
/S /D /St 41
>>
endobj
646 0 obj
<<
/S /D /St 42
>>
endobj
647 0 obj
<<
/S /D /St 43
>>
endobj
648 0 obj
<<
/S /D /St 44
>>
endobj
649 0 obj
<<
/S /D /St 45
>>
endobj
650 0 obj
<<
/S /D /St 46
>>
endobj
651 0 obj
<<
/S /D /St 47
>>
endobj
652 0 obj
<<
/S /D /St 48
>>
endobj
xref
0 653
0000000000 65535 f 
0000000073 00000 n 
0000000162 00000 n 
0000000269 00000 n 
0000000381 00000 n 
0000000588 00000 n 
0000000795 00000 n 
0000000964 00000 n 
0000001133 00000 n 
0000001302 00000 n 
0000001471 00000 n 
0000001641 00000 n 
0000001811 00000 n 
0000001981 00000 n 
0000002151 00000 n 
0000002321 00000 n 
0000002491 00000 n 
0000002661 00000 n 
0000002831 00000 n 
0000003001 00000 n 
0000003171 00000 n 
0000003341 00000 n 
0000003511 00000 n 
0000003681 00000 n 
0000003851 00000 n 
0000004021 00000 n 
0000004191 00000 n 
0000004361 00000 n 
0000004531 00000 n 
0000004701 00000 n 
0000004871 00000 n 
0000005041 00000 n 
0000005211 00000 n 
0000005381 00000 n 
0000005551 00000 n 
0000005721 00000 n 
0000005891 00000 n 
0000006061 00000 n 
0000006231 00000 n 
0000006401 00000 n 
0000006571 00000 n 
0000006741 00000 n 
0000006911 00000 n 
0000007081 00000 n 
0000007251 00000 n 
0000007421 00000 n 
0000007591 00000 n 
0000007761 00000 n 
0000007931 00000 n 
0000008101 00000 n 
0000008271 00000 n 
0000008441 00000 n 
0000008611 00000 n 
0000008781 00000 n 
0000008951 00000 n 
0000009121 00000 n 
0000009291 00000 n 
0000009461 00000 n 
0000009631 00000 n 
0000009801 00000 n 
0000009971 00000 n 
0000010141 00000 n 
0000010311 00000 n 
0000010481 00000 n 
0000010651 00000 n 
0000010821 00000 n 
0000010991 00000 n 
0000011161 00000 n 
0000011331 00000 n 
0000011501 00000 n 
0000011671 00000 n 
0000011841 00000 n 
0000012011 00000 n 
0000012181 00000 n 
0000012351 00000 n 
0000012521 00000 n 
0000012691 00000 n 
0000012861 00000 n 
0000013031 00000 n 
0000013201 00000 n 
0000013371 00000 n 
0000013541 00000 n 
0000013711 00000 n 
0000013881 00000 n 
0000014051 00000 n 
0000014221 00000 n 
0000014391 00000 n 
0000014561 00000 n 
0000014731 00000 n 
0000014901 00000 n 
0000015071 00000 n 
0000015241 00000 n 
0000015411 00000 n 
0000015581 00000 n 
0000015751 00000 n 
0000016607 00000 n 
0000016777 00000 n 
0000016947 00000 n 
0000017117 00000 n 
0000017287 00000 n 
0000017457 00000 n 
0000017628 00000 n 
0000017799 00000 n 
0000017970 00000 n 
0000018141 00000 n 
0000018312 00000 n 
0000018483 00000 n 
0000018654 00000 n 
0000018825 00000 n 
0000018996 00000 n 
0000019167 00000 n 
0000019338 00000 n 
0000019509 00000 n 
0000019680 00000 n 
0000019851 00000 n 
0000020022 00000 n 
0000020193 00000 n 
0000020364 00000 n 
0000020535 00000 n 
0000020706 00000 n 
0000020877 00000 n 
0000021048 00000 n 
0000021219 00000 n 
0000021390 00000 n 
0000021561 00000 n 
0000021732 00000 n 
0000021903 00000 n 
0000022074 00000 n 
0000022245 00000 n 
0000022416 00000 n 
0000022587 00000 n 
0000022758 00000 n 
0000022929 00000 n 
0000023100 00000 n 
0000023271 00000 n 
0000023442 00000 n 
0000023613 00000 n 
0000023784 00000 n 
0000023955 00000 n 
0000024126 00000 n 
0000024297 00000 n 
0000024468 00000 n 
0000024639 00000 n 
0000024810 00000 n 
0000024981 00000 n 
0000025152 00000 n 
0000025323 00000 n 
0000025494 00000 n 
0000025665 00000 n 
0000025836 00000 n 
0000026007 00000 n 
0000026178 00000 n 
0000026349 00000 n 
0000026520 00000 n 
0000026691 00000 n 
0000026862 00000 n 
0000027033 00000 n 
0000027204 00000 n 
0000027375 00000 n 
0000027546 00000 n 
0000027717 00000 n 
0000027888 00000 n 
0000028059 00000 n 
0000028230 00000 n 
0000028401 00000 n 
0000028572 00000 n 
0000028743 00000 n 
0000028914 00000 n 
0000029085 00000 n 
0000029256 00000 n 
0000029427 00000 n 
0000029598 00000 n 
0000029769 00000 n 
0000029940 00000 n 
0000030111 00000 n 
0000030282 00000 n 
0000030453 00000 n 
0000030624 00000 n 
0000030795 00000 n 
0000030966 00000 n 
0000031137 00000 n 
0000031308 00000 n 
0000031479 00000 n 
0000031650 00000 n 
0000031821 00000 n 
0000031992 00000 n 
0000032163 00000 n 
0000032334 00000 n 
0000033313 00000 n 
0000033484 00000 n 
0000033655 00000 n 
0000033826 00000 n 
0000033997 00000 n 
0000034168 00000 n 
0000034339 00000 n 
0000034510 00000 n 
0000034681 00000 n 
0000034852 00000 n 
0000035023 00000 n 
0000035194 00000 n 
0000035365 00000 n 
0000035536 00000 n 
0000035707 00000 n 
0000035814 00000 n 
0000035985 00000 n 
0000036156 00000 n 
0000036327 00000 n 
0000036498 00000 n 
0000036669 00000 n 
0000036840 00000 n 
0000037011 00000 n 
0000037182 00000 n 
0000037353 00000 n 
0000037524 00000 n 
0000037695 00000 n 
0000037866 00000 n 
0000038037 00000 n 
0000038208 00000 n 
0000038379 00000 n 
0000038550 00000 n 
0000038721 00000 n 
0000038892 00000 n 
0000039063 00000 n 
0000039234 00000 n 
0000039405 00000 n 
0000039576 00000 n 
0000039747 00000 n 
0000039918 00000 n 
0000040089 00000 n 
0000040260 00000 n 
0000040431 00000 n 
0000040602 00000 n 
0000040773 00000 n 
0000040944 00000 n 
0000041115 00000 n 
0000041286 00000 n 
0000041457 00000 n 
0000041628 00000 n 
0000041799 00000 n 
0000041970 00000 n 
0000042141 00000 n 
0000042312 00000 n 
0000042483 00000 n 
0000042654 00000 n 
0000042825 00000 n 
0000042996 00000 n 
0000043167 00000 n 
0000043338 00000 n 
0000043509 00000 n 
0000043680 00000 n 
0000043851 00000 n 
0000044022 00000 n 
0000044193 00000 n 
0000044364 00000 n 
0000044535 00000 n 
0000044706 00000 n 
0000044877 00000 n 
0000045048 00000 n 
0000045219 00000 n 
0000045390 00000 n 
0000045561 00000 n 
0000045732 00000 n 
0000045903 00000 n 
0000046074 00000 n 
0000046245 00000 n 
0000046416 00000 n 
0000046587 00000 n 
0000046758 00000 n 
0000046929 00000 n 
0000047100 00000 n 
0000047271 00000 n 
0000047442 00000 n 
0000047613 00000 n 
0000047784 00000 n 
0000047955 00000 n 
0000048126 00000 n 
0000048297 00000 n 
0000048468 00000 n 
0000048639 00000 n 
0000048810 00000 n 
0000048981 00000 n 
0000049152 00000 n 
0000050136 00000 n 
0000050307 00000 n 
0000050478 00000 n 
0000050649 00000 n 
0000050820 00000 n 
0000050991 00000 n 
0000051162 00000 n 
0000051333 00000 n 
0000051504 00000 n 
0000051675 00000 n 
0000051846 00000 n 
0000052017 00000 n 
0000052188 00000 n 
0000052359 00000 n 
0000052530 00000 n 
0000052701 00000 n 
0000052872 00000 n 
0000053043 00000 n 
0000053214 00000 n 
0000053385 00000 n 
0000053556 00000 n 
0000053727 00000 n 
0000053898 00000 n 
0000054069 00000 n 
0000054240 00000 n 
0000054411 00000 n 
0000054582 00000 n 
0000054753 00000 n 
0000054924 00000 n 
0000055095 00000 n 
0000055266 00000 n 
0000055437 00000 n 
0000055608 00000 n 
0000055779 00000 n 
0000055950 00000 n 
0000056121 00000 n 
0000056292 00000 n 
0000056463 00000 n 
0000056634 00000 n 
0000056805 00000 n 
0000056976 00000 n 
0000057526 00000 n 
0000057735 00000 n 
0000057944 00000 n 
0000058153 00000 n 
0000058362 00000 n 
0000058545 00000 n 
0000058660 00000 n 
0000058772 00000 n 
0000059001 00000 n 
0000059210 00000 n 
0000059419 00000 n 
0000059628 00000 n 
0000059837 00000 n 
0000060046 00000 n 
0000060255 00000 n 
0000060464 00000 n 
0000060673 00000 n 
0000060882 00000 n 
0000101473 00000 n 
0000101969 00000 n 
0000102243 00000 n 
0000201301 00000 n 
0000202143 00000 n 
0000202417 00000 n 
0000202626 00000 n 
0000202743 00000 n 
0000202952 00000 n 
0000203161 00000 n 
0000203370 00000 n 
0000203579 00000 n 
0000203788 00000 n 
0000203997 00000 n 
0000204206 00000 n 
0000209395 00000 n 
0000209676 00000 n 
0000209950 00000 n 
0000210159 00000 n 
0000210368 00000 n 
0000217356 00000 n 
0000217642 00000 n 
0000217916 00000 n 
0000218125 00000 n 
0000218334 00000 n 
0000218543 00000 n 
0000218752 00000 n 
0000218961 00000 n 
0000219170 00000 n 
0000219379 00000 n 
0000219588 00000 n 
0000219797 00000 n 
0000220006 00000 n 
0000220215 00000 n 
0000220424 00000 n 
0000220633 00000 n 
0000220842 00000 n 
0000221051 00000 n 
0000221260 00000 n 
0000221505 00000 n 
0000221734 00000 n 
0000221943 00000 n 
0000222152 00000 n 
0000222361 00000 n 
0000222471 00000 n 
0000222730 00000 n 
0000222809 00000 n 
0000222949 00000 n 
0000223122 00000 n 
0000223321 00000 n 
0000223446 00000 n 
0000223587 00000 n 
0000223760 00000 n 
0000223950 00000 n 
0000224101 00000 n 
0000224214 00000 n 
0000224373 00000 n 
0000224493 00000 n 
0000224639 00000 n 
0000224773 00000 n 
0000224924 00000 n 
0000225079 00000 n 
0000225192 00000 n 
0000225367 00000 n 
0000225527 00000 n 
0000225643 00000 n 
0000225776 00000 n 
0000225910 00000 n 
0000226031 00000 n 
0000226220 00000 n 
0000226341 00000 n 
0000226492 00000 n 
0000226653 00000 n 
0000226787 00000 n 
0000226936 00000 n 
0000227053 00000 n 
0000227229 00000 n 
0000227398 00000 n 
0000227557 00000 n 
0000227688 00000 n 
0000227814 00000 n 
0000228017 00000 n 
0000228140 00000 n 
0000228297 00000 n 
0000228426 00000 n 
0000228575 00000 n 
0000228751 00000 n 
0000228869 00000 n 
0000229012 00000 n 
0000229205 00000 n 
0000229324 00000 n 
0000229510 00000 n 
0000229633 00000 n 
0000229778 00000 n 
0000229927 00000 n 
0000230074 00000 n 
0000230263 00000 n 
0000230377 00000 n 
0000230498 00000 n 
0000230611 00000 n 
0000230787 00000 n 
0000230946 00000 n 
0000231122 00000 n 
0000231234 00000 n 
0000231359 00000 n 
0000231481 00000 n 
0000231657 00000 n 
0000231769 00000 n 
0000231894 00000 n 
0000232016 00000 n 
0000232176 00000 n 
0000232288 00000 n 
0000232399 00000 n 
0000232571 00000 n 
0000232730 00000 n 
0000232838 00000 n 
0000233031 00000 n 
0000233140 00000 n 
0000233249 00000 n 
0000233362 00000 n 
0000233543 00000 n 
0000233661 00000 n 
0000233828 00000 n 
0000233939 00000 n 
0000234067 00000 n 
0000234242 00000 n 
0000234360 00000 n 
0000234560 00000 n 
0000234704 00000 n 
0000234838 00000 n 
0000234985 00000 n 
0000235114 00000 n 
0000235253 00000 n 
0000235421 00000 n 
0000235539 00000 n 
0000235716 00000 n 
0000235836 00000 n 
0000235970 00000 n 
0000236111 00000 n 
0000236254 00000 n 
0000236385 00000 n 
0000236502 00000 n 
0000236706 00000 n 
0000236824 00000 n 
0000236956 00000 n 
0000237099 00000 n 
0000237212 00000 n 
0000237413 00000 n 
0000237531 00000 n 
0000237698 00000 n 
0000237856 00000 n 
0000238008 00000 n 
0000238121 00000 n 
0000238353 00000 n 
0000238471 00000 n 
0000238615 00000 n 
0000238794 00000 n 
0000238916 00000 n 
0000239051 00000 n 
0000239198 00000 n 
0000239322 00000 n 
0000239456 00000 n 
0000239569 00000 n 
0000239733 00000 n 
0000239892 00000 n 
0000240004 00000 n 
0000240127 00000 n 
0000240326 00000 n 
0000240444 00000 n 
0000240597 00000 n 
0000240741 00000 n 
0000240897 00000 n 
0000241051 00000 n 
0000241210 00000 n 
0000241386 00000 n 
0000241530 00000 n 
0000241663 00000 n 
0000241841 00000 n 
0000241978 00000 n 
0000242161 00000 n 
0000242272 00000 n 
0000242466 00000 n 
0000242577 00000 n 
0000242775 00000 n 
0000242886 00000 n 
0000243073 00000 n 
0000243184 00000 n 
0000243372 00000 n 
0000243483 00000 n 
0000243672 00000 n 
0000243783 00000 n 
0000243967 00000 n 
0000244078 00000 n 
0000244264 00000 n 
0000244375 00000 n 
0000244582 00000 n 
0000244693 00000 n 
0000244904 00000 n 
0000245015 00000 n 
0000245217 00000 n 
0000245328 00000 n 
0000245516 00000 n 
0000245627 00000 n 
0000246125 00000 n 
0000247055 00000 n 
0000247181 00000 n 
0000257874 00000 n 
0000268600 00000 n 
0000279656 00000 n 
0000284620 00000 n 
0000291529 00000 n 
0000299578 00000 n 
0000306624 00000 n 
0000317401 00000 n 
0000327471 00000 n 
0000337298 00000 n 
0000346642 00000 n 
0000358411 00000 n 
0000367645 00000 n 
0000381413 00000 n 
0000394245 00000 n 
0000405091 00000 n 
0000413341 00000 n 
0000424089 00000 n 
0000431565 00000 n 
0000434867 00000 n 
0000444177 00000 n 
0000453985 00000 n 
0000464805 00000 n 
0000475445 00000 n 
0000488450 00000 n 
0000500752 00000 n 
0000514982 00000 n 
0000525599 00000 n 
0000534451 00000 n 
0000545062 00000 n 
0000557347 00000 n 
0000567778 00000 n 
0000580989 00000 n 
0000593697 00000 n 
0000604070 00000 n 
0000614220 00000 n 
0000621934 00000 n 
0000629634 00000 n 
0000639920 00000 n 
0000651193 00000 n 
0000660357 00000 n 
0000669030 00000 n 
0000676478 00000 n 
0000688866 00000 n 
0000701027 00000 n 
0000714791 00000 n 
0000727151 00000 n 
0000735677 00000 n 
0000743743 00000 n 
0000753006 00000 n 
0000762367 00000 n 
0000766738 00000 n 
0000767385 00000 n 
0000767420 00000 n 
0000767455 00000 n 
0000767490 00000 n 
0000767525 00000 n 
0000767560 00000 n 
0000767595 00000 n 
0000767630 00000 n 
0000767665 00000 n 
0000767700 00000 n 
0000767735 00000 n 
0000767770 00000 n 
0000767805 00000 n 
0000767840 00000 n 
0000767875 00000 n 
0000767910 00000 n 
0000767946 00000 n 
0000767982 00000 n 
0000768018 00000 n 
0000768054 00000 n 
0000768090 00000 n 
0000768126 00000 n 
0000768162 00000 n 
0000768198 00000 n 
0000768234 00000 n 
0000768270 00000 n 
0000768306 00000 n 
0000768342 00000 n 
0000768378 00000 n 
0000768414 00000 n 
0000768450 00000 n 
0000768486 00000 n 
0000768522 00000 n 
0000768558 00000 n 
0000768594 00000 n 
0000768630 00000 n 
0000768666 00000 n 
0000768702 00000 n 
0000768738 00000 n 
0000768774 00000 n 
0000768810 00000 n 
0000768846 00000 n 
0000768882 00000 n 
0000768918 00000 n 
0000768954 00000 n 
0000768990 00000 n 
0000769026 00000 n 
0000769062 00000 n 
0000769098 00000 n 
0000769134 00000 n 
0000769170 00000 n 
0000769206 00000 n 
0000769242 00000 n 
0000769278 00000 n 
trailer
<<
/ID 
[<30d776f81af329d25f522adfc66c27df><30d776f81af329d25f522adfc66c27df>]
% ReportLab generated PDF document -- digest (http://www.reportlab.com)

/Info 385 0 R
/Root 384 0 R
/Size 653
>>
startxref
769314
%%EOF
